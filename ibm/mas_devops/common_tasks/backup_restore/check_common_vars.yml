---
# Load default variables
# -----------------------------------------------------------------------------
- name: "Load common variables"
  include_vars: "{{ role_path }}/../../common_vars/backup_restore.yml"

- name: "Set fact: internal used common variables"
  set_fact:
    # ONLY FOR DEV
    __masbr_dev_create_env_file: "{{ lookup('env', '__MASBR_DEV_CREATE_ENV_FILE') | default(false, true) | bool }}"

    # Whether the tasks are already running in a k8s Job/CronJob
    masbr_running_in_task_job: "{{ lookup('env', 'MASBR_RUNNING_IN_TASK_JOB') | default(false, true) | bool }}"

    # Temp folder in the Pod for backup/restore
    masbr_pod_temp_folder: "/tmp/masbr"

    # Timestamp display format
    masbr_timestamp_format: "%Y%m%d%H%M%S"

- name: "Set fact: job lock file"
  set_fact:
    masbr_pod_lock_file: "{{masbr_pod_temp_folder}}/running.lock"

# Get 'masbr_job_version' in below order:
#   1. get from input 'masbr_job_version'
#   2. if not set, get from env 'MASBR_JOB_VERSION'
#   3. For schedule, always create a new version.
- name: "Get job version from env"
  when: masbr_job_version is not defined
  set_fact:
    masbr_job_version: "{{ lookup('env', 'MASBR_JOB_VERSION') | default(masbr_timestamp_format | strftime, true) }}"


# Storage location
# -----------------------------------------------------------------------------
- name: "Set fact: default values of storage location variables"
  set_fact:
    masbr_use_local_storage: false
    masbr_use_cloud_storage: false

# Specified local storage location
- name: "Fail if masbr_storage_local_folder is not provided"
  assert:
    that: masbr_storage_local_folder is defined and masbr_storage_local_folder != ""
    fail_msg: "masbr_storage_local_folder is required"

- name: "Set fact: use local backup storage"
  set_fact:
    masbr_use_local_storage: true

- name: "Debug: variables for local backup storage"
  debug:
    msg:
      - "Use local storage .................. {{ masbr_use_local_storage }}"
      - "Local storage folder ............... {{ masbr_storage_local_folder }}"


# Sending notification
# -----------------------------------------------------------------------------
- name: "Check variables for Slack"
  when: masbr_slack_enabled
  block:
    - name: "Fail if masbr_slack_token is not provided"
      assert:
        that: masbr_slack_token is defined and masbr_slack_token != ""
        fail_msg: "masbr_slack_token is required when masbr_slack_enabled set to true"

    - name: "Fail if masbr_slack_channel is not provided"
      assert:
        that: masbr_slack_channel is defined and masbr_slack_channel != ""
        fail_msg: "masbr_slack_channel is required when masbr_slack_enabled set to true"

    - name: "Debug: variables for sending Slack notification"
      debug:
        msg:
          - "Slack channel ...................... {{ masbr_slack_channel }}"
          - "Slack user ......................... {{ masbr_slack_user }}"
          - "Notification level ................. {{ masbr_slack_level }} ({{ masbr_notification_levels[masbr_slack_level] | join(',') }})"

    - name: "Set fact: reset masbr_sent_notifications"
      set_fact:
        masbr_sent_notifications: []
