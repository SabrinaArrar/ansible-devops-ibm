---
# Create k8s job to copy files between pod and cloud storage
# Related facts (name staring with 'masbr_cf_'):
#   masbr_cf_job_type
#   masbr_cf_job_name
#   masbr_cf_from_job_name
#   masbr_cf_namespace
#   masbr_cf_are_pvc_paths: true|false
#   masbr_cf_pod_name: only used when masbr_cf_are_pvc_paths=false
#   masbr_cf_container_name: only used when masbr_cf_are_pvc_paths=false
#   masbr_cf_affinity: true|false
#   masbr_cf_pvc_name
#   masbr_cf_pvc_mount_path
#   masbr_cf_pvc_sub_path
#   masbr_cf_paths
#   masbr_cf_delete_dest: true|false, only used when coping files from cloud storage to pvc


# Get pod information
# -----------------------------------------------------------------------------
- name: "Get pod information"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    name: "{{ masbr_cf_pod_name }}"
    namespace: "{{ masbr_cf_namespace }}"
  register: _pod_info

- name: "Set fact: pod infomation"
  set_fact:
    masbr_cf_service_account_name: "{{ _pod_info.resources[0].spec.serviceAccountName | default('') }}"
    masbr_cf_service_account: "{{ _pod_info.resources[0].spec.serviceAccount | default('') }}"
    masbr_cf_pod_security_context: "{{ _pod_info.resources[0].spec.securityContext }}"
    masbr_cf_container_security_context: >-
      {{ _pod_info.resources[0] | json_query('spec.containers[?name==`' + masbr_cf_container_name + '`].securityContext') | first }}


- name: "Debug: pod information"
  debug:
    msg:
      - "Pod service account .................... {{ masbr_cf_service_account }}"
      - "Pod service account name ............... {{ masbr_cf_service_account_name }}"
      - "Pod security context ................... {{ masbr_cf_pod_security_context }}"
      - "Container name ......................... {{ masbr_cf_container_name }}"
      - "Container security context ............. {{ masbr_cf_container_security_context }}"


# Create ConfigMap
# -----------------------------------------------------------------------------
- name: "Get rclone config"
  shell: >
    cat {{ masbr_storage_cloud_rclone_file }}
  register: _rclone_config_content

- name: "Create configmap to save rclone config"
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ masbr_cf_k8s_name }}"
        namespace: "{{ masbr_cf_namespace }}"
        labels:
          mas.ibm.com/masbr: ""
          masbr-type: "copy"
          masbr-job: "{{ masbr_job_name }}"
      data:
        rclone.conf: "{{ _rclone_config_content.stdout }}"
    wait: true

- name: "Set fact: reset masbr_cf_env"
  set_fact:
    masbr_cf_env: []

- name: "Set fact: add rclone config file to env variables"
  set_fact:
    masbr_cf_env: >-
      {{ masbr_cf_env + [
        {'name': 'MASBR_STORAGE_CLOUD_RCLONE_FILE', 'value': '/mnt/configmap/rclone.conf'},
        {'name': 'RCLONE_VERBOSE', 'value': '2'}
      ] }}


# Create Job
# -----------------------------------------------------------------------------
- name: "Create copying file Job"
  kubernetes.core.k8s:
    template: "{{ role_path }}/../../common_tasks/templates/backup_restore/copy_cloud_files_job.yml.j2"
    state: present
    wait: true


# Save Job log
# -----------------------------------------------------------------------------
- name: "Save copy file Job log"
  block:
    - name: "Wait for Job to be Completed or Failed (10s delay)"
      kubernetes.core.k8s_info:
        api_version: batch/v1
        kind: Job
        name: "{{ masbr_cf_k8s_name }}"
        namespace: "{{ masbr_cf_namespace }}"
      register: _job_info
      until:
        - _job_info.resources is defined
        - _job_info.resources | length > 0
        - (_job_info.resources | json_query('[*].status.conditions[?type==`Complete`][].status') | select ('match','True') | list | length == 1) or
          (_job_info.resources | json_query('[*].status.conditions[?type==`Failed`][].status') | select ('match','True') | list | length == 1)
      retries: "{{ (masbr_copy_timeout_sec|int // 10) | int  }}"
      delay: 10

  always:
    - name: "Get Job pod information"
      shell: >-
        mkdir -p {{ masbr_local_job_folder }}/log/{{ masbr_cf_k8s_name }};
        pod_name=$(oc get pod -n {{ masbr_cf_namespace }} --no-headers=true -l job-name={{ masbr_cf_k8s_name }} | awk '{print $1}' | head -n 1);
        oc describe -n {{ masbr_cf_namespace }} pod ${pod_name} > {{ masbr_local_job_folder }}/log/{{ masbr_cf_k8s_name }}/${pod_name}-describe.txt;
        oc get -n {{ masbr_cf_namespace }} pod ${pod_name} -o yaml > {{ masbr_local_job_folder }}/log/{{ masbr_cf_k8s_name }}/${pod_name}.yaml;
        ls -lA {{ masbr_local_job_folder }}/log/{{ masbr_cf_k8s_name }}
      register: _get_log_files_output

    - name: "Debug: list Job log files"
      debug:
        msg:
          - "Local job log folder ............... {{ masbr_local_job_folder }}/log/{{ masbr_cf_k8s_name }}"
          - "{{ _get_log_files_output.stdout_lines }}"

    - name: "Set fact: copy file Job log name"
      set_fact:
        masbr_cf_log_file_name: >-
          {{ masbr_cf_k8s_name }}-describe.tar.gz

    - name: "Create a tar.gz archive of all log files"
      shell: >-
        tar -czf {{ masbr_local_job_folder }}/log/{{ masbr_cf_log_file_name }}
        -C {{ masbr_local_job_folder }}/log/{{ masbr_cf_k8s_name }} .

    - name: "Copy log file from local to storage location"
      include_tasks: "{{ role_path }}/../../common_tasks/backup_restore/copy_local_files_to_storage.yml"
      vars:
        masbr_cf_job_type: "{{ masbr_job_type }}"
        masbr_cf_job_name: "{{ masbr_job_name_final }}"
        masbr_cf_paths:
          - src_file: "log/{{ masbr_cf_log_file_name }}"
            dest_folder: "log"
