---
- hosts: localhost
  any_errors_fatal: true

# 1. Deploy & configure the cluster
# -----------------------------------------------------------------------------
- name: Deploy ROKS cluster in IBM Cloud
  import_playbook: ocp/provision-roks.yml

- name: Login & configure OCP cluster
  import_playbook: ocp/configure-ocp.yml
  vars:
    cluster_type: roks
    ibmcloud_apikey: "{{ lookup('env', 'IBMCLOUD_APIKEY') }}"


# 2. Install MongoDb
# -----------------------------------------------------------------------------
- name: Install MongoDb (Community Edition)
  import_playbook: dependencies/install-mongodb-ce.yml
  vars:
    mongodb_storage_class: ibmc-block-gold
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"


# 3. Install SLS
# -----------------------------------------------------------------------------
- name: Install SLS
  import_playbook: sls/install-sls.yml
  vars:
    sls_storage_class: ibmc-file-gold-gid
    # Default to re-using the MAS entitlement key if we do not provide a specific one for SLS
    sls_entitlement_username: "{{ lookup('env', 'SLS_ENTITLEMENT_USERNAME') | default('cp', true) }}"
    sls_entitlement_key: "{{ lookup('env', 'SLS_ENTITLEMENT_KEY') | default(lookup('env', 'IBM_ENTITLEMENT_KEY'), true) }}"

    # Use the generated mongodb configuration
    mongodb_namespace: "{{ lookup('env', 'MONGODB_NAMESPACE') | default('mongoce', True) }}"
    mongodb_cfg_file: "{{ mas_config_dir }}/mongo-{{ mongodb_namespace }}.yml"

    # Bootstrap from the mas_config_dir
    bootstrap:
      license_id: "{{ lookup('env', 'SLS_LICENSE_ID') }}"
      registration_key: "{{ lookup('env', 'SLS_REGISTRATION_KEY') }}"
      entitlement_file: "{{mas_config_dir}}/entitlement.lic"

# 4. Install BAS
# -----------------------------------------------------------------------------
- name: Install BAS
  import_playbook: bas/install-bas.yml
  vars:
    # BAS Configuration
    bas_namespace: "{{ lookup('env', 'BAS_NAMESPACE') | default('ibm-bas', true) }}"
    # TODO: Are these the right storage classes, they should not be env vars, we know we are deploying on ROKS and we know what classes are available on ROKS ... see e.g. how sls_storage_class is set.
    bas_persistent_storage: "ibmc-block-gold"
    bas_meta_storage_class: "ibmc-block-gold"

    bas_username: "{{ lookup('env', 'BAS_USERNAME') | default('basuser', true) }}"
    # TODO: Providing a default password of "password" is unacceptable, this needs to be randomly generated if not provided (and provide details in the documentation about how to look up the generated password)
    #       When fixing this, ensure it is fixed in any other playbooks with the same problem too
    bas_password: "{{ lookup('env', 'BAS_PASSWORD') | default('password', true) }}"

    # TODO: if this is related to BAS, the env vars should be prefixed BAS_ ... otherwise, why is the grafana config required under the BAS section here/why is the grafana username set to "basuser" as default?
    #       When fixing this, ensure it is fixed in any other playbooks with the same problem too
    grafana_username: "{{ lookup('env', 'GRAFANA_USERNAME') | default('basuser', true) }}"
    # TODO: Providing a default password of "password" is unacceptable, this needs to be randomly generated if not provided (and provide details in the documentation about how to look up the generated password)
    #       When fixing this, ensure it is fixed in any other playbooks with the same problem too
    grafana_password: "{{ lookup('env', 'GRAFANA_PASSWORD') | default('password', true) }}"

    # TODO: These all need to be made required env vars, these are not useable defaults
    #       When fixing this, ensure it is fixed in any other playbooks with the same problem too
    contact:
      email: "{{ lookup('env', 'BAS_CONTACT_MAIL') | default('john@mycompany.com', true) }}"
      firstName: "{{ lookup('env', 'BAS_CONTACT_FIRSTNAME') | default('John', true) }}"
      lastName: "{{ lookup('env', 'BAS_CONTACT_LASTNAME') | default('Barnes', true) }}"

    # MAS Configuration
    mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

# 5. Perform Airgap Install if required
# -----------------------------------------------------------------------------
- name: Airgap Install
  import_playbook: airgap/airgap-install.yml
  vars:
    use_internal_registry: true
    configure_network: true
    # don't copy images from these apps
    excludeImages: "ibm-mas-assist,ibm-mas-hputilities,ibm-mas-iot,ibm-mas-manage,ibm-mas-monitor,ibm-mas-predict,ibm-mas-safety,ibm-mas-visualinspection,ibm-sls"

# 6. Install & configure MAS
# -----------------------------------------------------------------------------
- name: Install & configure MAS
  import_playbook: mas/install-suite.yml
  vars:
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"
