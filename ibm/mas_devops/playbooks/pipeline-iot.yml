---
- hosts: localhost
  any_errors_fatal: true

# 1. Deploy & configure the cluster
# -----------------------------------------------------------------------------
# Task executed inside a travis stage of FVT environments
# -----------------------------------------------------------------------------
# - name: Deploy ROKS cluster in IBM Cloud
#   import_playbook: ocp/provision-roks.yml

# - name: Login & configure OCP cluster
#   import_playbook: ocp/configure-ocp.yml
#   vars:
#     cluster_type: roks
#     ibmcloud_apikey: "{{ lookup('env', 'IBMCLOUD_APIKEY') }}"

# 2. Install MongoDb
# -----------------------------------------------------------------------------
# - name: Install MongoDb (Community Edition)
#   import_playbook: dependencies/install-mongodb-ce.yml
#   vars:
#     mongodb_storage_class: ibmc-block-gold

# 3.1 Install CP4D services
#-----------------------------------------------------------------------------
# - name: Install CP4D
#   import_playbook: cp4d/install-cp4d.yml
#   vars:
#     cpd_storage_class: ibmc-file-gold-gid

# 3.2 Install Db2 Warehouse (API)
#-----------------------------------------------------------------------------
# - name: Install DB2 Warehouse (API)
#   import_playbook: cp4d/install-db2-api.yml

# # 4 Install Kafka
# #-----------------------------------------------------------------------------
# - name: Install AMQ Streams
#   import_playbook: dependencies/install-amqstreams.yml

# # 5. Install SLS
# # -----------------------------------------------------------------------------
# - name: Install SLS
#   import_playbook: sls/install-sls.yml
#   vars:
#     sls_storage_class: ibmc-file-gold-gid
#     # Default to re-using the MAS entitlement key if we do not provide a specific one for SLS
#     sls_entitlement_username: "{{ lookup('env', 'SLS_ENTITLEMENT_USERNAME') | default('cp', true) }}"
#     sls_entitlement_key: "{{ lookup('env', 'SLS_ENTITLEMENT_KEY') | default(lookup('env', 'IBM_ENTITLEMENT_KEY'), true) }}"

#     # Use the generated mongodb configuration
#     mongodb_namespace: "{{ lookup('env', 'MONGODB_NAMESPACE') | default('mongoce', True) }}"
#     mongodb_cfg_file: "{{ mas_config_dir }}/mongo-{{ mongodb_namespace }}.yml"

#     # Bootstrap from the mas_config_dir
#     bootstrap:
#       license_id: "{{ lookup('env', 'SLS_LICENSE_ID') | default('', true) }}"
#       registration_key: "{{ lookup('env', 'SLS_REGISTRATION_KEY') | default('', true) }}"
#       entitlement_file: "{{mas_config_dir}}/entitlement.lic"


# # 6. Install & configure MAS
# # -----------------------------------------------------------------------------
# - name: Install & configure MAS
#   import_playbook: mas/install-suite.yml
#   vars:
#     mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

# 6. Install & Configure IoT Tool
# -----------------------------------------------------------------------------
# - name: Install IoT
#   import_playbook: mas/install-app.yml
#   vars:
#     mas_app_id: iot

# - name: Configure IoT
#   import_playbook: mas/configure-app.yml
#   vars:
#     mas_app_id: iot
#     mas_workspace_id: masdev # as it is using the devops configu workspace

# 6. Install & Configure Safety App
# -----------------------------------------------------------------------------
- name: Install Safety
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: safety

- name: Configure Safety
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: safety
    mas_workspace_id: masdev # as it is using the devops configu workspace


# 7. Install & Configure Monitor App
# -----------------------------------------------------------------------------
# - name: Install Monitor
#   import_playbook: mas/install-app.yml
#   vars:
#     mas_app_id: monitor

# - name: Configure Monitor
#   import_playbook: mas/configure-app.yml
#   vars:
#     mas_app_id: monitor
#     mas_workspace_id: masdev # as it is using the devops configu workspace