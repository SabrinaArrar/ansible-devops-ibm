---
# ibmcloud_apikey is required in order to be able to lookup cos resources
- name: "Fail if ibmcloud_apikey is not provided"
  assert:
    that: ibmcloud_apikey is defined and ibmcloud_apikey != ""
    fail_msg: "ibmcloud_apikey property is required"

# ibmcos_instance_name is required in order to be able to create cos resources i.e credentials and buckets
- name: "Fail if ibmcos_instance_name is not provided"
  assert:
    that: ibmcos_instance_name is defined and ibmcos_instance_name != ""
    fail_msg: "ibmcos_instance_name property is required"

- name: "Fail if ibmcos_bucket_region_location_type is not supported"
  assert:
    that: ibmcos_bucket_region_location_type is defined and ibmcos_bucket_region_location_type in ["region_location","cross_region_location"]
    fail_msg: "ibmcos_bucket_region_location_type property must be set of one of these values: ['region_location','cross_region_location']"

# 1. Determine the instance name
# ---------------------------------------------------------------------------------------------------------------------
- name: "Provision COS Bucket: Debug general info"
  debug:
    msg:
      - "IBM Cloud Resource Group ........... {{ ibmcloud_resourcegroup }}"
      - "IBM COS url ........................ {{ ibmcos_url }}"
      - "IBM COS instance name .............. {{ ibmcos_instance_name }}"
      - "IBM COS location info .............. {{ ibmcos_location_info }}"
      - "IBM COS bucket name ................ {{ ibmcos_bucket_name }}"
      - "IBM COS bucket storage class........ {{ ibmcos_bucket_storage_class }}"
      - "IBM COS region location type ....... {{ ibmcos_bucket_region_location_type }}"
      - "IBM COS bucket location ............ {{ ibmcos_bucket_region_location }}"
      - "Expire Rule Enabled? ............... {{ ibmcos_bucket_expire_rule_enable_flag }}"
      - "Expire Rule Id ..................... {{ ibmcos_bucket_expire_rule_id }}"
      - "Expire Rule in Days ................ {{ ibmcos_bucket_expire_rule_days }}"

# 2. Lookup IBM Cloud Resource Group GUID
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Retrieve resource group guid"
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: rg_info

- name: "ibm : Debug group GUID"
  debug:
    msg:
      - "Resource Group GUID ... {{ rg_info.resource.id }}"

- name: "ibm : Set resource group guid variable"
  when:
    - rg_info.resource.id is defined
  set_fact:
    resourceGID: "{{ rg_info.resource.id }}"

# 3. Retrieve COS instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "Retrieve IBM COS instance ID"
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ ibmcos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "{{ ibmcos_service }}"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_info

- name: "Debug IBM COS resource ID"
  debug:
    msg: "COS Instance resource ID ... {{ cos_info.resource.id }}"

- name: "Set resource instance id variable"
  when: cos_info.resource.id is defined
  set_fact:
    ibmcos_resource_id: "{{ cos_info.resource.id }}"

# 4. Create authentication credentials for the instance
# ---------------------------------------------------------------------------------------------------------------------
# - name: "Create IBM COS service credentials with role {{ ibmcos_resource_key_iam_role }}"
#   ibm.cloudcollection.ibm_resource_key:
#     name: "{{ ibmcos_service_credentials_name }}"
#     role: "{{ ibmcos_resource_key_iam_role }}"
#     resource_instance_id: "{{ ibmcos_resource_id }}"
#     ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
#     parameters: {'HMAC': true }

# - name: "Retrieve IBM COS service credentials {{ ibmcos_service_credentials_name }}"
#   ibm.cloudcollection.ibm_resource_key_info:
#     name: "{{ ibmcos_service_credentials_name }}"
#     resource_instance_id: "{{ ibmcos_resource_id }}"
#     ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
#   register: cos_key_info

# - name: "Set access key id & secret access key variables"
#   set_fact:
#     ibmcos_access_key_id: "{{ cos_key_info.resource.credentials['cos_hmac_keys.access_key_id'] }}"
#     ibmcos_secret_access_key: "{{ cos_key_info.resource.credentials['cos_hmac_keys.secret_access_key'] }}"
  
# # 5. Create COS bucket
# ---------------------------------------------------------------------------------------------------------------------
- include_tasks: tasks/providers/ibm/create_{{ ibmcos_bucket_region_location_type }}_bucket.yml
