---
# Provide Debug information
# -----------------------------------------------------------------------------
- name: "Debug information - IBM Maximo AI Broker"
  debug:
    msg:
      - "Namespace ...................... {{ aibroker_namespace }}"
      - "Channel ........................ {{ aibroker_channel }}"
      - "MAS Instance Id ................ {{ mas_instance_id }}"

# Create IBM Maximo IBM Maximo AI Broker
# -----------------------------------------------------------------------------
- name: "Create IBM Maximo AI Broker namespace"
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Namespace
    name: "{{ aibroker_namespace }}"

# Install the operator & create entitlement secret
# -----------------------------------------------------------------------------
- name: "Install IBM Maximo AI Broker Operator"
  include_role:
    name: ibm.mas_devops.install_operator
  vars:
    namespace: "{{ aibroker_namespace }}"
    icr_username: "{{ ibm_entitlement_username }}"
    icr_password: "{{ ibm_entitlement_key }}"
    catalog_source: "{{ mas_catalog_source }}"
    operator_group: "{{ lookup('template', 'templates/aibroker/operator-group.yml.j2') }}"
    subscription: "{{ lookup('template', 'templates/aibroker/subscription.yml.j2') }}"

# Wait until the IBM Maximo AI Broker CRD is available
# -----------------------------------------------------------------------------
- name: "Wait until the IBM Maximo AI Broker Operator CRD is available"
  include_tasks: "{{ role_path }}/../../common_tasks/wait_for_crd.yml"
  vars:
    crd_name: aibrokerapps.apps.mas.ibm.com

# IBM Maximo AI Broker installation
# -----------------------------------------------------------------------------
- name: Create AI Broker CR
  vars:
    annotation_dict: "{{ mas_annotations | string | ibm.mas_devops.getAnnotations() }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ aibroker_namespace }}"
    template: templates/aibroker/aibrokerapp.yml.j2
  register: aibrokerAppResult

# Wait until the pipeline-runner-instance service account is available
# -----------------------------------------------------------------------------
- name: "Wait for the pipeline-runner-instance service account to appear (60s delay)"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ServiceAccount
    name: pipeline-runner-instance
    namespace: "{{ aibroker_namespace }}"
  register: pipelinerunner_sa_lookup
  retries: 10 # Up to 10 minutes
  delay: 60 # Every 1 minute
  until:
    - pipelinerunner_sa_lookup.resources is defined
    - pipelinerunner_sa_lookup.resources | length > 0

- name: "Patch the pipeline-runner-instance service account to include right imagePullPolicy"
  kubernetes.core.k8s:
    merge_type: merge
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: pipeline-runner-instance
        namespace: "{{ aibroker_namespace }}"
      imagePullSecrets:
        - name: "{{ pullSecretName }}"

# Wait IBM Maximo AI Broker custom resource to be complete
# -----------------------------------------------------------------------------
- name: "Wait for AiBrokerApp custom resource to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: apps.mas.ibm.com/v1
    name: "{{ mas_instance_id }}"
    namespace: "{{ aibroker_namespace }}"
    kind: AiBrokerApp
  register: aibrokerapp_cr_result
  until:
    - aibrokerapp_cr_result.resources is defined and aibrokerapp_cr_result.resources | length == 1
    - aibrokerapp_cr_result.resources[0].status is defined
    - aibrokerapp_cr_result.resources | json_query('[*].status.conditions[?type==`Successful`][].status') | select ('match','True') | list | length == 1
  retries: 45 # approx 45 minutes before we give up
  delay: 60 # 1 minute
