---
- name: 'Check if tenant namespace: {{ tenantNamespace }} exists'
  k8s_info:
    api_version: v1
    kind: Namespace
    name: '{{ tenantNamespace }}'
  register: namespace_info

# Create tenant namespace
- name: 'Create a tenant namespace: {{ tenantNamespace }}'
  kubernetes.core.k8s:
    name: '{{ tenantNamespace }}'
    api_version: v1
    kind: Namespace
  when:
    - namespace_info.resources | length == 0

# Copy secrets to tenant namespace
- name: 'Copy secrets to namespace: {{ tenantNamespace }}'
  shell: 'oc get secret {{ item }} -n mas-{{ mas_instance_id }}-aibroker -o yaml | sed "s/namespace: .*/namespace: {{ tenantNamespace }}/" | oc apply --force -f -'
  with_items:
    - km-s3-secret
    - '{{ pullSecretName }}'

# Adding inference server runtimes
- name: 'Create config map for connector config'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/connector-configmap.yml.j2') }}"

- name: 'Create SA for server runtimes'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/km-s3-sa.yml.j2') }}"

- name: 'Create huggingfaceserver server runtime'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/kserve-huggingfaceserver.yml.j2') }}"

- name: 'Create lgbserver server runtime'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/kserve-lgbserver.yml.j2') }}"

- name: 'Create sklearnserver server runtime'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/kserve-sklearnserver.yml.j2') }}"

- name: 'Create xgbserver server runtime'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/kserve-xgbserver.yml.j2') }}"

# Applay RBAC roles
- name: 'Apply RBAC for tenant'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/rbac.yml.j2') }}"

# - name: "debug domain"
#   debug:
#     msg: "Domain name ......... {{ domain }}"

# - name: "Remove prefix from domain"
#   set_fact:
#     hostname: "{{ domain | regex_replace('^[^.]+\\.', '') }}"

- name: Apply Kmodel api
  shell: |
    curl -k -X POST "https://controller-mas-{{ mas_instance_id }}-aibroker.{{ mas_aibroker_domain }}/api/v1/tenant?id={{ tenantNamespace }}" \
    --header 'accept: */*' \
    --header 'Content-Type: application/json' \
    --data '{"name": "string","public": true,"max_models": 10}'

- name: Create tenant
  command: python3 {{ role_path }}/files/create_tenant.py {{ tenantNamespace }} sls_url dro_url
  register: create_tenant
  ignore_errors: yes

- name: Debug Create tenant
  debug:
    msg: "{{ create_tenant }}"

- name: Create tenant entitlement
  command: python3 {{ role_path }}/files/create_tenant_entitlement.py {{ tenantNamespace }} standard pcc 2024-01-01 2027-01-01
  register: create_tenant_entitlement
  ignore_errors: yes

- name: Debug Create tenant entitlement
  debug:
    msg: "{{ create_tenant_entitlement }}"
