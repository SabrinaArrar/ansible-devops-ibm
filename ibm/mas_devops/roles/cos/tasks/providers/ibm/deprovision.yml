---
- name: "Fail if ibmcloud_apikey is not provided"
  assert:
    that: ibmcloud_apikey is defined and ibmcloud_apikey != ""
    fail_msg: "ibmcloud_apikey property is required"

- name: "Fail if ibmcos_instance_name is not provided"
  assert:
    that: ibmcos_instance_name is defined and ibmcos_instance_name != ""
    fail_msg: "ibmcos_instance_name property is required"

# 1. Lookup IBM Cloud Resource Group GUID
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Retrieve resource group guid"
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: rg_info

- name: "Fail if Resource Group Id is missing in output"
  assert:
    that: 
      - rg_info.resource.id is defined
    fail_msg: "Unable to fetch Resource Group Id"

- name: "ibm : Set resource group guid variable"
  when:
    - rg_info.resource.id is defined
  set_fact:
    resourceGID: "{{ rg_info.resource.id }}"

# 2. Deprovision COS instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Retrieve cos instance Info"
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ ibmcos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "{{ cos_service }}"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_info

- name: "Fail if cos resource id not found "
  assert:
    that:
      - cos_info.resource.id is defined and cos_info.resource.id != ""
    fail_msg: "Unable to retrieve COS Instnace resource id"

- name: "ibm: Set resource instance id variable"
  when: cos_info.resource.id is defined
  set_fact:
    ibmcos_resource_id: "{{ cos_info.resource.id }}"

- name: "ibm : Deprovision cos instance"
  ibm.cloudcollection.ibm_resource_instance:
    name: "{{ ibmcos_instance_name }}"
    id: "{{ ibmcos_resource_id }}"
    resource_group_id: "{{ resourceGID }}"
    service: "{{ cos_service }}"
    plan: "{{ ibmcos_plan_type }}"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
    state: absent
  register: cos_deprovision_output

- name: "ibm : Deprovision debug"
  debug:
    msg: "{{ cos_deprovision_output }}"
