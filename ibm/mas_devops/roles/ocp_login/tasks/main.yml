---

# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Fail if type is not provided"
  when: cluster_type is not defined or cluster_type == ""
  fail:
    msg: "cluster_type property is required"

- name: "Fail if cluster_type is not supported"
  when: cluster_type is not in supported_cluster_types
  fail:
    msg: "cluster_type '{{ cluster_type }}' property is not supported by this role"


# 1. Provide debug info
# -----------------------------------------------------------------------------
- debug:
    msg:
      - "Cluster name ................. {{ cluster_name }}"
      - "Cluster type ................. {{ cluster_type }}"


# 2. Verify if running in cluster
# -----------------------------------------------------------------------------
# TODO: Add support o ocp_login other clusters
- name: Verify if running in cluster to skip login
  set_fact:
    k8s_auth_host: "{{ lookup('env', 'K8S_AUTH_HOST') | default('', True) }}"


# -----------------------------------------------------------------------------
- import_tasks: "tasks/login-{{ cluster_type }}.yml"
  when: k8s_auth_host is not defined or k8s_auth_host == ''