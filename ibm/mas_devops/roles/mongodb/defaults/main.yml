---
# Currently supported providers are aws,ibm,community
mongodb_provider: "{{ lookup('env','DB_PROVIDER') | default('community','True')}}"
db_action: "{{ lookup('env','DB_ACTION') | default('provision','True') }}"

# Where to install the operator and create the mongo instance
mongodb_namespace: "{{ lookup('env', 'MONGODB_NAMESPACE') | default('mongoce', True) }}"

# Storage configuration
mongodb_storage_class: "{{ lookup('env', 'MONGODB_STORAGE_CLASS') }}"
mongodb_storage_capacity_data: "{{ lookup('env', 'MONGODB_STORAGE_CAPACITY_DATA') | default('20Gi', True) }}"
mongodb_storage_capacity_logs: "{{ lookup('env', 'MONGODB_STORAGE_CAPACITY_LOGS') | default('20Gi', True) }}"

# CPU and memory limits configuration on the mongodb container
mongodb_cpu_limits: "{{ lookup('env', 'MONGODB_CPU_LIMITS') | default('1', true) }}"
mongodb_mem_limits: "{{ lookup('env', 'MONGODB_MEM_LIMITS') | default('1Gi', true) }}"

# CPU and memory request configuration on the mongodb container
mongodb_cpu_requests: "{{ lookup('env', 'MONGODB_CPU_REQUESTS') | default('500m', true) }}"
mongodb_mem_requests: "{{ lookup('env', 'MONGODB_MEM_REQUESTS') | default('1Gi', true) }}"

# When these are defined we will generate a MAS MongoCfg template
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

# MongoDB Replicas
mongodb_replicas: "{{ lookup('env', 'MONGODB_REPLICAS') | default(3,True) }}"

# defaults only required for aws documentdb
aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
aws_region: "{{ lookup('env', 'AWS_REGION') | default('us-east-2', True) }}"

# aws vpc id where subnets and other resources will be created
vpc_id: "{{ lookup('env','VPC_ID') }}"

docdb_cluster_name: "{{ lookup('env', 'DOCDB_CLUSTER_NAME') }}"
docdb_size: "{{ lookup('env', 'DOCDB_SIZE') | default('nprod', True) }}"
docdb_subnet_group_name: "docdb-{{ docdb_cluster_name }}"
docdb_security_group_name: "docdb-{{ docdb_cluster_name }}"
docdb_admin_credentials_secret_name: "{{ docdb_cluster_name }}-admin-credentials"

# ibm cloud mongodb defaults
ibm_mongo_admin_credentials_secret_name: "{{ mongo_name }}-admin-credentials"
mongo_service_credentials_secret_name: "{{ mongo_name }}-service-credentials"
ibm_mongo_backup_id: ''
is_restore: "false"
ibmcloud_resourcegroup: "{{ lookup('env','IBMCLOUD_RESOURCEGROUP') }}"
ibmcloud_region: "{{ lookup('env', 'IBMCLOUD_REGION') | default('us-east', True) }}"
ibmcloud_apikey: "{{ lookup('env', 'IBMCLOUD_APIKEY') }}"
ibm_mongo_config: 'main'

# aws docdb secret rotate vars
mongocfg:
  instance_name: "{{ lookup('env', 'MONGODB_INSTANCE_NAME') }}"
docdb_host: "{{ lookup('env', 'DOCDB_HOST') }}"
docdb_port: "{{ lookup('env', 'DOCDB_PORT') }}"
docdb_instance_username: "{{ lookup('env', 'DOCDB_INSTANCE_USERNAME') }}"
docdb_instance_password_old: "{{ lookup('env', 'DOCDB_PASSWORD_OLD') }}"
docdb_master_username: "{{ lookup('env', 'DOCDB_MASTER_USERNAME') }}"
docdb_master_password: "{{ lookup('env', 'DOCDB_MASTER_PASSWORD') }}"
