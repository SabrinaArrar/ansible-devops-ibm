---

- name: "ibmcos : Debug general info"
  debug:
    msg:
      - "IBM COS url ........................ {{ ibmcos_url }}"
      - "IBM COS username/accesskey ......... {{ ibmcos_username }}"
      - "IBM COS instance name .............. {{ ibmcos_instance_name }}"
      - "IBM COS location info .............. {{ ibmcos_location_info }}"
      - "IBM COS plan type .................. {{ ibmcos_plan_type }}"


# 1. Lookup IBM Cloud Space GUID
# ---------------------------------------------------------------------------------------------------------------------
#- name: retrieve space guid
#  ibm.cloudcollection.ibm_space_info:
#    name: "{{ ibm_cloud_space }}"
#    org: "{{ ibm_cloud_org }}"
#    ibmcloud_api_key: "{{ ibm_cloud_apikey }}"
#  register: space_info
#
#- debug:
#    msg:
#      - "space GUID ... {{ space_info.resource.id }}"
#
#- name: "set space guid"
#  when:
#    - space_info.resources.id is defined
#  set_fact:
#    spaceID: "{{ space_info.resource.id }}"
#
# This isn't used anywhere


# 2. Lookup IBM Cloud Resource Group GUID
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibmcos : Retrieve resource group guid"
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: rg_info

- name: "ibmcos : Debug group GUID"
  debug:
    msg:
      - "Resource Group GUID ... {{ rg_info.resource.id }}"

- name: "ibmcos : Set resource group guid variable"
  when:
    - rg_info.resource.id is defined
  set_fact:
    resourceGID: "{{ rg_info.resource.id }}"


# 3. Create a new COS instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibmcos : Create a cos instance"
  ibm.cloudcollection.ibm_resource_instance:
    name: "{{ ibmcos_instance_name }}"
    service: "cloud-object-storage"
    plan: "{{ ibmcos_plan_type }}"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"

- name: "ibmcos : Retrieve cos instance ID"
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ ibmcos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "cloud-object-storage"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_info

- name: "ibmcos : Debug IBMCOS resource ID"
  debug:
    msg:
      - "COS Instance resource ID ... {{ cos_info.resource.id }}"

- name: "ibmcos: Set resource instance id variable"
  when: cos_info.resource.id is defined
  set_fact:
    ibmcos_resource_id: "{{ cos_info.resource.id }}"


# 4. Create authentication credentials for the instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibmcos : Create a cos service credential"
  ibm.cloudcollection.ibm_resource_key:
    name: "{{ instance_name }}-key"
    role: "Manager"
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"

- name: "ibmcos : retrieve cos service credential"
  ibm.cloudcollection.ibm_resource_key_info:
    name: "{{ instance_name }}-key"
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_key_info

- name: "ibmcos : Debug COS Key Resource"
  debug:
    msg:
      - "COS Key resource ... {{ cos_key_info.resource }}"

- name: "ibmcos : Set ibmcos_password variable"
  when: cos_key_info.resource.credentials is defined
  set_fact:
    ibmcos_password: "{{ cos_key_info.resource.credentials.apikey }};{{ cos_key_info.resource.credentials.resource_instance_id }}"


# 5. Save the ObjectStorageCfg to local disk
# ---------------------------------------------------------------------------------------------------------------------
- name: Copy objectstorageCfg to filesytem
  ansible.builtin.template:
    src: ibmcos/objectstoragecfg.yml.j2
    dest: "{{ mas_config_dir }}/objectstoragecfg.yml"
