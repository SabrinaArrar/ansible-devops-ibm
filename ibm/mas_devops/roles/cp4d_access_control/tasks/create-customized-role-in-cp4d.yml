- name: Get all permissions in CP4D
  uri:
    url: "https://{{ cp4d_host }}/icp4d-api/v1/permissions"
    validate_certs: no
    method: GET
    headers:
      Authorization: "Bearer {{ cp4d_bearer_token }}"
      cache-control: "no-cache"
    status_code: 200
    timeout: 30
  register: cp4d_role_permissions

- debug: var=cp4d_role_permissions

##Permissions": [
#                "can_provision",
#                "monitor_platform",
#                "sign_in_only",
#                "administrator",
#                "configure_platform",
#                "configure_auth",
#                "manage_users",
#                "manage_catalog",
#                "access_catalog"
#            ],

- name: List all roles in CP4D
  uri:
    url: "https://{{ cp4d_host }}/icp4d-api/v1/roles"
    validate_certs: no
    method: GET
    headers:
      Authorization: "Bearer {{ cp4d_bearer_token }}"
      cache-control: "no-cache"
    status_code: 200
    timeout: 30
  register: all_roles_in_cp4d

# cp4d_roles: zen_developer_role,zen_administrator_role,zen_user_role,wkc_data_scientist_role

- debug: var=all_roles_in_cp4d

- name: create new role in cp4d
  uri:
    url: "https://{{ cp4d_host }}/icp4d-api/v1/roles"
    validate_certs: no
    method: POST
    headers:
      Authorization: "Bearer {{ cp4d_bearer_token }}"
      cache-control: "no-cache"
    body_format: "json"
    body: "{\"role_name\":\"{{ cp4d_customized_role_name }}\",\"description\":\"{{ cp4d_customized_role_description }}\",\"permissions\":[\"sign_in_only\", \"can_provision\"]}"
    status_code: 200
    timeout: 30
  when: '"{{ cp4d_customized_role_name }}" not in "{{ all_roles_in_cp4d.json.Roles }}"'

- name: get the all the roles' info
  uri:
    url: "https://{{ cp4d_host }}/icp4d-api/v1/roles"
    validate_certs: no
    method: GET
    headers:
      Authorization: "Bearer {{ cp4d_bearer_token }}"
      cache-control: "no-cache"
    status_code: 200
    timeout: 30
  register: all_roles_in_cp4d_updated

- debug: var=all_roles_in_cp4d_updated.json

- name: Find out the new created role id
  debug: msg="{{ all_roles_in_cp4d_updated.json | json_query(jmesquery) }}"
  vars:
    jmesquery: >-
      Roles[?role_name=='{{ cp4d_customized_role_name }}'].id
  register: new_role_id

- debug: var=new_role_id.msg[0]

- name: Save the new role id as variable
  set_fact:
    cp4d_customized_role_id: "{{ new_role_id.msg[0] }}"
