---

# 1. Set uds_tls_crt
# -----------------------------------------------------------------------------
- name: "gencfg : Set uds_tls_crt fact for BasCfg when using existing UDS"
  when:
    - uds_tls_crt is not defined or uds_tls_crt == ""
    - uds_tls_crt_local_file_path is defined and uds_tls_crt_local_file_path != ""
  set_fact:
    uds_tls_crt: "{{ lookup('file', uds_tls_crt_local_file_path) | regex_findall('(-----BEGIN .+?-----(?s).+?-----END .+?-----)', multiline=True, ignorecase=True) }}"
  no_log: true


# 2. Check for required facts
# -----------------------------------------------------------------------------
- name: "gencfg : Fail if uds_endpoint_url has not been provided"
  assert:
    that: uds_endpoint_url is defined and uds_endpoint_url|length != 0
    fail_msg: "uds_endpoint_url property has not been set"

- name: "gencfg : Fail if uds_api_key has not been provided"
  assert:
    that: uds_api_key is defined and uds_api_key|length != 0
    fail_msg: "uds_api_key property has not been set"

- name: "gencfg : Fail if uds_tls_crt has not been provided"
  assert:
    that: uds_tls_crt is defined and uds_tls_crt|length != 0
    fail_msg: "uds_tls_crt property has not been set"

- name: "Fail if mas_workload_scale_class is not set correctly"
  assert:
    that: mas_workload_scale_class is in ['BestEffort', 'Burstable', 'Guaranteed']
    fail_msg: "mas_workload_scale_class must be one of ['BestEffort', 'Burstable', 'Guaranteed']"

# 3. Provide Debug information
# -----------------------------------------------------------------------------
- name: "gencfg : Debug information"
  debug:
    msg:
      - "UDS URL ............................ {{ uds_endpoint_url }}"
      - "UDS Contact First Name ............. {{ uds_contact.first_name | default('<undefined>', True) }}"
      - "UDS Contact Last Name .............. {{ uds_contact.last_name | default('<undefined>', True) }}"
      - "UDS Contact e-mail ................. {{ uds_contact.email | default('<undefined>', True) }}"
      - "MAS workload scale class ........... {{ mas_workload_scale_file is defined | ternary('Custom', mas_workload_scale_class) }}"

# 4. Workload scale configuration
# -----------------------------------------------------------------------------
- name: "Set facts : mas_workload_scale_file"
  set_fact:
    mas_workload_scale_file: "{{ role_path }}/../../common_vars/podTemplates/{{ mas_workload_scale_class | lower }}.yml"
  when:
    - mas_workload_scale_file is not defined
    - mas_workload_scale_class != 'Burstable'

- name: Load workload scale configuration file
  include_vars: "{{ mas_workload_scale_file }}"
  when: mas_workload_scale_file is defined

# 5. Generate BASCfg for MAS
# -----------------------------------------------------------------------------
- name: "gencfg : Copy BASCfg to filesytem"
  ansible.builtin.template:
    src: bascfg.yml.j2
    dest: "{{ mas_config_dir }}/uds.yml"
    mode: '664'
  when: mas_instance_id is defined
