---
# 1. Setup namespace for Local Storage
# -----------------------------------------------------------------------------
- name: "ocs/localstorage : Create Namespace"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/localstorage/namespace.yaml') }}"
  register: localNamespace

- name: Get local storage operator package manifest
  kubernetes.core.k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: local-storage-operator
    namespace: openshift-marketplace  # Note: A namespace must be provided when calling packages.operators.coreos.com/v1
  register: local_storage_operator_manifest

- name: Assert that PackageManifest exists
  ansible.builtin.assert:
    that:
      - local_storage_operator_manifest is defined
      - local_storage_operator_manifest.resources is defined
      - local_storage_operator_manifest.resources | length == 1
    fail_msg: "PackageManifest not found: local-storage-operator"

- name: Set the subscription information
  set_fact:
    local_storage_operator_source: "{{ local_storage_operator_manifest.resources[0].status.catalogSource }}"
    local_storage_operator_source_namespace: "{{ local_storage_operator_manifest.resources[0].status.catalogSourceNamespace }}"
    local_storage_operator_default_channel: "{{ local_storage_operator_manifest.resources[0].status.defaultChannel }}"


# 2. Install the Operator
# -----------------------------------------------------------------------------
- name: "ocs/localstorage : Create Local Storage Operator Group"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/localstorage/operatorgroup.yaml') }}"
  register: localGroup

- name: "ocs/localstorage : Local Storage Operator Subscription"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/localstorage/subscription.yaml') }}"
  register: localSubscription


# 3. Wait until the LocalVolume CRD is available
# -----------------------------------------------------------------------------
- name: "Wait until the LocalVolume CRD is available"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "localvolumes.local.storage.openshift.io"
    wait: yes
    wait_sleep: 10
    wait_timeout: 300 # 5 mins until we give up waiting for the CRD to get into the expected state
    wait_condition:
      type: NamesAccepted
      status: "True"
  register: localvolume_crd_info
  retries: 120 # ~approx 5 minutes before we give up waiting for the CRD to be created
  delay: 5 # seconds
  until:
    - localvolume_crd_info.resources is defined
    - localvolume_crd_info.resources | length > 0


# 4. Label all worker nodes as suitable for storage
# -----------------------------------------------------------------------------
# In future it would be good to make it possible to define a different rule
# for applying these labels instead of applying them to all workers, currently
# we could just as well use the worker node-role label in the localvolume spec
- name: "ocs/localstorage : Label nodes"
  shell: |
      for worker in $(oc get node -o name -l node-role.kubernetes.io/worker | sed 's/node\///')
      do
        oc label node $worker cluster.ocs.openshift.io/openshift-storage=''
        echo "Labeled node $worker"
      done


# 5. Create a local volume
# -----------------------------------------------------------------------------
- name: "ocs/localstorage : Create Local Volume"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/localstorage/localvolume.yaml') }}"


# 6. Provide debug information
# -----------------------------------------------------------------------------
- name: "ocs/localstorage : Debug for Local Storage"
  debug:
    msg:
      - "OperatorGroup changed ........ {{ localGroup.changed }}"
      - "Subscription changed ......... {{ localSubscription.changed }}"
