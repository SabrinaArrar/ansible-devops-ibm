---
# Install and configure the Node Feature Discovery Operator
# -----------------------------------------------------------------------------
- include_tasks: tasks/nfd_setup.yml

# 1. Provide Debug information
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "NVIDIA Namespace ...................... {{ nvidia_namespace }}"
      - "NVIDIA Channel   ...................... {{ nvidia_channel }}"
      - "NVIDIA Driver Version ................. {{ nvidia_driver_version }}"


# 2. Create NVIDIA project
# -----------------------------------------------------------------------------
- name: "Create nvidia namespace"
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: '{{ nvidia_namespace }}'


# 3. Create NVIDIA GPU operator group and subscription
# -----------------------------------------------------------------------------
- name: "Create nvidia operator group"
  when:
    - nvidia_namespace != "openshift-operators"
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/nvidia-operatorgroup.yml.j2') }}"
    wait: yes
    wait_timeout: 60 #subsequent tasks will fail if the CRD isn't fully created

- name: "Create nvidia subscription"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/nvidia-subscription.yml.j2') }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: 'CatalogSourcesUnhealthy'
      status: "False"

- name: "Wait until ClusterPolicy CRD is available"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    name: "clusterpolicies.nvidia.com"
    kind: CustomResourceDefinition
    wait: yes
    wait_sleep: 10
    wait_timeout: 300 # 5 mins until we give up waiting for the CRD to get into the expected state
    wait_condition:
      type: NamesAccepted
      status: "True"
  register: nvidia_crd_info
  retries: 120 # ~approx 5 minutes before we give up waiting for the CRD to be created
  delay: 5 # seconds
  until:
    - nvidia_crd_info.resources is defined
    - nvidia_crd_info.resources | length > 0


# 4. Create NVIDIA Cluster Policy
# -----------------------------------------------------------------------------
- name: "Create Cluster Policy instance"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/clusterpolicy.yml.j2') }}"


# 5. Wait for Cluster Policy to be ready
# -----------------------------------------------------------------------------
- name: "Wait for Cluster Policy instance to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: nvidia.com/v1
    name: "gpu-cluster-policy"
    kind: ClusterPolicy
  register: clusterpolicy_cr_result
  until:
    - clusterpolicy_cr_result.resources is defined and clusterpolicy_cr_result.resources | length == 1
    - clusterpolicy_cr_result.resources[0].status is defined
    - clusterpolicy_cr_result.resources[0].status.state is defined
    - clusterpolicy_cr_result.resources[0].status.state == 'ready'
  retries: 30 # approx 30 minutes before we give up
  delay: 60 # 1 minute
