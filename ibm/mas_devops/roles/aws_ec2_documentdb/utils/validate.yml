---
# Pre-validation mandatory parameter
# -----------------------------------------------------------------------------
- name: "Fail if mas_instance_id is not provided"
  assert:
    that: mas_instance_id is defined and mas_instance_id != ""
    fail_msg: "mas_instance_id property is required"

- name: "Fail if docdb_host is not provided"
  assert:
    that: docdb_host is defined and docdb_host != ""
    fail_msg: "docdb_host property is required"

- name: "Fail if docdb_port is not provided"
  assert:
    that: docdb_port is defined and docdb_port != ""
    fail_msg: "docdb_port property is required"

- name: "Fail if docdb_master_username is not provided"
  assert:
    that: docdb_master_username is defined and docdb_master_username != ""
    fail_msg: "docdb_master_username property is required"

- name: "Fail if docdb_master_password is not provided"
  assert:
    that: docdb_master_password is defined and docdb_master_password != ""
    fail_msg: "docdb_master_password property is required"

- name: "Fail if vpc_id is not provided"
  assert:
    that: vpc_id is defined and vpc_id != ""
    fail_msg: "vpc_id property is required"

- name: "Fail if aws_ec2_cidr_az1 is not provided"
  assert:
    that: aws_ec2_cidr_az1 is defined and aws_ec2_cidr_az1 != ""
    fail_msg: "aws_ec2_cidr_az1 property is required"

- name: "Fail if docdb_ingress_cidr is not provided"
  assert:
    that: docdb_ingress_cidr is defined and docdb_ingress_cidr != ""
    fail_msg: "docdb_ingress_cidr property is required"

- name: "Fail if docdb_egress_cidr is not provided"
  assert:
    that: docdb_egress_cidr is defined and docdb_egress_cidr != ""
    fail_msg: "docdb_egress_cidr property is required"

- name: "Fail if aws_key_pair_name is not provided"
  assert:
    that: aws_key_pair_name is defined and aws_key_pair_name != ""
    fail_msg: "aws_key_pair_name property is required"

- name: "Fail if docdb_cluster_name is not provided"
  assert:
    that: docdb_cluster_name is defined and docdb_cluster_name != ""
    fail_msg: "docdb_cluster_name property is required"

- name: "Fail if aws_access_key_id is not provided"
  assert:
    that: aws_access_key_id is defined and aws_access_key_id != ""
    fail_msg: "aws_access_key_id property is required"

- name: "Fail if aws_secret_access_key is not provided"
  assert:
    that: aws_secret_access_key is defined and aws_secret_access_key != ""
    fail_msg: "aws_secret_access_key property is required"
