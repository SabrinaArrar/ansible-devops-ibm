#!/bin/bash

echo "inst={{sg_id}}"
export inst={{sg_id}}
export REGION={{aws_region}}

sgname=$(aws ec2 describe-security-groups --group-ids $inst --region $REGION | jq ".SecurityGroups[].GroupName" | tr -d '"')
if [[ $sgname == "default" ]]; then
  echo "Skip default security group $inst"
else
  # Delete all inbound and outbound rules
  json=`aws ec2 describe-security-groups --region $REGION --group-id $inst --query "SecurityGroups[0].IpPermissions" | tr -d '\r\n'`
  if [[ $json != "[]" ]]; then
    aws ec2 revoke-security-group-ingress --region $REGION --cli-input-json "{\"GroupId\": \"$inst\", \"IpPermissions\": $json}"
    echo "Deleted all inbound rules from SG $inst"
  fi
  json=`aws ec2 describe-security-groups --region $REGION --group-id $inst --query "SecurityGroups[0].IpPermissionsEgress" | tr -d '\r\n'`
  if [[ $json != "[]" ]]; then
    aws ec2 revoke-security-group-egress --region $REGION --cli-input-json "{\"GroupId\": \"$inst\", \"IpPermissions\": $json}"
    echo "Deleted all outbound rules from SG $inst"
  fi
fi

sgname=$(aws ec2 describe-security-groups --group-ids $inst --region $REGION | jq ".SecurityGroups[].GroupName" | tr -d '"')
if [[ $sgname == "default" ]]; then
  echo "Skip deletion of default security group $inst"
else
  aws ec2 delete-security-group --group-id $inst --region $REGION
  echo "Deleted security group $inst"
fi


export inst={{subnet_id_list[0]}}
echo "SUBNETS = $inst"
aws ec2 delete-subnet --subnet-id $inst --region $REGION
echo "Deleted subnet $inst"
