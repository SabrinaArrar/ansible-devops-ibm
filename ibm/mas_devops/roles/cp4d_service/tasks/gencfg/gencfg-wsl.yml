---
# This will generate WatsonStudioCfg for MAS and also create WSL project id if not provided
# We need to retrieve CPD url and admin password's for wsl config in mas
# CPD url is passed as var to this task, the admin password we'll retrieve below

# 0. Watson Studio Project Installation Summary
# -----------------------------------------------------------------------------
- name: "gencfg-wsl : Watson Studio Project Installation Summary:"
  debug:
    msg:
      - "CP4D Username .................. {{ cpd_admin_username }}"
      - "CP4D Password .................. Found in 'admin-user-details' secret under '{{ cpd_instance_namespace }}' namespace"
      - "CP4D URL ....................... {{ cpd_url }}"
      - "CP4D WSL Project Id ............ {{ cpd_wsl_project_id }}"

# 1. Get CP4D Beaker token to enable Watson API authentication
# -----------------------------------------------------------------------------
- name: "gencfg-wsl : Authorize the CP4D (get Bearer token)"
  uri:
    url: "{{ cpd_url }}/icp4d-api/v1/authorize"
    validate_certs: no
    method: POST
    headers:
      cache-control: "no-cache"
    body_format: "json"
    body: "{\"username\":\"{{ cpd_admin_username }}\",\"password\":\"{{ cpd_admin_password }}\"}"
    status_code: 200
    timeout: 30
  register: cpd_authorization

- name: "gencfg-wsl : Get the CP4D Bearer token"
  no_log: true
  set_fact:
    cpd_bearer_token: "{{ cpd_authorization.json.token }}"

- name: "gencfg-wsl : Initialize wls_project_id with cpd_wsl_project_id"
  set_fact:
    wsl_project_id: "{{ cpd_wsl_project_id }}"

# 2. Look for existing WSL project
# -----------------------------------------------------------------------------
# If wsl_project_id is not set, then we will create one WSL project to be
# passed to MAS config.  So first, let's check if the wsl_project_id was
# set, if so then we will check if it exists in cpd
- name: "gencfg-wsl : Check if the WSL project is defined and if it exists in CP4D"
  when: wsl_project_id is defined and wsl_project_id !=""
  uri:
    url: "{{ cpd_url }}/v2/projects/{{ wsl_project_id }}"
    validate_certs: no
    method: GET
    headers:
      Authorization: "Bearer {{ cpd_bearer_token }}"
      cache-control: "no-cache"
      Content-Type: "application/json"
    body_format: "json"
    body: "{{ lookup('template','templates/wsl/create_wsl_project.json.j2') }}"
    status_code: 200,404
    timeout: 30
  register: lookup_wsl_project_output

- name: "gencfg-wsl : 'cpd_wsl_project_id' was not set or was not found in cpd instance, therefore look for default project among existing ones"
  when: lookup_wsl_project_output.status is not defined or (lookup_wsl_project_output.status is defined and lookup_wsl_project_output.status == 404)
  uri:
    url: "{{ cpd_url }}/v2/projects"
    validate_certs: no
    method: GET
    headers:
      Authorization: "Bearer {{ cpd_bearer_token }}"
      cache-control: "no-cache"
      Content-Type: "application/json"
    status_code: 200,404
    timeout: 30
  register: lookup_wsl_project_list

- name: "gencfg-wsl : Look for wsl default project among project list"
  set_fact:
    wsl_project_id: "{{ lookup_wsl_project_list.json.resources | ibm.mas_devops.getWSLDefaultProjectId(cpd_wsl_project_name) }}"

- name: "gencfg-wsl : Debug wsl_project_id"
  when:
    - wsl_project_id is not defined or wsl_project_id == ""
  debug:
    msg: "No project has been created with name={{ cpd_wsl_project_name }}, therefore one wsl project will be created to be used in MAS!"

- name: "gencfg-wsl : Debug fact_project_id"
  when:
    - wsl_project_id is defined and wsl_project_id != ""
  debug:
    msg: "Project has been found: {{ wsl_project_id }}"


# 3. Create new WSL project if necessary
# -----------------------------------------------------------------------------
# only create wsl project if cpd_wsl_project_id is not pre-set or if the defined
# cpd_wsl_project_id does not exists in cpd, otherwise create one wsl project
- name: "gencfg-wsl : Create a WSL project in CP4D if one is needed"
  when:
    - wsl_project_id is not defined or wsl_project_id == ""
  uri:
    url: "{{ cpd_url }}/transactional/v2/projects"
    validate_certs: no
    method: POST
    headers:
      Authorization: "Bearer {{ cpd_bearer_token }}"
      cache-control: "no-cache"
      Content-Type: "application/json"
    body_format: "json"
    body: "{{ lookup('template','templates/wsl/create_wsl_project.json.j2') }}"
    status_code: 201,409
    timeout: 30
  register: create_wsl_project_output

- name: "gencfg-wsl : Extract wsl_project_id when it's created via rest api"
  vars:
    regex: '[^/]*$'
  when:
    - create_wsl_project_output.status is defined
    - create_wsl_project_output.status == 201
  set_fact:
    wsl_project_id: "{{ create_wsl_project_output.json.location | regex_search(regex) }}"

# 4. Write out the config to the local filesystem
# -----------------------------------------------------------------------------
- name: "Debug final WSL Project ID using in MAS configuration"
  debug:
    msg: "Watson Studio Project ID to be used in MAS: {{ wsl_project_id }}"

- name: "gencfg-wsl : Copy WatsonStudioCfg to filesytem"
  no_log: true
  when:
    - mas_instance_id is defined and mas_instance_id != ""
    - mas_config_dir is defined and mas_config_dir != ""
  ansible.builtin.template:
    src: wsl/watsonstudiocfg.yml.j2
    dest: "{{ mas_config_dir }}/{{ mas_instance_id }}-watsonstudio-system.yml"
