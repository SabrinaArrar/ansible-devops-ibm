---
# This role will perform the following:
# Renew the original certificates and check that the newly created certificate gets presented

# 1. Set facts and debug
# -------------------------------------------------------------------------------------------------


- name: General Debug
  debug:
    msg:
    - "Instance ID ................ {{ mas_instance_id }}"
    - "MAS namespace .............. {{ mas_namespace }}"

# 2. Renew MAS cert-public and check if it's recreated
# -------------------------------------------------------------------------------------------------
- name: Renew public certs
  include_tasks: tasks/renew_public_cert.yml

# 3. Renew all internal certs and check that they're recreated with new details
# -------------------------------------------------------------------------------------------------
- name: Renew internal certs
  include_tasks: tasks/renew_internal_cert.yml
  vars:
    cert_name: "{{ item }}"
  loop:
  - admindashboard
  - adoptionreporter
  - adoptionusageapi
  - catalogapi
  - catalogmgr
  - coreapi
  - coreidp
  - coreidplogin
  - groupsynccoordinator
  - homepage
  - internalapi
  - milestonesapi
  - mobileapi
  - navigator
  - pushnotificationservice
  - scim
  - sendmailapi
  - usersynccoordinator
  - workspacecoordinator

# 4. Verify MAS install is still happy after the renewals
# -------------------------------------------------------------------------------------------------
- name: "Wait for Suite CR to reconcile after certs are renewed (60s delay)"
  kubernetes.core.k8s_info:
    api_version: v1
    name: "{{mas_instance_id}}"
    namespace: "{{mas_namespace}}"
    kind: Suite
  register: suite_cr_result
  until:
  - suite_cr_result.resources is defined
  - suite_cr_result.resources | json_query('[*].status.conditions[?type==`Running`][].reason') | select ('match','Successful') | list | length == 1
  - suite_cr_result.resources | json_query('[*].status.conditions[?type==`Failure`][].status') | select ('match','False') | list | length == 1
  - suite_cr_result.resources | json_query('[*].status.conditions[?type==`Ready`][].reason') | select ('match','Ready') | list | length == 1
  retries: 30 # approx 30 minutes before we give up
  delay: 60 # 1 minute
