---
# 1. Fetch CIS Instance Info
# ---------------------------------------------------------------------------------------------------------------------
- name: Fetch Resource Group Id
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: rg_info

- name: Set Fact for CIS Instance
  set_fact:
    customer_cis_domain: "{{ mas_instance_id }}.{{ masms_base_domain }}"
    customer_cis_domain_prefix: "{{ mas_instance_id }}"
    cis_service_name: "{{ cluster_name }}-cis-{{mas_instance_id}}"

- name: Fetch CIS Instance Resource Id
  when: rg_info.resource.id is defined and rg_info.resource.id != ""
  ibm.cloudcollection.ibm_cis_info:
    name: "{{ cis_service_name }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
    resource_group_id: "{{ rg_info.resource.id }}"
  register: cis_info

- name: Fail if CIS Instance Id is not fetched
  assert:
    that:
      - cis_info.resource.id is defined and cis_info.resource.id != ""
    fail_msg: "Unable to retrieve CIS Instance resource Id"

# 2. Delete DNS Records from Master Account
# ---------------------------------------------------------------------------------------------------------------------
- name: Master, Fetch Resource Group Id
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ master_cis_resource_group }}"
    ibmcloud_api_key: "{{ master_ibmcloud_api_key }}"
  register: rg_info_master

- name: Master, Fetch CIS Instance Resource Id
  ibm.cloudcollection.ibm_cis_info:
    name: "{{ master_cis_resource_name }}"
    ibmcloud_api_key: "{{ master_ibmcloud_api_key }}"
    resource_group_id: "{{ rg_info_master.resource.id }}"
  register: cis_info_master

- name: Master, CIS Domain Info
  ibm.cloudcollection.ibm_cis_domain_info:
    cis_id: "{{ cis_info_master.resource.id }}"
    domain: "{{ masms_base_domain }}"
    ibmcloud_api_key: "{{ master_ibmcloud_api_key }}"
  register: domain_info_master

- name: Master, Fetch DNS Record
  ibm.cloudcollection.ibm_cis_dns_records_info:
    cis_id: "{{ cis_info_master.resource.id }}"
    domain_id: "{{ domain_info_master.resource.id}}"
    ibmcloud_api_key: "{{ master_ibmcloud_api_key }}"
  register: dns_record_info_master

- name: Loop through all DNS records of Master CIS to find customer DNS record
  no_log: yes
  loop: "{{dns_record_info_master.resource.cis_dns_records}}"
  when:
    -  item.name == customer_cis_domain
  set_fact:
    dns_record_id: "{{item.id}}"

- name: Fail if no resource Id found for DNS Record
  assert:
    that:
      - dns_record_id is defined and dns_record_id != ""
    fail_msg: "Unable to fetch Resource Id for DNS record {{customer_cis_domain}} "

- name: Debug DNS record for {{customer_cis_domain}}
  debug:
    msg:
      - "Resource Id for DNS Record ............. {{ dns_record_id }}"

- name: Delete DNS NS type Record in Master CIS Instance
  ibm.cloudcollection.ibm_cis_dns_record:
    ibmcloud_api_key: "{{ master_ibmcloud_api_key }}"
    id: "{{ dns_record_id }}"
    state: absent
  register: dns_record_delete

- name: Debug DNS Record Deletion
  debug:
    msg:
      - "Deleted DNS Record ..................... {{ dns_record_delete }}"

- name: Fail if DNS record is not deleted
  assert:
    that:
      - not dns_record_delete.failed and dns_record_delete.changed
    fail_msg: "Unable to delete DNS Record in master CIS"

# 3. Delete Domain from CIS Instance
# ---------------------------------------------------------------------------------------------------------------------
- name: CIS Domain Info
  ibm.cloudcollection.ibm_cis_domain_info:
    cis_id: "{{ cis_info.resource.id }}"
    domain: "{{ customer_cis_domain }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: cis_domain_info

- name: Fail if CIS Domain Info is not fetched
  assert:
    that:
      - cis_domain_info.resource.id is defined and cis_domain_info.resource.id != ""
    fail_msg: "Unable to retrieve CIS Domain resource Id"

- name: Deleting Domain for IBM CIS instance in customer account
  ibm.cloudcollection.ibm_cis_domain:
    cis_id: "{{ cis_info.resource.id }}"
    domain: "{{ customer_cis_domain }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
    id: "{{ cis_domain_info.resource.id }}"
    state: absent
  register: cis_domain_delete_info

- name: Fail if CIS Domain Deletion is not successful
  assert:
    that:
      - not cis_domain_delete_info.failed
    fail_msg: "Unable to delete CIS Domain resource"

# 4. Destroy CIS Instance
# ---------------------------------------------------------------------------------------------------------------------
- name: Destroy a CIS Instance
  ibm.cloudcollection.ibm_cis:
    resource_group_id: "{{ rg_info.resource.id }}"
    name: "{{ cis_service_name }}"
    location: "global"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
    state: absent
    id: "{{cis_info.resource.id}}"
  register: cis_destroy_info

- name: Fail if CIS Instance is not deleted
  assert:
    that:
      - not cis_destroy_info.failed
    fail_msg: "Unable to delete CIS Instance resource"

- name: Debug Destroy rg_info
  debug:
    msg:
      - "CIS Destroy Info ....................... {{ cis_destroy_info }}"
