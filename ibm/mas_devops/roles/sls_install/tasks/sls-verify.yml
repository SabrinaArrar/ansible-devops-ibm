- name: "Wait for LicenseService to be ready (60s delay)"
  community.kubernetes.k8s_info:
    api_version: sls.ibm.com/v1
    name: "{{sls_instance_name}}"
    namespace: "{{sls_namespace}}"
    kind: LicenseService
  register: sls_cr_result

- name: "Wait for LicenseService to be ready (60s delay)"
  community.kubernetes.k8s_info:
    api_version: sls.ibm.com/v1
    name: "{{sls_instance_name}}"
    namespace: "{{sls_namespace}}"
    kind: LicenseService
  register: sls_cr_result
  until:
    - sls_cr_result.resources is defined and sls_cr_result.resources | length == 1
    - sls_cr_result.resources[0].status is defined
    - sls_cr_result.resources[0].status.conditions is defined
    - (sls_cr_result.resources[0].status.conditions | selectattr('type', 'equalto', 'Ready')) | length > 0
    - (sls_cr_result.resources[0].status.conditions | selectattr('type', 'equalto', 'Ready')|first).status == 'True'
  retries: 30 # approx 30 minutes before we give up
  delay: 60 # 1 minute


- name: "Wait for LicenseService to be initialized (60s delay)"
  community.kubernetes.k8s_info:
    api_version: sls.ibm.com/v1
    name: "{{sls_instance_name}}"
    namespace: "{{sls_namespace}}"
    kind: LicenseService
  register: sls_cr_result
  when: bootstrap is defined
  until:
    - sls_cr_result.resources[0].status is defined
    - sls_cr_result.resources[0].status is defined
    - sls_cr_result.resources[0].status.conditions is defined
    - (sls_cr_result.resources[0].status.conditions | selectattr('type', 'equalto', 'Initialized')) | length > 0
    - (sls_cr_result.resources[0].status.conditions | selectattr('type', 'equalto', 'Initialized')|first).status == 'True'
  retries: 30 # approx 30 minutes before we give up
  delay: 60 # 1 minute
