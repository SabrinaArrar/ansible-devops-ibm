---
# tasks file for Docdb
- name: "Debug information"
  debug:
    msg:
    - "DocumentDB Name ............................... {{ docdb_cluster_name }}"
    - "DocumentDB Host:Port .......................... {{ docdb_host }}:{{docdb_port}}"
    - "DocumentDB Master Username .................... {{ docdb_master_username }}"
    - "MAS Instance ID ............................... {{ mas_instance_id }}"
    - "DocumentDB instance credential name ........... {{ docdb_instance_credentials_secret_name }}"

# 1. Check for required software
# -----------------------------------------------------------------------------
- name: "Test if mongosh is installed"
  shell: mongosh --version
  register: mongosh_version
  ignore_errors: true

- name: "Fail if mongosh is not installed"
  assert:
    that: ( mongosh_version.rc == 0 )
    fail_msg: "mongosh must be installed (https://www.mongodb.com/docs/mongodb-shell/install/)"


# 2. create docdb user for MAS instance
# -----------------------------------------------------------------------------
- name: set fact for document DB host, port and user name
  # get both from env var
  set_fact:
    docdb_instance_username: "masinst_{{ mas_instance_id }}"

- name: Generate Mongo user password
  no_log: true
  set_fact:
    docdb_instance_password: "{{ lookup('password', '/dev/null length=20 chars=ascii_lowercase,ascii_uppercase,digits') }}"
  when: docdb_instance_password is undefined or docdb_instance_password == ""

- name: "Download Amazon DocumentDB Certificate Authority (CA) certificate"
  shell: |
    wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem -O /tmp/rds-combined-ca-bundle.pem

- name: create js file from template
  template:
    src: create_user.js.j2
    dest: "/tmp/create_user.js"

- name: Create docdb user for MAS instance
  shell: |
    mongosh --tls --host {{ docdb_host }}:{{ docdb_port }} --tlsCAFile /tmp/rds-combined-ca-bundle.pem --username {{ docdb_master_username }}  --password {{ docdb_master_password }} /tmp/create_user.js
  register: creating_user_output

# 3. Save docdb user credentials into k8s Secret
# -----------------------------------------------------------------------------
- name: Create k8s Secret for docdb user credentials
  ansible.builtin.template:
    src: docdb_instance_user_credentials_secret.yaml.j2
    dest: "{{ mas_config_dir }}/{{ docdb_instance_credentials_secret_name }}.yml"
