- name: "cis : Ensure IBMCloud CIS is installed"
  ansible.builtin.shell: |
    ibmcloud plugin install cis -f

- name: "cis : Lookup for Cluster-info Config Map"
  kubernetes.core.k8s_info:
    api_version: v1
    name: cluster-info
    namespace: kube-system
    kind: ConfigMap
  register: _cluster_details_result

- name: "cis : Define CIS service name"
  set_fact:
    cis_service_name: "{{ _cluster_details_result.resources[0].data.cluster_name }}-cis-{{mas_instance_id}}"
  when:
    - cis_service_name is not defined

- name: "cis : debug cis_service_name"
  debug:
    msg: "CIS Service Name ......... {{  cis_service_name }}"

- name: "cis : Lookup for CIS Service Domains"
  ansible.builtin.shell: |
    ibmcloud cis domains -i {{cis_service_name}} -o json
  register: _cis_domains_result

- name: "cis : Lookup for cis certificates"
  ansible.builtin.shell: |
    ibmcloud cis certificates {{(_cis_domains_result.stdout | from_json)[0].id}} -i {{cis_service_name}}
  register: _cis_certificates

- name: "cis : Verify if is there a dedicated certificate already"
  set_fact:
    hasDedicated: "{{'advanced' in _cis_certificates.stdout_lines[2]}}"
    dedicatedId: "{{ _cis_certificates.stdout_lines[2].split(' ')[0]}}"

- name: Delete Existent Advanced Edge Certificate
  ansible.builtin.shell: |
    ibmcloud cis certificate-delete {{(_cis_domains_result.stdout | from_json)[0].id}}  {{dedicatedId}} -i {{cis_service_name}} -f
  when: hasDedicated and override_edge_certs
  register: _deleted_certificate

- name: Order certificate if there no dedicated yet
  ansible.builtin.shell: |
    ibmcloud cis certificate-order {{(_cis_domains_result.stdout | from_json)[0].id}} --hostnames {{edge_cert_routes|join(',')}} -i {{cis_service_name}}
  when:
    - not hasDedicated or _deleted_certificate is defined
