apiVersion: minio.opencontent.ibm.com/v1alpha1
kind: MinioCluster
metadata:
  labels:
    app.kubernetes.io/instance: ibm-minio-operator
    app.kubernetes.io/managed-by: ibm-minio-operator
    app.kubernetes.io/name: ibm-minio-operator
  name: ibm-minio-instance
  namespace: openshift-operators
  resourceVersion: '99873'
  uid: 6d940f5b-9de4-4909-92da-cdd70414bfed
networkPolicy:
  enable: true
spec:
  networkPolicy:
    allowExternal: true
    enabled: true
  nodeSelector: {}
  minioClient:
    image:
      image: 'opencontent-minio-client@sha256:4fe33c506f771c46a4f42acb34f80ceaf06708955855ec1939d2e9fb9ae1a9e9'
      pullPolicy: 'Always'
  global:
    license: true
    spaceId: 1234567-abde-1234-abcde-123456789023
    zenServiceInstanceId: ''
    podLabels:
      slot: slot-name
    storageClassName: portworx-sc
    jobRunId: 1234567-abde-1234-abcde-123456789023
    environmentType: Python
    dockerRegistryPrefix: cp.icr.io/cp/
    runtimeEnvId: 1234567-abde-1234-abcde-123456789023
    projectId: 1234567-abde-1234-abcde-123456789023
    sch:
      enabled: true
    metering:
      addOnId: ''
      cloudpakInstanceId: 750fe2
      productChargedContainers: All
      productCloudpakRatio: '1:1'
      productID: 3be23cc87d094c5f8bd6d73fe149248c
      productMetric: FREE
      productName: Cloud Pak Open
    image:
      pullPolicy: IfNotPresent
      pullSecret: cp.icr.io
    createdBy: '1000331012'
    deploymentType: Staging
  postBucketCreationHookWeight: '0'
  replicasForProd: 4
  sse:
    enabled: false
    masterKeyName: sseMasterKey
    masterKeySecret: ''
  resources:
    limits:
      ephemeral-storage: 2Gi
      memory: 2048Mi
    requests:
      cpu: 250m
      ephemeral-storage: 100Mi
      memory: 256Mi
  keep: false
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 1
  replicasForDev: 4
  configPath: /workdir/home/.minio/
  affinity: {}
  buckets: []
  defaultBucket:
    enabled: true
    name: bucket
    policy: none
    purge: false
  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 20
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 1
  securityContext:
    creds:
      runAsUser: 523
    minio:
      runAsUser: 999
  affinityMinio: {}
  rbac:
    create: true
  environment:
    minioBrowser: 'on'
  service:
    port: 9000
  enableCp4dMeteringLabels: true
  serviceAccount:
    create: true
    name: ''
  minio:
    image:
      image: 'opencontent-minio@sha256:4d5a825ec70a8dce730cc6eb0ca3fabd32659b817b3145eb42444d7f3c30ac51'
      pullPolicy: '{{ tpl ( .Values.global.image.pullPolicy | toString ) .  }}'
  existingSecret: ''
  tls:
    certSecret: ''
    enabled: true
  backupPvc:
    size: 40GiB
    storageClassName: nfs-client
  replicas: 4
  tolerations: []
  updateStrategy: RollingUpdate
  podDisruptionBudget:
    create: true
    maxUnavailable: 1
    minAvailable: ''
  configPathmc: /workdir/home/.mc/
  clusterDomain: cluster.local
  mountPath: /workdir/data
  persistence:
    accessMode: ReadWriteOnce
    enabled: true
    selector:
      label: ''
      value: ''
    size: 10Gi
    subPath: ''
    useDynamicProvisioning: true
  priorityClassName: ''
  podAnnotations: {}
