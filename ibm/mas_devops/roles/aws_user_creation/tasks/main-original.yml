---
# 1. Provide debug information to the user
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "SRE Namespace .......................... {{ sre_namespace }}"
      - "AWS Region.............................. {{ aws_region }}"
      - "AWS User Name........................... {{ aws_user_name }}"
      - "AWS User Action List ................... {{ aws_user_action_list }}"
      - "AWS Resources List ..................... {{ aws_resources_list }}"

# 2. Create COS Bucket and Service credentials for Manage logging via Terraform
# -----------------------------------------------------------------------------
- name: copy tfvars file to nodes
  template:
    src: aws_user_tfvars.j2
    dest: "{{ role_path }}/files/terraform/terraform.tfvars"

- name: start terraform init and deploy - create AWS user and grant access
  community.general.terraform:
    project_path: "{{ role_path }}/files/terraform/"
    state: present
    force_init: true
    workspace: "{{ tf_workspace }}"
    variables_file: "{{ role_path }}/files/terraform/terraform.tfvars"
    init_reconfigure: true
    purge_workspace: true
    backend_config:
      region: "{{ devops_cos_region }}"
      endpoint: "{{ tf_backend_cos_endpoint }}"
      bucket: "{{ tf_backend_cos_bucket }}"
      key: "{{ aws_user_name }}"
      access_key: "{{ tf_backend_cos_access_key_id }}"
      secret_key: "{{ tf_backend_cos_secret_access_key }}"
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
  register: tf_result

# 3. Save bucket outputs and sevice credentials
# -----------------------------------------------------------------------------
- name: Create k8s Secret for sevice credentials
  no_log: true
  community.kubernetes.k8s:
    state: present
    namespace: "{{ sre_namespace }}"
    definition: "{{ lookup('template', 'templates/aws_users_creds.yaml.j2') | from_yaml }}"

- name: Create k8s configmaps for bucket outputs
  community.kubernetes.k8s:
    state: present
    namespace: "{{ sre_namespace }}"
    definition: "{{ lookup('template', 'templates/aws_user_tf_outputs_configmap.yaml.j2') | from_yaml }}"
