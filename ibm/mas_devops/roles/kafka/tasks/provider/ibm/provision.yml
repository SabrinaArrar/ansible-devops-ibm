- name: "Debug information"
  debug:
    msg:
      - "Event Streams Name ...... {{ eventstreams_name }}"
      - "Region .............................. {{ ibmcloud_region }}"
      - "Plan ...................... {{ eventstreams_plan }}"
      - "Retention(ms) ...................... {{ eventstreams_retention }}"

- name: Set eventstreams configmap name and secret name
  set_fact:
    eventstreams_configmap_name: "{{ eventstreams_name }}-cm"
    eventstreams_credentials_secret_name: "{{ eventstreams_name }}-credentials"

- name: Initialize vars
  set_fact:
    kafka_exists: false

- name: Fetch IBM eventstreams Information
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ eventstreams_name }}"
    service: "{{ eventstreams_service }}"
    location: "{{ eventstreams_location }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: es_exist_info
  failed_when: es_exist_info.rc != 0 and  "No resource instance found" not in  es_exist_info.stderr

- name: Set Fact Kafka exists or not
  when:
    - es_exist_info is defined
    - es_exist_info.resource is defined
    - es_exist_info.resource.id is defined and es_exist_info.resource.id != ''
  set_fact:
    kafka_exists: true

- name: Provision IBM eventstreams
  ibm.cloudcollection.ibm_resource_instance:
    name: "{{ eventstreams_name }}"
    plan: "{{ eventstreams_plan }}"
    service: "{{ eventstreams_service }}"
    location: "{{ eventstreams_location }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
    #resource_group_id: "{{ ibmcloud_resourcegroup }}"
  register: es_info
  when: not kafka_exists

- set_fact:
    es_exist_info: "{{ es_info }}"
  when: not kafka_exists

- debug:
    msg:
      - "{{ es_exist_info }}"

- name: Build kafka broker property list
  set_fact:
    kafka_host_prop_list: "{{ kafka_host_prop_list | default([]) + ['kafka_brokers_sasl.'+ item ] }}"
  with_sequence: start=0 end={{ es_exist_info.resource.extensions['kafka_brokers_sasl.#'] | int - 1 }}

- name: Fetch Kafka brokers
  loop: "{{ kafka_host_prop_list }}"
  set_fact: 
    hostports: "{{ hostports | default([]) + [es_exist_info.resource.extensions[item] | split(':')] }}"

- set_fact:
    kafka_hosts: "{{ lookup('ansible.builtin.template', 'templates/{{ kafka_provider }}/kafka-hosts.yml.j2') }}"

- name: Create KafkaCfg
  ansible.builtin.template:
    src: "{{ kafka_provider }}/evenstreams_kafkacfg.yml.j2"
    dest: "{{ mas_config_dir }}/{{ eventstreams_name }}-kafkacfg.yml"

- name: Create Service Credentials for IBM Cloud Eventstreams
  include_tasks: tasks/provider/{{ kafka_provider }}/create-eventstreams-service-credentials.yml