# Create IBM Cloud resource key for EventStreams (service id and apikey will be created automatically)

# First, we will check if the target k8s Secret eventstreams_credentials_secret_name already exists
# If it already exists, the creation of resource key and k8s secret will be skipped
- name: "Debug information"
  debug:
    msg:
    - "Event Streams Service Credentials Name ....... {{ eventstreams_credentials_secret_name }}"

- name: Fetch IBM eventstreams Information
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ eventstreams_name }}"
    service: "{{ eventstreams_service }}"
    location: "{{ eventstreams_location }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: es_exist_info
  failed_when: es_exist_info.rc != 0 and  "No resource instance found" not in  es_exist_info.stderr

- name: Set Fact Kafka exists or not
  when:
    - es_exist_info is defined
    - es_exist_info.resource is defined
    - es_exist_info.resource.id is defined and es_exist_info.resource.id != ''
  set_fact:
    kafka_exists: true

- name: Set Resource Id
  when: kafka_exists
  set_fact:
    es_id: "{{ es_exist_info.resource.id }}"

- name: Create IBM Cloud resource key for eventstreams (service id and apikey will be created automatically)
  ibm.cloudcollection.ibm_resource_key:
    name: "key-{{ eventstreams_credentials_secret_name }}"
    resource_instance_id: "{{ es_id }}"
    role: "Manager"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: resource_key_info

- debug:
    msg:
      - "{{ resource_key_info }}"

- name: Create k8s Secret for eventstreams service credentials
  ansible.builtin.template:
    dest: "{{ mas_config_dir }}/ibm-es-service-credentials.yml"
    src: "{{ kafka_provider }}/eventstreams_credential_secret.yml.j2"
