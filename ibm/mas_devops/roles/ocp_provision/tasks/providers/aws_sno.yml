---
# 1. Failure conditions
# -----------------------------------------------------------------------------
- name: "aws-sno : Fail if below variables not provided"
  assert:
    that:
      - lookup('env', 'AWS_ACCESS_KEY_ID') != ""
      - lookup('env', 'AWS_SECRET_ACCESS_KEY') != ""
      - lookup('env', 'BASE_DOMAIN') != ""
      - lookup('env', 'CLUSTER_NAME') != ""
      - lookup('env', 'PULL_SECRET') != ""
    fail_msg: "One or more required environment variables are not defined"


# 2. Debug Info
# -----------------------------------------------------------------------------
- name: "roks : Debug information"
  debug:
    msg:
      - "Cluster name ................. {{ cluster_name }}"
      - "OCP version .................. {{ ocp_version }}"
      - "AWS Region ................... {{ aws_region }}"
      - "Base Domain ...................{{ base_domain }}"
      - "Pull Secret....................{{ pull_secret }}"
      - "AWS_ACCESS_KEY_ID..............{{ aws_access_key_id }}"
      - "AWS_SECRET_ACCESS_KEY..........{{ aws_secret_access_key }}"
      - "SNO CONFIG DIR.................{{ sno_config_dir }}"
      - "AWS_SNO_INSTANCE_TYPE..........{{ aws_sno_instance_type }}"


# 3. Check for required software
# -----------------------------------------------------------------------------
- name: "Test if openshift-install is installed"
  shell: openshift-install version
  register: ocp_version
  ignore_errors: true

- name: "Fail if openshift-install is not installed"
  assert:
    that: ( ocp_version.rc == 0 )
    fail_msg: "openshit-install must be installed (https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.8.43/openshift-install-linux.tar.gz)"

# 4. Build the install-config.yaml
# -----------------------------------------------------------------------------
- name: "Check sno_config_dir"
  stat:
    path: "{{ sno_config_dir }}"
  register: sno_config_directory

- name: "Create sno_config_dir if it does not exist"
  file: 
    path: "{{ sno_config_dir }}"
    state: directory
    mode: '755'
  when: not sno_config_directory.stat.exists

- name: "aws sno: Build the install-config.yaml"
  ansible.builtin.template:
    src: aws_sno/install-config.yaml.j2
    dest: "{{ sno_config_dir }}/install-config.yaml"
    mode: '644' 


# 5. Create SNO Cluster
# -----------------------------------------------------------------------------
- name: "aws-sno: Create SNO cluster"
  shell: openshift-install create cluster --dir={{ sno_config_dir }}
  register: aws_sno_cluster_completion
  until:
    - aws_sno_cluster_completion.rc == 0
  retries: 60
  delay: 60

- name: "aws-sno: Debug final cluster state"
  debug:
    msg: "{{ aws_sno_cluster_completion.stdout}}"
  
# 6. Print SNO Cluster
# -----------------------------------------------------------------------------
- name: "aws-sno: Retrieve the access info"
  set_fact:
    login_password: "{{ lookup('file', sno_config_dir+'/auth/kubeadmin-password') }}"
    login_user: "kubeadmin"
    login_server:  "https://api.{{ lookup('env', 'CLUSTER_NAME') | default('', True) }}.{{ lookup('env','BASE_DOMAIN') }}:6443"

- name: "aws:sno: Print the access info"  
  debug:
    msg:
      - "Login Server:..................................{{ login_server }}"
      - "Login User:....................................{{ login_user }}"
      - "Login Password:................................{{ login_password }}"

- name: "aws-sno: oc login"
  shell: |
    oc login -u {{ login_user }} -p {{ login_password }} --server={{ login_server }} --insecure-skip-tls-verify=true

