---
# 1. Failure conditions
# -----------------------------------------------------------------------------
- name: "roks : Fail if ibmcloud_apikey is not provided"
  when: ibmcloud_apikey is not defined or ibmcloud_apikey == ""
  fail:
    msg: "ibmcloud_apikey property is required"


# 2. Debug Info
# -----------------------------------------------------------------------------
- name: "roks : Debug information"
  debug:
    msg:
      - "Cluster name ................. {{ cluster_name }}"
      - "OCP version .................. {{ ocp_version }}"
      - "IBM Cloud API key ............ ********************"
      - "IBM Cloud Resource Group ..... {{ ibmcloud_resourcegroup | default('<undefined>') }}"
      # ROKS specific
      - "ROKS zone .................... {{ roks_zone }}"
      - "ROKS flavor .................. {{ roks_flavor }}"
      - "ROKS workers ................. {{ roks_workers }}"
      - "ROKS flags ................... {{ roks_flags }}"


# 3. Login
# -----------------------------------------------------------------------------
- name: "roks : Login to IBM Cloud"
  shell: |
    ibmcloud login --apikey "{{ ibmcloud_apikey }}" -q --no-region


# 4. Optionally, switch to a specified resource group (creating it if necessary)
# -----------------------------------------------------------------------------
- name: "roks : Check resource group exists"
  when: ibmcloud_resourcegroup is defined
  shell: |
    ibmcloud resource group "{{ ibmcloud_resourcegroup }}"
  register: rg_lookup
  failed_when: "rg_lookup.rc > 1"

- name: "roks : Debug current resource group status"
  when:
    - ibmcloud_resourcegroup is defined
    - rg_lookup.rc == 0
  debug:
    msg: "Resource group {{ ibmcloud_resourcegroup }} already exists, skipping resource group creation"

- name: "roks : Create resource group if it does not exist"
  when:
    - ibmcloud_resourcegroup is defined
    - rg_lookup.rc == 1
  shell: |
    ibmcloud resource group-create {{ ibmcloud_resourcegroup }}
  register: rg_creation
  failed_when: "rg_creation.rc > 1"

- name: "roks : Switch to chosen resource group"
  when: ibmcloud_resourcegroup is defined
  shell: |
    ibmcloud target -g {{ ibmcloud_resourcegroup }}
  register: rg_target
  failed_when: "rg_target.rc > 1"


# 5. Check if cluster already exists
# -----------------------------------------------------------------------------
- name: "roks : Check if cluster already exists"
  shell: |
    ibmcloud oc cluster get -c {{ cluster_name }} --output json
  register: cluster_lookup
  failed_when: "cluster_lookup.rc > 1"

- name: "roks : Debug current cluster status"
  when: cluster_lookup.rc == 0
  debug:
    msg: "{{ cluster_name }} already exists, skipping cluster creation"


# 6. Setup vlans
# -----------------------------------------------------------------------------
- name: "roks : Lookup VLANs automatically (ibmcloud ks vlan ls --zone {{ roks_zone }} --output json)"
  when: cluster_lookup.rc == 1
  shell: |
    ibmcloud ks vlan ls --zone {{ roks_zone }} --output json
  register: ibmcloud_zone_vlans

- name: "roks : Configure Private and Public Vlans"
  when: cluster_lookup.rc == 1
  set_fact:
    public: "{{ ibmcloud_zone_vlans.stdout | from_json | ibm.mas_devops.public_vlan }}"
    private: "{{ ibmcloud_zone_vlans.stdout | from_json | ibm.mas_devops.private_vlan }}"


# 7. Create cluster
# -----------------------------------------------------------------------------
- name: "roks : Create IBM Cloud ROKS cluster"
  when: cluster_lookup.rc == 1
  shell: >
    ibmcloud oc cluster create classic \
      --hardware shared \
      --entitlement cloud_pak \
      --name {{ cluster_name }} \
      --version {{ ocp_version }} \
      --zone {{ roks_zone }} \
      --flavor {{ roks_flavor }} \
      --workers {{ roks_workers }} \
      --private-vlan {{ private is defined | ternary(private, omit) }} \
      --public-vlan {{ public is defined | ternary(public, omit) }} \
      {{ roks_flags }}


# 8. Watch cluster provisioning progress
# -----------------------------------------------------------------------------
- name: "roks : Wait until the Roks cluster is deployed"
  shell: |
    ibmcloud oc cluster get --cluster {{ cluster_name }} --output json
  register: roks_cluster_completion
  until:
    - roks_cluster_completion.rc == 0
    - (roks_cluster_completion.stdout | from_json).state == 'normal'
  retries: 60
  delay: 60

- name: "roks: Debug final cluster state"
  debug:
    msg: "{{ roks_cluster_completion.stdout | from_json }}"
