---

# 0. Fetch verstion information for NFD subscribtion
# -----------------------------------------------------------------------------
- name: "Fetch NFD version information from Openshift"
  shell: oc get packagemanifests/nfd -n openshift-marketplace -ojson | jq -r '.status.channels[] | select(.name == "'{{nfd_channel}}'") | .currentCSV'
  register: csv_result

- name: "Set value for nfd channel CSV"
  set_fact:
    nfd_csv: "{{csv_result.stdout}}"


# 1. Provide Debug information
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "NFD Namespace ...................... {{ nfd_namespace }}"
      - "NFD Channel   ...................... {{ nfd_channel }}"
      - "NFD Version   ...................... {{ nfd_csv }}"


# 2. Create NFD project
# -----------------------------------------------------------------------------
- name: "Create nfd namespace"
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: '{{ nfd_namespace }}'


# 3. Create NFD operator group and subscription
# -----------------------------------------------------------------------------
- name: "Create nfd operator group"
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'templates/nfd-operatorgroup.yml.j2') }}"
    wait: yes
    wait_timeout: 60 #subsequent tasks will fail if the CRD isn't fully created

- name: "Create nfd subscription"
  community.kubernetes.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/nfd-subscription.yml.j2') }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: 'CatalogSourcesUnhealthy'
      status: "False"

- name: "Wait until NodeFeatureDiscoveries CRD is available"
  community.kubernetes.k8s_info:
    api_version: apiextensions.k8s.io/v1
    name: "nodefeaturediscoveries.nfd.openshift.io"
    kind: CustomResourceDefinition
    wait: yes
    wait_sleep: 10
    wait_timeout: 300 # 5 mins until we give up waiting for the CRD to get into the expected state
    wait_condition:
      type: NamesAccepted
      status: "True"
  register: nfd_crd_info
  retries: 120 # ~approx 5 minutes before we give up waiting for the CRD to be created
  delay: 5 # seconds
  until:
    - nfd_crd_info.resources is defined
    - nfd_crd_info.resources | length > 0


# 4. Create NFD instance
# -----------------------------------------------------------------------------
- name: "Create NodeFeatureDiscovery instance"
  community.kubernetes.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/nfd-instance.yml.j2') }}"


# 5. Check if NFD instance to be created and pods are running
# -----------------------------------------------------------------------------
- name: "Verify that NFD instance is created and all pods are running"
  shell: oc get pods -n {{nfd_namespace}} -o json
  register: nfd_pods
  until:
    - nfd_pods.stdout is defined and nfd_pods.stdout | length > 0
    - nfd_pods.stdout | from_json | json_query('items[*].status.phase')|unique == ["Running"]
  retries: 20 # approx 20 minutes before we give up
  delay: 60 # 1 minute
