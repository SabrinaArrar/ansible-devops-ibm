---
# Configure COS bucket for Manage logging
# -----------------------------------------------------------------------------
- name: "Configure {{ cos_type }} bucket for Manage logging"
  include_role:
    name: ibm.mas_devops.cos_bucket

- name: Create s3secretkey secret in Manage namespace
  community.kubernetes.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/logging-bucket-creds.yml.j2')}}"

# - name: "Retrieve object storage certificates"
#   include_tasks: "tasks/providers/cos/retrieve-cos-certs.yml"

- name: "Retrieve object storage certificates"
  include_tasks: "tasks/retrieve-cos-certs.yml"

# Deactivate all the Admin center functionality except upload log to COS
# !!!! Only Run Below DELETE statement on PROD database
# -----------------------------------------------------------------------------
- name: Deactivate all the Admin center
  when: is_prod
  block:
    - name: "Lookup Manage db2 Pod"
      community.kubernetes.k8s_info:
        kind: Pod
        namespace: "{{ db2_namespace }}"
        label_selectors:
          - type = engine
          - app = {{ db2_instance_name }}
      register: db2wh_pod

    - name: Configure facts
      set_fact:
        db2wh_pod_name: "{{ db2wh_pod.resources[0].metadata.name }}"

    - name: Fail if db2wh_pod_name not matched
      fail:
        msg: "db2wh_pod_name not matched! Please check the {{ db2_instance_name }} is valid or not."
      when: db2wh_pod_name is undefined or db2wh_pod_name == ""

    - name: "Run SQL scripts in Manage db2 pod"
      shell: |
        oc cp {{ role_path }}/files/db2.sql {{db2wh_pod_name}}:/tmp/ -n {{ db2_namespace }}
        oc exec -it -n {{ db2_namespace }} {{ db2wh_pod_name }} -- bash -c 'su -lc "db2 connect to BLUDB; db2 -tvf /tmp/db2.sql" db2inst1'
        oc rsh -n {{ db2_namespace }} "{{ db2wh_pod_name }}" rm -f /tmp/db2.sql
      register: logupload_sec

- include_tasks: "tasks/apply-{{ cos_type }}-cos-certs-managews.yml"
