---

# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Fail if mas_public_cert_data_path is not provided when mas_manual_cert_mgmt=True"
  assert:
    that: mas_public_cert_data_path != ""
    fail_msg: "mas_public_cert_data_path is required when mas_manual_cert_mgmt is true"
  when: mas_manual_cert_mgmt == True


# 2. Create public tls secret of Manual certificate manage mode
# -----------------------------------------------------------------------------
- name: "Debug manual cert management"
  debug:
    msg:
      - "Instance Id ............................ {{ mas_instance_id }}"
      - "Target Namespace ....................... mas-{{ mas_instance_id }}-core"
      - "Manual Cert Mgmt ....................... {{ mas_manual_cert_mgmt }}"
      - "MAS public cert data path .............. {{ mas_public_cert_data_path }}"


# 3. Create namespace we will deploy to
# -----------------------------------------------------------------------------
- name: "Create namespace"
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "mas-{{ mas_instance_id }}-core"
  when: mas_manual_cert_mgmt == True


# 4. Check manual public TLS certificate secret is valid and create public cert tls secret in core namespace.
# -----------------------------------------------------------------------------

- name: "Get Public certificate data when manual cert mgmt is true"
  set_fact:
    public_cert_secret: "{{ lookup('file', mas_public_cert_data_path) | from_yaml }}"
  when: mas_manual_cert_mgmt == True and mas_public_cert_data_path != ""

- name: "Check Public certificate TLS secret has mandatory fields"
  assert:
    that:
      - public_cert_secret['data']['tls.key'] is defined
      - public_cert_secret['data']['tls.crt'] is defined
      - public_cert_secret['data']['ca.crt'] is defined
    fail_msg: "Public certificate TLS secret data should have 'tls.key', 'tls.crt' and 'ca.crt'"
  when: mas_manual_cert_mgmt == True and public_cert_secret is defined

- name: "Create Public certificate secret in core namespace when manual certificate management mode is turned on"
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/tls
      metadata:
        name: "{{ mas_instance_id }}-cert-public"
        namespace : "mas-{{ mas_instance_id }}-core"
      data:
        tls.key: "{{ public_cert_secret['data']['tls.key'] }}"
        tls.crt: "{{ public_cert_secret['data']['tls.crt'] }}"
        ca.crt: "{{ public_cert_secret['data']['ca.crt'] }}"
    wait: yes
    wait_timeout: 60 # subsequent tasks will fail if the group isn't fully created
  when: mas_manual_cert_mgmt == True and public_cert_secret is defined
