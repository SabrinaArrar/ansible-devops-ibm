
# tasks/**/*.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.install-db2wh
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - args:
        - |-
          echo "$(date) Installing CP4D & Db2 ... this will take upwards of hours"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/cp4d/install-db2.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: install-db2wh
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.install-amqstreams
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - args:
        - |-
          echo "$(date) Installing CP4D & Db2 ... this will take upwards of hours"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/dependencies/install-amqstreams.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: install-amqstreams
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.install-mongodb-ce
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - args:
        - |-
          echo "$(date) Install MongoDb CE"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/dependencies/install-mongodb-ce.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: install-mongodb-ce
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.run-fvt
spec:
  params:
    - name: fvt_suite
      type: string
      description: FVT Suite
    - name: fvt_version
      type: string
      description: FVT Version

  stepTemplate:
    name: 'run-fvt-$(params.fvt_suite)'
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs
      - name: FVT_SUITE
        value: $(params.fvt_suite)
      - name: FVT_VERSION
        value: $(params.fvt_version)

  steps:
    - args:
        - |-
          echo "$(date) Running $(params.fvt_suite) FVT Suite"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/mas/fvt/playbooks/run-fvt-pipeline-task.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:djp'
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.configure-app
spec:
  params:
    - name: mas_app_id
      type: string
      description: Maximo Applicaiton Suite Application Id
    - name: mas_workspace_id
      type: string
      description: Maximo Application Suite Workspace Id

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)
      - name: MAS_APP_ID
        value: $(params.mas_app_id)

  steps:
    - args:
        - |-
          echo "$(date) Configuring MAS Application"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/mas/configure-app.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: configure-app
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.configure-suite
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - name: configure-suite
      image: quay.io/ibmmas/ansible-devops:latest
      workingDir: /workspace/configs
      command: ["/bin/bash", "-c"]
      args:
        - |-
          echo "$(date) Configuring Suite"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/src/playbooks/suite-config.yml

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.hack-manage-db2
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - args:
        - |-
          echo "$(date) Prepare Db2Wh for Manage"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/mas/hack-manage-db2.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: hack-manage-db2
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.install-app
spec:
  params:
    - name: mas_app_id
      type: string
      description: Maximo Applicaiton Suite Application Id
    - name: mas_app_channel
      default: '8.x'
      type: string
      description: Catalog channel for the application operator subscription
    - name: mas_app_catalog_source
      default: 'ibm-operator-catalog'
      type: string
      description: Catalog source for the application operator subscription

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

      - name: MAS_APP_ID
        value: $(params.mas_app_id)
      - name: MAS_APP_CHANNEL
        value: $(params.mas_app_channel)
      - name: MAS_APP_CATALOG_SOURCE
        value: $(params.mas_app_catalog_source)

  steps:
    - args:
        - |-
          echo "$(date) Installing MAS application"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/mas/install-app.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: install-app
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.install-suite
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - args:
        - |-
          echo "$(date) Installing MAS application"
          source /opt/app-root/src/env.sh
          cp /workspace/settings/* /workspace/configs/
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/mas/install-suite.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: install-app
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.configure-ocp
spec:
  stepTemplate:
    env:
      - name: LOGDIR
        value: /workspace/logs
      - name: CLUSTER_TYPE
        value: in-cluster

  steps:
    - name: configure-ocp
      image: quay.io/ibmmas/ansible-devops:latest
      workingDir: /workspace/configs
      command: ["/bin/bash", "-c"]
      args:
        - |-
          echo "$(date) Installing MAS Dependencies"
          source /opt/app-root/src/env.sh
          ansible-playbook /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/dependencies/ocp-setup-mas-deps.yml

  workspaces:
    - name: settings
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ibm.mas_devops.install-sls
spec:
  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: LOGDIR
        value: /workspace/logs

  steps:
    - args:
        - |-
          echo "$(date) Installing SLS ... this will take upwards of minutes"
          source /opt/app-root/src/env.sh
          cp /workspace/settings/entitlement.lic /workspace/configs/entitlement.lic
          ansible-playbook -e "mongodb_cfg_file=$(params.mas_config_dir)/mongo-mongoce.yml" /opt/app-root/lib/python3.8/site-packages/ansible_collections/ibm/mas_devops/playbooks/sls/install-sls.yml
      command:
        - /bin/bash
        - '-c'
      image: 'quay.io/ibmmas/ansible-devops:latest'
      name: sls
      resources: {}
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: settings
