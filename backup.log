Using /etc/ansible/ansible.cfg as config file

PLAY [Backup/Restore MAS Core] *************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Fail if mas_instance_id is not provided] *********************************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [Fail if masbr_action is not set to backup|restore] ***********************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [Before run tasks] ********************************************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/before_run_tasks.yml for localhost

TASK [Check common variables] **************************************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/check_common_vars.yml for localhost

TASK [Load common variables] ***************************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_allow_multi_jobs: '{{ lookup(''env'', ''MASBR_ALLOW_MULTI_JOBS'') | default(true, true) | bool }}'
    masbr_cleanup_schedule: '{{ lookup(''env'', ''MASBR_CLEANUP_SCHEDULE'') | default(''0 1 * * *'', true) }}'
    masbr_cleanup_ttl_sec: '{{ lookup(''env'', ''MASBR_CLEANUP_TTL_SEC'') | default(''604800'', true) }}'
    masbr_confirm_cluster: '{{ lookup(''env'', ''MASBR_CONFIRM_CLUSTER'') | default(false, true) | bool }}'
    masbr_copy_timeout_sec: '{{ lookup(''env'', ''MASBR_COPY_TIMEOUT_SEC'') | default(43200, true) | int }}'
    masbr_job_timezone: '{{ lookup(''env'', ''MASBR_JOB_TIMEZONE'') | default('''', true) }}'
    masbr_local_temp_folder: '{{ lookup(''env'', ''MASBR_LOCAL_TEMP_FOLDER'') | default(''/tmp/masbr'', true) }}'
    masbr_mascli_image_pull_policy: '{{ lookup(''env'', ''MASBR_MASCLI_IMAGE_PULL_POLICY'') | default('''', true) }}'
    masbr_mascli_image_tag: '{{ lookup(''env'', ''MASBR_MASCLI_IMAGE_TAG'') | default(''latest'', true) }}'
    masbr_notification_levels:
      failure:
      - Failed
      - PartiallyFailed
      info:
      - Completed
      - Failed
      - PartiallyFailed
      verbose:
      - InProgress
      - Completed
      - Failed
      - PartiallyFailed
    masbr_slack_channel: '{{ lookup(''env'', ''MASBR_SLACK_CHANNEL'') }}'
    masbr_slack_enabled: '{{ lookup(''env'', ''MASBR_SLACK_ENABLED'') | default(false, true) | bool }}'
    masbr_slack_level: '{{ lookup(''env'', ''MASBR_SLACK_LEVEL'') | default(''info'', true) }}'
    masbr_slack_token: '{{ lookup(''env'', ''MASBR_SLACK_TOKEN'') }}'
    masbr_slack_user: '{{ lookup(''env'', ''MASBR_SLACK_USER'') | default(''MASBR'', true) }}'
    masbr_storage_cloud_bucket: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_BUCKET'') }}'
    masbr_storage_cloud_rclone_file: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_RCLONE_FILE'') }}'
    masbr_storage_cloud_rclone_name: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_RCLONE_NAME'') }}'
    masbr_storage_local_folder: '{{ lookup(''env'', ''MASBR_STORAGE_LOCAL_FOLDER'') }}'
    masbr_storage_pvc_name: '{{ lookup(''env'', ''MASBR_STORAGE_PVC_NAME'') }}'
    masbr_storage_pvc_path: '{{ lookup(''env'', ''MASBR_STORAGE_PVC_PATH'') | default(''masbr'', true) }}'
    masbr_storage_type: '{{ lookup(''env'', ''MASBR_STORAGE_TYPE'') }}'
  ansible_included_var_files:
  - /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_vars/backup_restore.yml

TASK [Set fact: internal used common variables] ********************************
ok: [localhost] => changed=false 
  ansible_facts:
    __masbr_dev_create_env_file: false
    masbr_pod_temp_folder: /tmp/masbr
    masbr_running_in_task_job: false
    masbr_timestamp_format: '%Y%m%d%H%M%S'

TASK [Set fact: job lock file] *************************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_pod_lock_file: /tmp/masbr/running.lock

TASK [Get job version from env] ************************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_version: '20241115133503'

TASK [Set fact: default values of storage location variables] ******************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_use_cloud_storage: false
    masbr_use_local_storage: false
    masbr_use_pvc_storage: false

TASK [Fail if masbr_storage_type is not provided] ******************************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [Fail if masbr_storage_type is not supported] *****************************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [Fail if masbr_storage_local_folder is not provided] **********************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [Set fact: use local backup storage] **************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_create_task_job: false
    masbr_use_local_storage: true

TASK [Debug: variables for local backup storage] *******************************
ok: [localhost] => 
  msg:
  - Use local storage .................. True
  - Local storage folder ............... /tmp/backup
  - Run tasks in k8s Job ............... False

TASK [Fail if masbr_storage_pvc_name is not provided] **************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if masbr_storage_pvc_path is not provided] **************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: use pvc backup storage] ****************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Debug: variables for pvc backup storage] *********************************
skipping: [localhost] => 

TASK [Fail if masbr_storage_cloud_rclone_file is not provided] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if masbr_storage_cloud_rclone_name is not provided] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if masbr_storage_cloud_bucket is not provided] **********************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: use cloud backup storage] **************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Debug: variables for cloud backup storage] *******************************
skipping: [localhost] => 

TASK [Fail if masbr_slack_token is not provided] *******************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if masbr_slack_channel is not provided] *****************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Debug: variables for sending Slack notification] *************************
skipping: [localhost] => 

TASK [Set fact: reset masbr_sent_notifications] ********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Confirm the currently connected cluster information] *********************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/confirm_cluster_info.yml for localhost

TASK [Get cluster domain] ******************************************************
ok: [localhost] => changed=false 
  api_found: true
  resources:
  - apiVersion: config.openshift.io/v1
    kind: DNS
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |-
          {"apiVersion":"config.openshift.io/v1","kind":"DNS","metadata":{"annotations":{},"creationTimestamp":null,"name":"cluster"},"spec":{"baseDomain":"backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud"},"status":{}}
      creationTimestamp: '2024-11-14T13:22:00Z'
      generation: 1
      managedFields:
      - apiVersion: config.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:spec:
            .: {}
            f:baseDomain: {}
        manager: kubectl-client-side-apply
        operation: Update
        time: '2024-11-14T13:22:00Z'
      name: cluster
      resourceVersion: '614'
      uid: 8eb417b4-1c71-4490-903e-dbaafc2210c6
    spec:
      baseDomain: backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [Set fact: cluster domain] ************************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_cluster_domain: backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [Debug: cluster domain] ***************************************************
ok: [localhost] => 
  msg: Cluster domain ........................ backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [Get user input] **********************************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Cancel task] *************************************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Check common backup variables] *******************************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/check_backup_vars.yml for localhost

TASK [Set fact: backup environment variables] **********************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_backup_data: ''
    masbr_backup_from_version: ''
    masbr_backup_schedule: ''
    masbr_backup_type: full

TASK [Fail if masbr_job_component is not provided] *****************************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [Set fact: init masbr_job_data_list] **************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list: []

TASK [Set fact: reset masbr_job_data_specified] ********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Get specified backup data] ***********************************************
skipping: [localhost] => (item=)  => changed=false 
  ansible_index_var: idx
  ansible_loop_var: item
  idx: 0
  item: ''
  skip_reason: Conditional result was False

TASK [Set fact: override the default masbr_job_data_list] **********************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: reset masbr_job_data_init] *************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: set default phase to each backup data] *************************

TASK [Set fact: backup data with default phase] ********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: running task type (schedule)] **********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: always create a new Job version for each Job of the CronJob] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: running task type (backup)] ************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_task_type: backup

TASK [Set fact: backup job variables] ******************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_type: backup

TASK [Set fact: job name include instance] *************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name_prefix: core-dev

TASK [Set fact: job name without instance] *************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: backup job name] ***********************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name: core-dev-full-20241115133503

TASK [Set fact: final backup job name] *****************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name_final: core-dev-full-20241115133503

TASK [Create local job folder] *************************************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/create_local_job_folder.yml for localhost

TASK [Set fact: local job folder] **********************************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_local_job_folder: /tmp/masbr/core-dev-full-20241115133503

TASK [Debug: local job folder] *************************************************
ok: [localhost] => 
  msg: Local job folder ...................... /tmp/masbr/core-dev-full-20241115133503

TASK [Check if local job folder exists] ****************************************
ok: [localhost] => changed=false 
  stat:
    exists: false

TASK [Create local job folder if not exists] ***********************************
changed: [localhost] => changed=true 
  gid: 1000
  group: david
  mode: '0755'
  owner: david
  path: /tmp/masbr/core-dev-full-20241115133503
  size: 4096
  state: directory
  uid: 1000

TASK [Get the latest Full backup job name when masbr_backup_from_version not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Get the Full backup job name by specified masbr_backup_from_version] *****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if not found any previous Full backup job] **************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: backup from job name] ******************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Get backup from job information] *****************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: backup from job information] ***********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Debug: backup from job information] **************************************
skipping: [localhost] => 

TASK [Fail if the backup from is not Completed] ********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if the component name of backup from job is not same as current job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: data list difference] ******************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Fail if the data list of backup from job does not cover current job] *****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Debug: backup job information] *******************************************
ok: [localhost] => 
  msg:
  - Backup job name ....................... core-dev-full-20241115133503
  - Backup type ........................... full
  - Backup from ........................... <undefined>
  - 'Backup component ...................... {''name'': ''core'', ''instance'': ''dev'', ''namespace'': ''mas-dev-core''}'
  - Backup data ........................... []

TASK [Add lables to current Job] ***********************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Before backup core] ******************************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [Set fact: already included these tasks] **********************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_included_before_run_tasks: true

TASK [MongoDB: backup] *********************************************************

TASK [ibm.mas_devops.ansible_version_check : Verify minimum Ansible version is 2.10.3] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Fail if mongodb_provider is not provided] *******
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : include_tasks] **********************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/mongodb/tasks/providers/community/backup.yml for localhost

TASK [ibm.mas_devops.mongodb : Fail if mas_instance_id is not provided] ********
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Get mongodb information] ************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/mongodb/tasks/providers/community/get-mongo-info.yml for localhost

TASK [ibm.mas_devops.mongodb : Get MongoDBCommunity] ***************************
ok: [localhost] => changed=false 
  api_found: true
  resources:
  - apiVersion: mongodbcommunity.mongodb.com/v1
    kind: MongoDBCommunity
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"mongodbcommunity.mongodb.com/v1","kind":"MongoDBCommunity","metadata":{"name":"mas-mongo-ce","namespace":"mongoce"},"spec":{"additionalMongodConfig":{"net.tls.allowInvalidCertificates":true,"net.tls.allowInvalidHostnames":true,"storage.wiredTiger.engineConfig.journalCompressor":"snappy"},"featureCompatibilityVersion":"7.0","members":3,"prometheus":{"passwordSecretRef":{"name":"mas-mongo-ce-metrics-endpoint-secret"},"username":"metrics-endpoint-user"},"security":{"authentication":{"modes":["SCRAM-SHA-256","SCRAM-SHA-1"]},"tls":{"caConfigMapRef":{"name":"mas-mongo-ce-cert-map"},"certificateKeySecretRef":{"name":"mongo-server-cert"},"enabled":true}},"statefulSet":{"spec":{"selector":{},"serviceName":"mas-mongo-ce-svc","template":{"spec":{"containers":[{"image":"quay.io/ibmmas/mongo@sha256:34341de709b1a70f5e0339ecb1ad2aa2152ecf88e5ca825e2a764da69bbd0269","name":"mongod","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"500m","memory":"1Gi"}}}]}},"volumeClaimTemplates":[{"metadata":{"name":"data-volume"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"20Gi"}},"storageClassName":"ibmc-block-gold"}},{"metadata":{"name":"logs-volume"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"20Gi"}},"storageClassName":"ibmc-block-gold"}}]}},"type":"ReplicaSet","users":[{"db":"admin","name":"admin","passwordSecretRef":{"name":"mas-mongo-ce-admin-password"},"roles":[{"db":"admin","name":"clusterAdmin"},{"db":"admin","name":"userAdminAnyDatabase"},{"db":"admin","name":"dbOwner"},{"db":"admin","name":"readWriteAnyDatabase"}],"scramCredentialsSecretName":"mas-mongo-ce-scram"}],"version":"7.0.12"}}'
        mongodb.com/v1.lastAppliedMongoDBVersion: 7.0.12
        mongodb.com/v1.lastSuccessfulConfiguration: '{"members":3,"type":"ReplicaSet","version":"7.0.12","arbiters":0,"featureCompatibilityVersion":"7.0","security":{"authentication":{"modes":["SCRAM-SHA-256","SCRAM-SHA-1"],"ignoreUnknownUsers":true},"tls":{"enabled":true,"optional":false,"certificateKeySecretRef":{"name":"mongo-server-cert"},"caConfigMapRef":{"name":"mas-mongo-ce-cert-map"}}},"users":[{"name":"admin","db":"admin","passwordSecretRef":{"name":"mas-mongo-ce-admin-password","key":""},"roles":[{"db":"admin","name":"clusterAdmin"},{"db":"admin","name":"userAdminAnyDatabase"},{"db":"admin","name":"dbOwner"},{"db":"admin","name":"readWriteAnyDatabase"}],"scramCredentialsSecretName":"mas-mongo-ce-scram","additionalConnectionStringConfig":null}],"statefulSet":{"spec":{},"metadata":{}},"agent":{"logLevel":"","logFile":"","maxLogFileDurationHours":0},"additionalMongodConfig":{},"prometheus":{"username":"metrics-endpoint-user","passwordSecretRef":{"name":"mas-mongo-ce-metrics-endpoint-secret","key":""},"tlsSecretKeyRef":{"name":"","key":""}},"additionalConnectionStringConfig":{}}'
      creationTimestamp: '2024-11-15T10:29:03Z'
      generation: 1
      managedFields:
      - apiVersion: mongodbcommunity.mongodb.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:spec:
            .: {}
            f:additionalMongodConfig:
              .: {}
              f:net.tls.allowInvalidCertificates: {}
              f:net.tls.allowInvalidHostnames: {}
              f:storage.wiredTiger.engineConfig.journalCompressor: {}
            f:featureCompatibilityVersion: {}
            f:members: {}
            f:prometheus:
              .: {}
              f:passwordSecretRef:
                .: {}
                f:name: {}
              f:username: {}
            f:security:
              .: {}
              f:authentication:
                .: {}
                f:ignoreUnknownUsers: {}
                f:modes: {}
              f:tls:
                .: {}
                f:caConfigMapRef: {}
                f:certificateKeySecretRef: {}
                f:enabled: {}
            f:statefulSet:
              .: {}
              f:spec:
                .: {}
                f:selector: {}
                f:serviceName: {}
                f:template:
                  .: {}
                  f:spec:
                    .: {}
                    f:containers: {}
                f:volumeClaimTemplates: {}
            f:type: {}
            f:users: {}
            f:version: {}
        manager: OpenAPI-Generator
        operation: Update
        time: '2024-11-15T10:29:03Z'
      - apiVersion: mongodbcommunity.mongodb.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              f:mongodb.com/v1.lastAppliedMongoDBVersion: {}
              f:mongodb.com/v1.lastSuccessfulConfiguration: {}
        manager: manager
        operation: Update
        time: '2024-11-15T10:36:50Z'
      - apiVersion: mongodbcommunity.mongodb.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status:
            .: {}
            f:currentMongoDBMembers: {}
            f:currentStatefulSetReplicas: {}
            f:mongoUri: {}
            f:phase: {}
            f:version: {}
        manager: manager
        operation: Update
        subresource: status
        time: '2024-11-15T10:36:50Z'
      name: mas-mongo-ce
      namespace: mongoce
      resourceVersion: '886920'
      uid: 29473510-2ed7-409b-a44f-d0e7bc7728ae
    spec:
      additionalMongodConfig:
        net.tls.allowInvalidCertificates: true
        net.tls.allowInvalidHostnames: true
        storage.wiredTiger.engineConfig.journalCompressor: snappy
      featureCompatibilityVersion: '7.0'
      members: 3
      prometheus:
        passwordSecretRef:
          name: mas-mongo-ce-metrics-endpoint-secret
        username: metrics-endpoint-user
      security:
        authentication:
          ignoreUnknownUsers: true
          modes:
          - SCRAM-SHA-256
          - SCRAM-SHA-1
        tls:
          caConfigMapRef:
            name: mas-mongo-ce-cert-map
          certificateKeySecretRef:
            name: mongo-server-cert
          enabled: true
      statefulSet:
        spec:
          selector: {}
          serviceName: mas-mongo-ce-svc
          template:
            spec:
              containers:
              - image: quay.io/ibmmas/mongo@sha256:34341de709b1a70f5e0339ecb1ad2aa2152ecf88e5ca825e2a764da69bbd0269
                name: mongod
                resources:
                  limits:
                    cpu: '1'
                    memory: 1Gi
                  requests:
                    cpu: 500m
                    memory: 1Gi
          volumeClaimTemplates:
          - metadata:
              name: data-volume
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 20Gi
              storageClassName: ibmc-block-gold
          - metadata:
              name: logs-volume
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 20Gi
              storageClassName: ibmc-block-gold
      type: ReplicaSet
      users:
      - db: admin
        name: admin
        passwordSecretRef:
          name: mas-mongo-ce-admin-password
        roles:
        - db: admin
          name: clusterAdmin
        - db: admin
          name: userAdminAnyDatabase
        - db: admin
          name: dbOwner
        - db: admin
          name: readWriteAnyDatabase
        scramCredentialsSecretName: mas-mongo-ce-scram
      version: 7.0.12
    status:
      currentMongoDBMembers: 3
      currentStatefulSetReplicas: 3
      mongoUri: mongodb://mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017,mas-mongo-ce-1.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017,mas-mongo-ce-2.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017/?replicaSet=mas-mongo-ce
      phase: Running
      version: 7.0.12

TASK [ibm.mas_devops.mongodb : Set fact: mongodb version] **********************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_version: 7.0.12

TASK [ibm.mas_devops.mongodb : Fail if mongodb does not exists] ****************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Set fact: mongodb running status] ***************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_running: true

TASK [ibm.mas_devops.mongodb : Fail if mongodb is not running] *****************
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Set fact: common backup job variables] **********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_component:
      app: core
      instance: dev
      name: mongodb
      namespace: mongoce
      provider: community
      version: 7.0.12
    masbr_job_data_list:
    - seq: '1'
      type: database

TASK [ibm.mas_devops.mongodb : Before run tasks] *******************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/before_run_tasks.yml for localhost

TASK [ibm.mas_devops.mongodb : Check common variables] *************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/check_common_vars.yml for localhost

TASK [ibm.mas_devops.mongodb : Load common variables] **************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_allow_multi_jobs: '{{ lookup(''env'', ''MASBR_ALLOW_MULTI_JOBS'') | default(true, true) | bool }}'
    masbr_cleanup_schedule: '{{ lookup(''env'', ''MASBR_CLEANUP_SCHEDULE'') | default(''0 1 * * *'', true) }}'
    masbr_cleanup_ttl_sec: '{{ lookup(''env'', ''MASBR_CLEANUP_TTL_SEC'') | default(''604800'', true) }}'
    masbr_confirm_cluster: '{{ lookup(''env'', ''MASBR_CONFIRM_CLUSTER'') | default(false, true) | bool }}'
    masbr_copy_timeout_sec: '{{ lookup(''env'', ''MASBR_COPY_TIMEOUT_SEC'') | default(43200, true) | int }}'
    masbr_job_timezone: '{{ lookup(''env'', ''MASBR_JOB_TIMEZONE'') | default('''', true) }}'
    masbr_local_temp_folder: '{{ lookup(''env'', ''MASBR_LOCAL_TEMP_FOLDER'') | default(''/tmp/masbr'', true) }}'
    masbr_mascli_image_pull_policy: '{{ lookup(''env'', ''MASBR_MASCLI_IMAGE_PULL_POLICY'') | default('''', true) }}'
    masbr_mascli_image_tag: '{{ lookup(''env'', ''MASBR_MASCLI_IMAGE_TAG'') | default(''latest'', true) }}'
    masbr_notification_levels:
      failure:
      - Failed
      - PartiallyFailed
      info:
      - Completed
      - Failed
      - PartiallyFailed
      verbose:
      - InProgress
      - Completed
      - Failed
      - PartiallyFailed
    masbr_slack_channel: '{{ lookup(''env'', ''MASBR_SLACK_CHANNEL'') }}'
    masbr_slack_enabled: '{{ lookup(''env'', ''MASBR_SLACK_ENABLED'') | default(false, true) | bool }}'
    masbr_slack_level: '{{ lookup(''env'', ''MASBR_SLACK_LEVEL'') | default(''info'', true) }}'
    masbr_slack_token: '{{ lookup(''env'', ''MASBR_SLACK_TOKEN'') }}'
    masbr_slack_user: '{{ lookup(''env'', ''MASBR_SLACK_USER'') | default(''MASBR'', true) }}'
    masbr_storage_cloud_bucket: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_BUCKET'') }}'
    masbr_storage_cloud_rclone_file: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_RCLONE_FILE'') }}'
    masbr_storage_cloud_rclone_name: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_RCLONE_NAME'') }}'
    masbr_storage_local_folder: '{{ lookup(''env'', ''MASBR_STORAGE_LOCAL_FOLDER'') }}'
    masbr_storage_pvc_name: '{{ lookup(''env'', ''MASBR_STORAGE_PVC_NAME'') }}'
    masbr_storage_pvc_path: '{{ lookup(''env'', ''MASBR_STORAGE_PVC_PATH'') | default(''masbr'', true) }}'
    masbr_storage_type: '{{ lookup(''env'', ''MASBR_STORAGE_TYPE'') }}'
  ansible_included_var_files:
  - /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_vars/backup_restore.yml

TASK [ibm.mas_devops.mongodb : Set fact: internal used common variables] *******
ok: [localhost] => changed=false 
  ansible_facts:
    __masbr_dev_create_env_file: false
    masbr_pod_temp_folder: /tmp/masbr
    masbr_running_in_task_job: false
    masbr_timestamp_format: '%Y%m%d%H%M%S'

TASK [ibm.mas_devops.mongodb : Set fact: job lock file] ************************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_pod_lock_file: /tmp/masbr/running.lock

TASK [ibm.mas_devops.mongodb : Get job version from env] ***********************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: default values of storage location variables] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_use_cloud_storage: false
    masbr_use_local_storage: false
    masbr_use_pvc_storage: false

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_type is not provided] *****
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_type is not supported] ****
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_local_folder is not provided] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Set fact: use local backup storage] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_create_task_job: false
    masbr_use_local_storage: true

TASK [ibm.mas_devops.mongodb : Debug: variables for local backup storage] ******
ok: [localhost] => 
  msg:
  - Use local storage .................. True
  - Local storage folder ............... /tmp/backup
  - Run tasks in k8s Job ............... False

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_pvc_name is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_pvc_path is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: use pvc backup storage] ***************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: variables for pvc backup storage] ********
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_cloud_rclone_file is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_cloud_rclone_name is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if masbr_storage_cloud_bucket is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: use cloud backup storage] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: variables for cloud backup storage] ******
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Fail if masbr_slack_token is not provided] ******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if masbr_slack_channel is not provided] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: variables for sending Slack notification] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Set fact: reset masbr_sent_notifications] *******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Confirm the currently connected cluster information] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/confirm_cluster_info.yml for localhost

TASK [ibm.mas_devops.mongodb : Get cluster domain] *****************************
ok: [localhost] => changed=false 
  api_found: true
  resources:
  - apiVersion: config.openshift.io/v1
    kind: DNS
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |-
          {"apiVersion":"config.openshift.io/v1","kind":"DNS","metadata":{"annotations":{},"creationTimestamp":null,"name":"cluster"},"spec":{"baseDomain":"backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud"},"status":{}}
      creationTimestamp: '2024-11-14T13:22:00Z'
      generation: 1
      managedFields:
      - apiVersion: config.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:spec:
            .: {}
            f:baseDomain: {}
        manager: kubectl-client-side-apply
        operation: Update
        time: '2024-11-14T13:22:00Z'
      name: cluster
      resourceVersion: '614'
      uid: 8eb417b4-1c71-4490-903e-dbaafc2210c6
    spec:
      baseDomain: backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [ibm.mas_devops.mongodb : Set fact: cluster domain] ***********************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_cluster_domain: backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [ibm.mas_devops.mongodb : Debug: cluster domain] **************************
ok: [localhost] => 
  msg: Cluster domain ........................ backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [ibm.mas_devops.mongodb : Get user input] *********************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Cancel task] ************************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Check common backup variables] ******************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/check_backup_vars.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: backup environment variables] *********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_backup_data: ''
    masbr_backup_from_version: ''
    masbr_backup_schedule: ''
    masbr_backup_type: full

TASK [ibm.mas_devops.mongodb : Fail if masbr_job_component is not provided] ****
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.mongodb : Set fact: init masbr_job_data_list] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - seq: '1'
      type: database

TASK [ibm.mas_devops.mongodb : Set fact: reset masbr_job_data_specified] *******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get specified backup data] **********************
skipping: [localhost] => (item=)  => changed=false 
  ansible_index_var: idx
  ansible_loop_var: item
  idx: 0
  item: ''
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: override the default masbr_job_data_list] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: reset masbr_job_data_init] ************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_init: []

TASK [ibm.mas_devops.mongodb : Set fact: set default phase to each backup data] ***
ok: [localhost] => (item={'seq': '1', 'type': 'database'}) => changed=false 
  ansible_facts:
    masbr_job_data_init:
    - phase: New
      seq: '1'
      type: database
  ansible_loop_var: item
  item:
    seq: '1'
    type: database

TASK [ibm.mas_devops.mongodb : Set fact: backup data with default phase] *******
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: New
      seq: '1'
      type: database

TASK [ibm.mas_devops.mongodb : Set fact: running task type (schedule)] *********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: always create a new Job version for each Job of the CronJob] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: running task type (backup)] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: backup job variables] *****************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_type: backup

TASK [ibm.mas_devops.mongodb : Set fact: job name include instance] ************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name_prefix: mongodb-dev

TASK [ibm.mas_devops.mongodb : Set fact: job name without instance] ************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: backup job name] **********************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name: mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Set fact: final backup job name] ****************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name_final: mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Create local job folder] ************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/create_local_job_folder.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local job folder] *********************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_local_job_folder: /tmp/masbr/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local job folder] ************************
ok: [localhost] => 
  msg: Local job folder ...................... /tmp/masbr/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Check if local job folder exists] ***************
ok: [localhost] => changed=false 
  stat:
    exists: false

TASK [ibm.mas_devops.mongodb : Create local job folder if not exists] **********
changed: [localhost] => changed=true 
  gid: 1000
  group: david
  mode: '0755'
  owner: david
  path: /tmp/masbr/mongodb-dev-full-20241115133503
  size: 4096
  state: directory
  uid: 1000

TASK [ibm.mas_devops.mongodb : Get the latest Full backup job name when masbr_backup_from_version not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get the Full backup job name by specified masbr_backup_from_version] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if not found any previous Full backup job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: backup from job name] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get backup from job information] ****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: backup from job information] **********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: backup from job information] *************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Fail if the backup from is not Completed] *******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if the component name of backup from job is not same as current job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: data list difference] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if the data list of backup from job does not cover current job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: backup job information] ******************
ok: [localhost] => 
  msg:
  - Backup job name ....................... mongodb-dev-full-20241115133503
  - Backup type ........................... full
  - Backup from ........................... <undefined>
  - 'Backup component ...................... {''name'': ''mongodb'', ''instance'': ''dev'', ''app'': ''core'', ''namespace'': ''mongoce'', ''provider'': ''community'', ''version'': ''7.0.12''}'
  - 'Backup data ........................... [{''seq'': ''1'', ''type'': ''database'', ''phase'': ''New''}]'

TASK [ibm.mas_devops.mongodb : Add lables to current Job] **********************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Before backup mongodb] **************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/mongodb/tasks/providers/community/before-backup-restore.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: mongodb pod variables] ****************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_container_name: mongod
    mongodb_pod_name: mas-mongo-ce-0

TASK [ibm.mas_devops.mongodb : Set fact: exec command in mongodb pod] **********
ok: [localhost] => changed=false 
  ansible_facts:
    exec_in_pod_begin: oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c '
    exec_in_pod_end: ''''

TASK [ibm.mas_devops.mongodb : Set fact: copy file variables] ******************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_cf_affinity: true
    masbr_cf_are_pvc_paths: false
    masbr_cf_container_name: mongod
    masbr_cf_namespace: mongoce
    masbr_cf_pod_name: mas-mongo-ce-0
    masbr_cf_pvc_mount_path: /data
    masbr_cf_pvc_name: data-volume-mas-mongo-ce-0
    masbr_cf_pvc_sub_path: ''

TASK [ibm.mas_devops.mongodb : Set fact: temporary folders] ********************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_pod_temp_folder: /tmp/masbr/mongodb-dev-full-20241115133503
    mongodb_pvc_temp_folder: /data/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Get mongodb admin password] *********************
ok: [localhost] => changed=false 
  api_found: true
  resources:
  - apiVersion: v1
    data:
      password: NURUNXpQdDZXN1U5SkZBeg==
    kind: Secret
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Secret","metadata":{"name":"mas-mongo-ce-admin-password","namespace":"mongoce"},"stringData":{"password":"5DT5zPt6W7U9JFAz"},"type":"Opaque"}'
      creationTimestamp: '2024-11-15T10:29:00Z'
      managedFields:
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:data:
            .: {}
            f:password: {}
          f:metadata:
            f:annotations:
              .: {}
              f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:type: {}
        manager: OpenAPI-Generator
        operation: Update
        time: '2024-11-15T10:29:00Z'
      name: mas-mongo-ce-admin-password
      namespace: mongoce
      resourceVersion: '877917'
      uid: f8cc924f-b5dc-48bd-bef4-c5993f344fdc
    type: Opaque

TASK [ibm.mas_devops.mongodb : Set fact: mongodb admin password] ***************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_password: 5DT5zPt6W7U9JFAz

TASK [ibm.mas_devops.mongodb : Get mongodb ca file] ****************************
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' ls /var/lib/tls/ca/*.pem | head -n 1 '
  delta: '0:00:00.607444'
  end: '2024-11-15 13:35:18.280474'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:17.673030'
  stderr: ''
  stderr_lines: <omitted>
  stdout: /var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Set fact: mongodb ca file] **********************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_ca_file: /var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem

TASK [ibm.mas_devops.mongodb : Get mongodb server information] *****************
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mongosh --quiet --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=admin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --tls --tlsCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem admin --eval="print(JSON.stringify(db.runCommand({hello:1})))" '
  delta: '0:00:01.755773'
  end: '2024-11-15 13:35:20.279523'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:18.523750'
  stderr: ''
  stderr_lines: <omitted>
  stdout: '{"topologyVersion":{"processId":"6737230351706dd925e431ab","counter":{"low":6,"high":0,"unsigned":false}},"hosts":["mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017","mas-mongo-ce-1.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017","mas-mongo-ce-2.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017"],"setName":"mas-mongo-ce","setVersion":1,"isWritablePrimary":true,"secondary":false,"primary":"mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017","me":"mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017","electionId":"7fffffff0000000000000001","lastWrite":{"opTime":{"ts":{"$timestamp":"7437499148842041345"},"t":{"low":1,"high":0,"unsigned":false}},"lastWriteDate":"2024-11-15T13:35:14.000Z","majorityOpTime":{"ts":{"$timestamp":"7437499148842041345"},"t":{"low":1,"high":0,"unsigned":false}},"majorityWriteDate":"2024-11-15T13:35:14.000Z"},"maxBsonObjectSize":16777216,"maxMessageSizeBytes":48000000,"maxWriteBatchSize":100000,"localTime":"2024-11-15T13:35:20.434Z","logicalSessionTimeoutMinutes":30,"connectionId":7774,"minWireVersion":0,"maxWireVersion":21,"readOnly":false,"ok":1,"$clusterTime":{"clusterTime":{"$timestamp":"7437499148842041345"},"signature":{"hash":"rz/SYI0VxACfHfUFVMwxf63Y/TY=","keyId":{"low":6,"high":1731667004,"unsigned":false}}},"operationTime":{"$timestamp":"7437499148842041345"}}'
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Set fact: mongodb primary host] *****************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_primary_host: mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017

TASK [ibm.mas_devops.mongodb : Debug: mongodb information] *********************
ok: [localhost] => 
  msg:
  - MongoDB version ............................ 7.0.12
  - MongoDB is running ......................... True
  - MongoDB pod name ........................... mas-mongo-ce-0
  - MongoDB primary host ....................... mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017
  - MongoDB ca file ............................ /var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem

TASK [ibm.mas_devops.mongodb : Try to find job lock file in pod] ***************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Fail if found job lock file in pod] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Create job lock file in pod] ********************
changed: [localhost] => changed=true 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mkdir -p /tmp/masbr; touch /tmp/masbr/running.lock '
  delta: '0:00:00.589306'
  end: '2024-11-15 13:35:21.240041'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:20.650735'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Get storage usage of pod temporary folder] ******
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mkdir -p /tmp/masbr/mongodb-dev-full-20241115133503; df -h /tmp/masbr/mongodb-dev-full-20241115133503 '
  delta: '0:00:00.678354'
  end: '2024-11-15 13:35:22.093377'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:21.415023'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Filesystem               Size  Used Avail Use% Mounted on
    /dev/mapper/docker_data   98G   39G   55G  42% /tmp
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: storage usage of pod temporary folder] ***
ok: [localhost] => 
  msg:
  - Filesystem               Size  Used Avail Use% Mounted on
  - /dev/mapper/docker_data   98G   39G   55G  42% /tmp

TASK [ibm.mas_devops.mongodb : Get storage usage of pvc temporary folder] ******
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mkdir -p /data/mongodb-dev-full-20241115133503; df -h /data/mongodb-dev-full-20241115133503 '
  delta: '0:00:00.671375'
  end: '2024-11-15 13:35:22.982733'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:22.311358'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Filesystem                                     Size  Used Avail Use% Mounted on
    /dev/mapper/3600a098038305672713f51456f2f6c50   20G  319M   20G   2% /data
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: storage usage of pvc temporary folder] ***
ok: [localhost] => 
  msg:
  - Filesystem                                     Size  Used Avail Use% Mounted on
  - /dev/mapper/3600a098038305672713f51456f2f6c50   20G  319M   20G   2% /data

TASK [ibm.mas_devops.mongodb : Set fact: how to copy backup files to specified storage location] ***
ok: [localhost] => changed=false 
  ansible_facts:
    _mongodb_cf_in_server: false

TASK [ibm.mas_devops.mongodb : Set fact: already included these tasks] *********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_included_before_run_tasks: true

TASK [ibm.mas_devops.mongodb : Create k8s Job to run backup tasks] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update backup job status: New] ******************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/update_job_status.yml for localhost

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_component] ***************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_data_list] ***************
ok: [localhost] => (item={'seq': '1', 'phase': 'New'}) => changed=false 
  ansible_loop_var: item
  item:
    phase: New
    seq: '1'
  masbr_job_data_list:
  - phase: New
    seq: '1'
    type: database

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_data_list] ******************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: New
      seq: '1'
      type: database

TASK [ibm.mas_devops.mongodb : Get specified masbr_job_status.phase] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get unique phases of all job data types] ********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_phases:
    - New

TASK [ibm.mas_devops.mongodb : Debug: unique phases of all job data types] *****
ok: [localhost] => 
  msg: Job data phases ................... ['New']

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('New')] *******
ok: [localhost] => changed=false 
  ansible_facts:
    _job_status_:
      phase: New

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('Completed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('Failed')] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('New')] ****
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_status:
      phase: New
      startTimestamp: '2024-11-15T13:35:23'

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('Completed', 'Failed', 'PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Send notification] ******************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/send_notification.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: Slack message] ************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Send Slack message] *****************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: append to masbr_job_status.sentNotifications (Slack)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: update job variables] ********************
ok: [localhost] => 
  msg:
  - 'masbr_job_component .................... {''name'': ''mongodb'', ''instance'': ''dev'', ''app'': ''core'', ''namespace'': ''mongoce'', ''provider'': ''community'', ''version'': ''7.0.12''}'
  - 'masbr_job_data_list .................... [{''seq'': ''1'', ''type'': ''database'', ''phase'': ''New''}]'
  - 'masbr_job_status ....................... {''phase'': ''New'', ''startTimestamp'': ''2024-11-15T13:35:23''}'

TASK [ibm.mas_devops.mongodb : Create updated job file] ************************
changed: [localhost] => changed=true 
  checksum: 27d2853a69183230892585611bf8ed56ca43f1ba
  dest: /tmp/masbr/mongodb-dev-full-20241115133503/backup.yml
  gid: 1000
  group: david
  md5sum: b08fdc8279a89306df8053922ed0396e
  mode: '0644'
  owner: david
  size: 514
  src: /home/david/.ansible/tmp/ansible-tmp-1731677724.2947176-18380-218141259869194/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.mongodb : Copy local job files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local storage job folder] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local storage job folder] ****************
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/mongodb-dev-full-20241115133503/ && cp -rf /tmp/masbr/mongodb-dev-full-20241115133503/backup.yml /tmp/backup/backups/mongodb-dev-full-20241115133503/ && ls -lA /tmp/backup/backups/mongodb-dev-full-20241115133503/
  delta: '0:00:00.003902'
  end: '2024-11-15 13:35:25.063113'
  item:
    dest_folder: ''
    src_file: backup.yml
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:25.059211'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 4
    -rw-r--r-- 1 david david 514 Nov 15 13:35 backup.yml
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 4
    - -rw-r--r-- 1 david david 514 Nov 15 13:35 backup.yml

TASK [ibm.mas_devops.mongodb : Set fact: cloud storage job folder] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: cloud storage job folder] ****************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: ''
    src_file: backup.yml
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Append job final status to the job folder name] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Run backup tasks for each data type] ************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/mongodb/tasks/providers/community/backup-database.yml for localhost => (item={'seq': '1', 'type': 'database', 'phase': 'New'})

TASK [ibm.mas_devops.mongodb : Update database backup status: InProgress] ******
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/update_job_status.yml for localhost

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_component] ***************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_data_list] ***************
changed: [localhost] => (item={'seq': '1', 'phase': 'InProgress'}) => changed=true 
  ansible_loop_var: item
  item:
    phase: InProgress
    seq: '1'
  masbr_job_data_list:
  - phase: InProgress
    seq: '1'
    type: database

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_data_list] ******************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: InProgress
      seq: '1'
      type: database

TASK [ibm.mas_devops.mongodb : Get specified masbr_job_status.phase] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get unique phases of all job data types] ********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_phases:
    - InProgress

TASK [ibm.mas_devops.mongodb : Debug: unique phases of all job data types] *****
ok: [localhost] => 
  msg: Job data phases ................... ['InProgress']

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('New')] *******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('InProgress')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    _job_status_:
      phase: InProgress

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('Completed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('Failed')] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('New')] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('InProgress')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_status:
      phase: InProgress
      startTimestamp: '2024-11-15T13:35:23'

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('Completed', 'Failed', 'PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Send notification] ******************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/send_notification.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: Slack message] ************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Send Slack message] *****************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: append to masbr_job_status.sentNotifications (Slack)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: update job variables] ********************
ok: [localhost] => 
  msg:
  - 'masbr_job_component .................... {''name'': ''mongodb'', ''instance'': ''dev'', ''app'': ''core'', ''namespace'': ''mongoce'', ''provider'': ''community'', ''version'': ''7.0.12''}'
  - 'masbr_job_data_list .................... [{''seq'': ''1'', ''type'': ''database'', ''phase'': ''InProgress''}]'
  - 'masbr_job_status ....................... {''phase'': ''InProgress'', ''startTimestamp'': ''2024-11-15T13:35:23''}'

TASK [ibm.mas_devops.mongodb : Create updated job file] ************************
changed: [localhost] => changed=true 
  checksum: b14620c70b4fa9c5837b63311d3c683f32284843
  dest: /tmp/masbr/mongodb-dev-full-20241115133503/backup.yml
  gid: 1000
  group: david
  md5sum: aa9ba8372fd6fa41a2bdf912c3a5e2e1
  mode: '0644'
  owner: david
  size: 528
  src: /home/david/.ansible/tmp/ansible-tmp-1731677726.4030578-18512-70595802371255/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.mongodb : Copy local job files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local storage job folder] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local storage job folder] ****************
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/mongodb-dev-full-20241115133503/ && cp -rf /tmp/masbr/mongodb-dev-full-20241115133503/backup.yml /tmp/backup/backups/mongodb-dev-full-20241115133503/ && ls -lA /tmp/backup/backups/mongodb-dev-full-20241115133503/
  delta: '0:00:00.004086'
  end: '2024-11-15 13:35:27.178955'
  item:
    dest_folder: ''
    src_file: backup.yml
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:27.174869'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 4
    -rw-r--r-- 1 david david 528 Nov 15 13:35 backup.yml
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 4
    - -rw-r--r-- 1 david david 528 Nov 15 13:35 backup.yml

TASK [ibm.mas_devops.mongodb : Set fact: cloud storage job folder] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: cloud storage job folder] ****************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: ''
    src_file: backup.yml
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Append job final status to the job folder name] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Create mongodb role and user for backing up databases] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/mongodb/tasks/providers/community/create-role-user.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: mongodb role and user] ****************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_role: sysadmin
    mongodb_user: sysadmin

TASK [ibm.mas_devops.mongodb : Get mongodb role 'sysadmin'] ********************
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c 'mongosh --quiet --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=admin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --tls --tlsCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem admin --eval="db.getRole( \"sysadmin\" )"'
  delta: '0:00:01.788298'
  end: '2024-11-15 13:35:29.577669'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:27.789371'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    {
      _id: 'admin.sysadmin',
      role: 'sysadmin',
      db: 'admin',
      roles: [],
      inheritedRoles: [],
      isBuiltin: false
    }
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: get mongodb role result] *****************
ok: [localhost] => 
  msg: 'Get mongodb role result ............... [''{'', "  _id: ''admin.sysadmin'',", "  role: ''sysadmin'',", "  db: ''admin'',", ''  roles: [],'', ''  inheritedRoles: [],'', ''  isBuiltin: false'', ''}'']'

TASK [ibm.mas_devops.mongodb : Create mongodb role 'sysadmin'] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: create mongodb role result] **************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Get mongodb user 'sysadmin'] ********************
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c 'mongosh --quiet --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=admin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --tls --tlsCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem admin --eval="db.getUser( \"sysadmin\" )"'
  delta: '0:00:01.780234'
  end: '2024-11-15 13:35:31.626593'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:29.846359'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    {
      _id: 'admin.sysadmin',
      userId: UUID('b8f83e12-b6c3-4d6b-bd89-fd5737ce0669'),
      user: 'sysadmin',
      db: 'admin',
      roles: [ { role: 'sysadmin', db: 'admin' } ],
      mechanisms: [ 'SCRAM-SHA-1', 'SCRAM-SHA-256' ]
    }
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: get mongodb user result] *****************
ok: [localhost] => 
  msg: 'Get mongodb user result ............... [''{'', "  _id: ''admin.sysadmin'',", "  userId: UUID(''b8f83e12-b6c3-4d6b-bd89-fd5737ce0669''),", "  user: ''sysadmin'',", "  db: ''admin'',", "  roles: [ { role: ''sysadmin'', db: ''admin'' } ],", "  mechanisms: [ ''SCRAM-SHA-1'', ''SCRAM-SHA-256'' ]", ''}'']'

TASK [ibm.mas_devops.mongodb : Create mongodb user 'sysadmin'] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: create mongodb user result] **************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Set fact: mongodb database backup folder] *******
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_backup_folder: /tmp/masbr/mongodb-dev-full-20241115133503/database

TASK [ibm.mas_devops.mongodb : Set fact: mongodb database backup log] **********
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_backup_log: /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log

TASK [ibm.mas_devops.mongodb : Create mongodb database backup folder] **********
changed: [localhost] => changed=true 
  cmd: |-
    mkdir -p /tmp/masbr/mongodb-dev-full-20241115133503/database; oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mkdir -p /tmp/masbr/mongodb-dev-full-20241115133503/database '
  delta: '0:00:00.846587'
  end: '2024-11-15 13:35:32.739333'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:31.892746'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Set fact: default database name filter] *********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: database name filters for each mas app] ***
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_db_all_filters:
      iot: iot_dev_
      monitor: iot_dev_|mas_dev_monitor
      optimizer: mas_dev_optimizer
      visualinspection: mas-dev-(visualinspection|edgeman)

TASK [ibm.mas_devops.mongodb : Set fact: always backup databases for core] *****
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_db_app_filters:
    - mas_dev_(core|catalog|adoptionusage)

TASK [ibm.mas_devops.mongodb : Set fact: append database name filters for (core)] ***
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_db_app_filters:
    - mas_dev_(core|catalog|adoptionusage)
    - ''

TASK [ibm.mas_devops.mongodb : Set fact: database name filters for (core)] *****
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_db_filter: mas_dev_(core|catalog|adoptionusage)

TASK [ibm.mas_devops.mongodb : Debug: database name filter] ********************
ok: [localhost] => 
  msg: mas_dev_(core|catalog|adoptionusage)

TASK [ibm.mas_devops.mongodb : Get all database names belong to mas instance dev] ***
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mongosh --quiet --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=sysadmin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --tls --tlsCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem admin --eval="JSON.stringify(db.adminCommand({
      listDatabases: 1,
      nameOnly: true,
      filter: { name: /mas_dev_(core|catalog|adoptionusage)/ }
      }))" | tee -a /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log
    '
  delta: '0:00:01.951022'
  end: '2024-11-15 13:35:35.313504'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:33.362482'
  stderr: ''
  stderr_lines: <omitted>
  stdout: '{"databases":[{"name":"mas_dev_adoptionusage"},{"name":"mas_dev_catalog"},{"name":"mas_dev_core"}],"ok":1,"$clusterTime":{"clusterTime":{"$timestamp":"7437499234741387265"},"signature":{"hash":"AAAAAAAAAAAAAAAAAAAAAAAAAAA=","keyId":{"low":0,"high":0,"unsigned":false}}},"operationTime":{"$timestamp":"7437499234741387265"}}'
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Set fact: database names] ***********************
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_db_names:
    - name: mas_dev_adoptionusage
    - name: mas_dev_catalog
    - name: mas_dev_core

TASK [ibm.mas_devops.mongodb : Debug: database names] **************************
ok: [localhost] => 
  msg:
  - name: mas_dev_adoptionusage
  - name: mas_dev_catalog
  - name: mas_dev_core

TASK [ibm.mas_devops.mongodb : Get the timestamp of current backup] ************
ok: [localhost] => changed=false 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' date +%s '
  delta: '0:00:00.715636'
  end: '2024-11-15 13:35:36.288179'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:35.572543'
  stderr: ''
  stderr_lines: <omitted>
  stdout: '1731677736'
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Set fact: timestamp of current backup] **********
ok: [localhost] => changed=false 
  ansible_facts:
    mongodb_backup_ts: '1731677736'

TASK [ibm.mas_devops.mongodb : Take full backup of mongodb databases] **********
changed: [localhost] => (item={'name': 'mas_dev_adoptionusage'}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mongodump --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=sysadmin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --ssl --sslCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem --out=/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump --db=mas_dev_adoptionusage |& tee -a /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log '
  delta: '0:00:02.110100'
  end: '2024-11-15 13:35:38.615435'
  item:
    name: mas_dev_adoptionusage
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:36.505335'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    2024-11-15T13:35:38.815+0000    writing mas_dev_adoptionusage.historical_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/historical_usage.bson
    2024-11-15T13:35:38.815+0000    writing mas_dev_adoptionusage.monthly_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/monthly_usage.bson
    2024-11-15T13:35:38.819+0000    writing mas_dev_adoptionusage.peak_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/peak_usage.bson
    2024-11-15T13:35:38.821+0000    done dumping mas_dev_adoptionusage.historical_usage (1 document)
    2024-11-15T13:35:38.821+0000    done dumping mas_dev_adoptionusage.monthly_usage (1 document)
    2024-11-15T13:35:38.821+0000    done dumping mas_dev_adoptionusage.peak_usage (1 document)
    2024-11-15T13:35:38.822+0000    writing mas_dev_adoptionusage.daily_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/daily_usage.bson
    2024-11-15T13:35:38.822+0000    writing mas_dev_adoptionusage.api_metrics to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/api_metrics.bson
    2024-11-15T13:35:38.822+0000    writing mas_dev_adoptionusage.users_hourly to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/users_hourly.bson
    2024-11-15T13:35:38.822+0000    writing mas_dev_adoptionusage.hourly_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/hourly_usage.bson
    2024-11-15T13:35:38.823+0000    done dumping mas_dev_adoptionusage.api_metrics (0 documents)
    2024-11-15T13:35:38.823+0000    done dumping mas_dev_adoptionusage.users_hourly (0 documents)
    2024-11-15T13:35:38.825+0000    done dumping mas_dev_adoptionusage.hourly_usage (0 documents)
    2024-11-15T13:35:38.825+0000    writing mas_dev_adoptionusage.users to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/users.bson
    2024-11-15T13:35:38.826+0000    done dumping mas_dev_adoptionusage.users (0 documents)
    2024-11-15T13:35:38.828+0000    done dumping mas_dev_adoptionusage.daily_usage (3 documents)
  stdout_lines: <omitted>
changed: [localhost] => (item={'name': 'mas_dev_catalog'}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mongodump --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=sysadmin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --ssl --sslCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem --out=/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump --db=mas_dev_catalog |& tee -a /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log '
  delta: '0:00:01.185553'
  end: '2024-11-15 13:35:39.938327'
  item:
    name: mas_dev_catalog
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:38.752774'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    2024-11-15T13:35:40.155+0000    writing mas_dev_catalog.inventory to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_catalog/inventory.bson
    2024-11-15T13:35:40.157+0000    done dumping mas_dev_catalog.inventory (31 documents)
  stdout_lines: <omitted>
changed: [localhost] => (item={'name': 'mas_dev_core'}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' mongodump --host=mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017 --username=sysadmin --password=5DT5zPt6W7U9JFAz --authenticationDatabase=admin --ssl --sslCAFile=/var/lib/tls/ca/415d4d5786496efd5582d023bc57e61c6c0a95f3cb087e3e74e4adc1e75a934b.pem --out=/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump --db=mas_dev_core |& tee -a /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log '
  delta: '0:00:01.039386'
  end: '2024-11-15 13:35:41.108901'
  item:
    name: mas_dev_core
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:40.069515'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    2024-11-15T13:35:41.238+0000    writing mas_dev_core.bindings to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/bindings.bson
    2024-11-15T13:35:41.239+0000    writing mas_dev_core.OauthClient to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/OauthClient.bson
    2024-11-15T13:35:41.241+0000    writing mas_dev_core.workspaces to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/workspaces.bson
    2024-11-15T13:35:41.244+0000    done dumping mas_dev_core.bindings (3 documents)
    2024-11-15T13:35:41.245+0000    writing mas_dev_core.graphiteconfigtool.files to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/graphiteconfigtool.files.bson
    2024-11-15T13:35:41.245+0000    done dumping mas_dev_core.OauthClient (3 documents)
    2024-11-15T13:35:41.247+0000    done dumping mas_dev_core.workspaces (1 document)
    2024-11-15T13:35:41.248+0000    writing mas_dev_core.PendingSelfRegUser to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/PendingSelfRegUser.bson
    2024-11-15T13:35:41.248+0000    done dumping mas_dev_core.graphiteconfigtool.files (1 document)
    2024-11-15T13:35:41.248+0000    writing mas_dev_core.CoreApikeys to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/CoreApikeys.bson
    2024-11-15T13:35:41.249+0000    writing mas_dev_core.OauthToken to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/OauthToken.bson
    2024-11-15T13:35:41.249+0000    done dumping mas_dev_core.PendingSelfRegUser (0 documents)
    2024-11-15T13:35:41.249+0000    done dumping mas_dev_core.CoreApikeys (0 documents)
    2024-11-15T13:35:41.249+0000    writing mas_dev_core.graphiteconfigtool.locks to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/graphiteconfigtool.locks.bson
    2024-11-15T13:35:41.250+0000    done dumping mas_dev_core.OauthToken (0 documents)
    2024-11-15T13:35:41.251+0000    writing mas_dev_core.graphiteconfigtool.chunks to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/graphiteconfigtool.chunks.bson
    2024-11-15T13:35:41.251+0000    writing mas_dev_core.User to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/User.bson
    2024-11-15T13:35:41.251+0000    done dumping mas_dev_core.User (0 documents)
    2024-11-15T13:35:41.252+0000    done dumping mas_dev_core.graphiteconfigtool.locks (0 documents)
    2024-11-15T13:35:41.323+0000    done dumping mas_dev_core.graphiteconfigtool.chunks (24 documents)
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: mongodump output] ************************
ok: [localhost] => 
  msg:
  - - "2024-11-15T13:35:38.815+0000\twriting mas_dev_adoptionusage.historical_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/historical_usage.bson"
    - "2024-11-15T13:35:38.815+0000\twriting mas_dev_adoptionusage.monthly_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/monthly_usage.bson"
    - "2024-11-15T13:35:38.819+0000\twriting mas_dev_adoptionusage.peak_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/peak_usage.bson"
    - "2024-11-15T13:35:38.821+0000\tdone dumping mas_dev_adoptionusage.historical_usage (1 document)"
    - "2024-11-15T13:35:38.821+0000\tdone dumping mas_dev_adoptionusage.monthly_usage (1 document)"
    - "2024-11-15T13:35:38.821+0000\tdone dumping mas_dev_adoptionusage.peak_usage (1 document)"
    - "2024-11-15T13:35:38.822+0000\twriting mas_dev_adoptionusage.daily_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/daily_usage.bson"
    - "2024-11-15T13:35:38.822+0000\twriting mas_dev_adoptionusage.api_metrics to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/api_metrics.bson"
    - "2024-11-15T13:35:38.822+0000\twriting mas_dev_adoptionusage.users_hourly to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/users_hourly.bson"
    - "2024-11-15T13:35:38.822+0000\twriting mas_dev_adoptionusage.hourly_usage to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/hourly_usage.bson"
    - "2024-11-15T13:35:38.823+0000\tdone dumping mas_dev_adoptionusage.api_metrics (0 documents)"
    - "2024-11-15T13:35:38.823+0000\tdone dumping mas_dev_adoptionusage.users_hourly (0 documents)"
    - "2024-11-15T13:35:38.825+0000\tdone dumping mas_dev_adoptionusage.hourly_usage (0 documents)"
    - "2024-11-15T13:35:38.825+0000\twriting mas_dev_adoptionusage.users to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage/users.bson"
    - "2024-11-15T13:35:38.826+0000\tdone dumping mas_dev_adoptionusage.users (0 documents)"
    - "2024-11-15T13:35:38.828+0000\tdone dumping mas_dev_adoptionusage.daily_usage (3 documents)"
  - - "2024-11-15T13:35:40.155+0000\twriting mas_dev_catalog.inventory to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_catalog/inventory.bson"
    - "2024-11-15T13:35:40.157+0000\tdone dumping mas_dev_catalog.inventory (31 documents)"
  - - "2024-11-15T13:35:41.238+0000\twriting mas_dev_core.bindings to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/bindings.bson"
    - "2024-11-15T13:35:41.239+0000\twriting mas_dev_core.OauthClient to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/OauthClient.bson"
    - "2024-11-15T13:35:41.241+0000\twriting mas_dev_core.workspaces to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/workspaces.bson"
    - "2024-11-15T13:35:41.244+0000\tdone dumping mas_dev_core.bindings (3 documents)"
    - "2024-11-15T13:35:41.245+0000\twriting mas_dev_core.graphiteconfigtool.files to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/graphiteconfigtool.files.bson"
    - "2024-11-15T13:35:41.245+0000\tdone dumping mas_dev_core.OauthClient (3 documents)"
    - "2024-11-15T13:35:41.247+0000\tdone dumping mas_dev_core.workspaces (1 document)"
    - "2024-11-15T13:35:41.248+0000\twriting mas_dev_core.PendingSelfRegUser to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/PendingSelfRegUser.bson"
    - "2024-11-15T13:35:41.248+0000\tdone dumping mas_dev_core.graphiteconfigtool.files (1 document)"
    - "2024-11-15T13:35:41.248+0000\twriting mas_dev_core.CoreApikeys to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/CoreApikeys.bson"
    - "2024-11-15T13:35:41.249+0000\twriting mas_dev_core.OauthToken to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/OauthToken.bson"
    - "2024-11-15T13:35:41.249+0000\tdone dumping mas_dev_core.PendingSelfRegUser (0 documents)"
    - "2024-11-15T13:35:41.249+0000\tdone dumping mas_dev_core.CoreApikeys (0 documents)"
    - "2024-11-15T13:35:41.249+0000\twriting mas_dev_core.graphiteconfigtool.locks to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/graphiteconfigtool.locks.bson"
    - "2024-11-15T13:35:41.250+0000\tdone dumping mas_dev_core.OauthToken (0 documents)"
    - "2024-11-15T13:35:41.251+0000\twriting mas_dev_core.graphiteconfigtool.chunks to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/graphiteconfigtool.chunks.bson"
    - "2024-11-15T13:35:41.251+0000\twriting mas_dev_core.User to /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core/User.bson"
    - "2024-11-15T13:35:41.251+0000\tdone dumping mas_dev_core.User (0 documents)"
    - "2024-11-15T13:35:41.252+0000\tdone dumping mas_dev_core.graphiteconfigtool.locks (0 documents)"
    - "2024-11-15T13:35:41.323+0000\tdone dumping mas_dev_core.graphiteconfigtool.chunks (24 documents)"

TASK [ibm.mas_devops.mongodb : Get query file from specified backup job] *******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get query file content] *************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: query file content] **********************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Get the timestamp of current backup] ************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: timestamp of current backup] **********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Take an incremental backup of mongodb databases] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: mongodump output] ************************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Create tar.gz archives of database backup files] ***
changed: [localhost] => changed=true 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' tar -czf /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503.tar.gz -C /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump . && du -h /tmp/masbr/mongodb-dev-full-20241115133503/database/* '
  delta: '0:00:01.002597'
  end: '2024-11-15 13:35:42.595277'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:41.592680'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    8.0K    /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log
    6.0M    /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503.tar.gz
    24K     /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_catalog
    52K     /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage
    6.1M    /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core
    6.1M    /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: size of backup files] ********************
ok: [localhost] => 
  msg:
  - "8.0K\t/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup.log"
  - "6.0M\t/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503.tar.gz"
  - "24K\t/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_catalog"
  - "52K\t/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_adoptionusage"
  - "6.1M\t/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump/mas_dev_core"
  - "6.1M\t/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodump"

TASK [ibm.mas_devops.mongodb : Copy backup files from pod to specified storage location] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Download backup files from pod to local] ********
changed: [localhost] => changed=true 
  cmd: |-
    oc cp --retries=50 -c mongod mongoce/mas-mongo-ce-0:/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503.tar.gz /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503.tar.gz
  delta: '0:00:02.867004'
  end: '2024-11-15 13:35:45.710270'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:42.843266'
  stderr: ''
  stderr_lines: <omitted>
  stdout: 'tar: Removing leading `/'' from member names'
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Copy backup files from local to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local storage job folder] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local storage job folder] ****************
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'database/mongodb-dev-full-20241115133503.tar.gz', 'dest_folder': 'database'}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/mongodb-dev-full-20241115133503/database && cp -rf /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503.tar.gz /tmp/backup/backups/mongodb-dev-full-20241115133503/database && ls -lA /tmp/backup/backups/mongodb-dev-full-20241115133503/database
  delta: '0:00:00.006824'
  end: '2024-11-15 13:35:45.966392'
  item:
    dest_folder: database
    src_file: database/mongodb-dev-full-20241115133503.tar.gz
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:45.959568'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 6092
    -rw-r--r-- 1 david david 6235666 Nov 15 13:35 mongodb-dev-full-20241115133503.tar.gz
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 6092
    - -rw-r--r-- 1 david david 6235666 Nov 15 13:35 mongodb-dev-full-20241115133503.tar.gz

TASK [ibm.mas_devops.mongodb : Set fact: cloud storage job folder] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: cloud storage job folder] ****************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'database/mongodb-dev-full-20241115133503.tar.gz', 'dest_folder': 'database'})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: database
    src_file: database/mongodb-dev-full-20241115133503.tar.gz
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Create query file used by the subsequent incremental backups] ***
changed: [localhost] => changed=true 
  checksum: 8ba394edf2a587d1f037cf46670916888a269a6a
  dest: /tmp/masbr/mongodb-dev-full-20241115133503/database/query.json
  gid: 1000
  group: david
  md5sum: efc787cd01df3882d0123527f2ba600b
  mode: '0600'
  owner: david
  size: 116
  src: /home/david/.ansible/tmp/ansible-tmp-1731677746.24225-19127-10650425388265/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.mongodb : Get query file content] *************************
ok: [localhost] => changed=false 
  cmd: |-
    cat /tmp/masbr/mongodb-dev-full-20241115133503/database/query.json
  delta: '0:00:00.003565'
  end: '2024-11-15 13:35:46.743609'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:46.740044'
  stderr: ''
  stderr_lines: <omitted>
  stdout: '{"ts": {"$gt": {"$timestamp": {"t": 1731677736, "i": 1}}}, "ns": {"$regex": "mas_dev_(core|catalog|adoptionusage)"}}'
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: query file content] **********************
ok: [localhost] => 
  msg:
    ns:
      $regex: mas_dev_(core|catalog|adoptionusage)
    ts:
      $gt:
        $timestamp:
          i: 1
          t: 1731677736

TASK [ibm.mas_devops.mongodb : Copy query file to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local storage job folder] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local storage job folder] ****************
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'database/query.json', 'dest_folder': 'database'}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/mongodb-dev-full-20241115133503/database && cp -rf /tmp/masbr/mongodb-dev-full-20241115133503/database/query.json /tmp/backup/backups/mongodb-dev-full-20241115133503/database && ls -lA /tmp/backup/backups/mongodb-dev-full-20241115133503/database
  delta: '0:00:00.003998'
  end: '2024-11-15 13:35:47.181796'
  item:
    dest_folder: database
    src_file: database/query.json
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:47.177798'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 6096
    -rw-r--r-- 1 david david 6235666 Nov 15 13:35 mongodb-dev-full-20241115133503.tar.gz
    -rw------- 1 david david     116 Nov 15 13:35 query.json
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 6096
    - -rw-r--r-- 1 david david 6235666 Nov 15 13:35 mongodb-dev-full-20241115133503.tar.gz
    - -rw------- 1 david david     116 Nov 15 13:35 query.json

TASK [ibm.mas_devops.mongodb : Set fact: cloud storage job folder] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: cloud storage job folder] ****************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'database/query.json', 'dest_folder': 'database'})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: database
    src_file: database/query.json
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Update database backup status: Completed] *******
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/update_job_status.yml for localhost

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_component] ***************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_data_list] ***************
changed: [localhost] => (item={'seq': '1', 'phase': 'Completed'}) => changed=true 
  ansible_loop_var: item
  item:
    phase: Completed
    seq: '1'
  masbr_job_data_list:
  - phase: Completed
    seq: '1'
    type: database

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_data_list] ******************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: Completed
      seq: '1'
      type: database

TASK [ibm.mas_devops.mongodb : Get specified masbr_job_status.phase] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Get unique phases of all job data types] ********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_phases:
    - Completed

TASK [ibm.mas_devops.mongodb : Debug: unique phases of all job data types] *****
ok: [localhost] => 
  msg: Job data phases ................... ['Completed']

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('New')] *******
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('Completed')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    _job_status_:
      phase: Completed

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status_phase ('Failed')] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('New')] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.phase ('Completed', 'Failed', 'PartiallyFailed')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_status:
      completionTimestamp: '2024-11-15T13:35:48'
      phase: Completed
      startTimestamp: '2024-11-15T13:35:23'

TASK [ibm.mas_devops.mongodb : Send notification] ******************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/send_notification.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: Slack message] ************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Send Slack message] *****************************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: append to masbr_job_status.sentNotifications (Slack)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Update fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Set fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: update job variables] ********************
ok: [localhost] => 
  msg:
  - 'masbr_job_component .................... {''name'': ''mongodb'', ''instance'': ''dev'', ''app'': ''core'', ''namespace'': ''mongoce'', ''provider'': ''community'', ''version'': ''7.0.12''}'
  - 'masbr_job_data_list .................... [{''seq'': ''1'', ''type'': ''database'', ''phase'': ''Completed''}]'
  - 'masbr_job_status ....................... {''phase'': ''Completed'', ''startTimestamp'': ''2024-11-15T13:35:23'', ''completionTimestamp'': ''2024-11-15T13:35:48''}'

TASK [ibm.mas_devops.mongodb : Create updated job file] ************************
changed: [localhost] => changed=true 
  checksum: 47953967a15b9d7226322e7cec29c06e3cd0793e
  dest: /tmp/masbr/mongodb-dev-full-20241115133503/backup.yml
  gid: 1000
  group: david
  md5sum: e4dfaa717f062a5af2224c4a648f7917
  mode: '0644'
  owner: david
  size: 545
  src: /home/david/.ansible/tmp/ansible-tmp-1731677748.518749-19285-29893741985534/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.mongodb : Copy local job files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local storage job folder] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local storage job folder] ****************
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/mongodb-dev-full-20241115133503/ && cp -rf /tmp/masbr/mongodb-dev-full-20241115133503/backup.yml /tmp/backup/backups/mongodb-dev-full-20241115133503/ && ls -lA /tmp/backup/backups/mongodb-dev-full-20241115133503/
  delta: '0:00:00.005258'
  end: '2024-11-15 13:35:49.250145'
  item:
    dest_folder: ''
    src_file: backup.yml
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:49.244887'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 8
    -rw-r--r-- 1 david david  545 Nov 15 13:35 backup.yml
    drwxr-xr-x 2 david david 4096 Nov 15 13:35 database
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 8
    - -rw-r--r-- 1 david david  545 Nov 15 13:35 backup.yml
    - drwxr-xr-x 2 david david 4096 Nov 15 13:35 database

TASK [ibm.mas_devops.mongodb : Set fact: cloud storage job folder] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: cloud storage job folder] ****************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: ''
    src_file: backup.yml
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Append job final status to the job folder name] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Create a tar.gz archive of mongodb backup log] ***
changed: [localhost] => changed=true 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' tar -czf /tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup-log.tar.gz -C /tmp/masbr/mongodb-dev-full-20241115133503/database mongodb-dev-full-20241115133503-backup.log '
  delta: '0:00:00.679804'
  end: '2024-11-15 13:35:50.534230'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:49.854426'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Copy mongodb backup log file from pod to specified storage location] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Download backup log file from pod to local] *****
changed: [localhost] => changed=true 
  cmd: |-
    oc cp --retries=50 -c mongod mongoce/mas-mongo-ce-0:/tmp/masbr/mongodb-dev-full-20241115133503/database/mongodb-dev-full-20241115133503-backup-log.tar.gz /tmp/masbr/mongodb-dev-full-20241115133503/log/mongodb-dev-full-20241115133503-backup-log.tar.gz
  delta: '0:00:00.726861'
  end: '2024-11-15 13:35:51.516520'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:50.789659'
  stderr: ''
  stderr_lines: <omitted>
  stdout: 'tar: Removing leading `/'' from member names'
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Copy backup log file from local to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.mongodb : Set fact: local storage job folder] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Debug: local storage job folder] ****************
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [ibm.mas_devops.mongodb : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'log/mongodb-dev-full-20241115133503-backup-log.tar.gz', 'dest_folder': 'log'}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/mongodb-dev-full-20241115133503/log && cp -rf /tmp/masbr/mongodb-dev-full-20241115133503/log/mongodb-dev-full-20241115133503-backup-log.tar.gz /tmp/backup/backups/mongodb-dev-full-20241115133503/log && ls -lA /tmp/backup/backups/mongodb-dev-full-20241115133503/log
  delta: '0:00:00.004629'
  end: '2024-11-15 13:35:52.082947'
  item:
    dest_folder: log
    src_file: log/mongodb-dev-full-20241115133503-backup-log.tar.gz
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:52.078318'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 4
    -rw-r--r-- 1 david david 862 Nov 15 13:35 mongodb-dev-full-20241115133503-backup-log.tar.gz
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 4
    - -rw-r--r-- 1 david david 862 Nov 15 13:35 mongodb-dev-full-20241115133503-backup-log.tar.gz

TASK [ibm.mas_devops.mongodb : Set fact: cloud storage job folder] *************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: cloud storage job folder] ****************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'log/mongodb-dev-full-20241115133503-backup-log.tar.gz', 'dest_folder': 'log'})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: log
    src_file: log/mongodb-dev-full-20241115133503-backup-log.tar.gz
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : After run tasks] ********************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/after_run_tasks.yml for localhost

TASK [ibm.mas_devops.mongodb : After backup mongodb] ***************************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/mongodb/tasks/providers/community/after-backup-restore.yml for localhost

TASK [ibm.mas_devops.mongodb : Delete temporary folders] ***********************
changed: [localhost] => changed=true 
  cmd: |-
    oc exec mas-mongo-ce-0 -c mongod -n mongoce -- bash -c ' rm -f /tmp/masbr/running.lock; rm -rf /tmp/masbr/mongodb-dev-full-20241115133503; rm -rf /data/mongodb-dev-full-20241115133503 '
  delta: '0:00:00.635310'
  end: '2024-11-15 13:35:53.328963'
  msg: ''
  rc: 0
  start: '2024-11-15 13:35:52.693653'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [ibm.mas_devops.mongodb : Set fact: Ansible log path] *********************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_ansible_log_name: mongodb-dev-full-20241115133503-ansible
    masbr_ansible_log_path: ''

TASK [ibm.mas_devops.mongodb : Debug: Ansbile log path] ************************
skipping: [localhost] => 

TASK [ibm.mas_devops.mongodb : Create a tar.gz archive of Ansible log file] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Copy Ansible log file from local to storage location] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.mongodb : Delete local job folder] ************************
changed: [localhost] => changed=true 
  path: /tmp/masbr/mongodb-dev-full-20241115133503
  state: absent

TASK [ibm.mas_devops.mongodb : Summary] ****************************************
ok: [localhost] => 
  msg:
  - Job name ........................... mongodb-dev-full-20241115133503
  - Job status ......................... Completed
  - Job storage location ............... /tmp/backup/backups/mongodb-dev-full-20241115133503

TASK [MAS Core namespace: backup] **********************************************

TASK [ibm.mas_devops.suite_backup_restore : Fail if mas_instance_id is not provided] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_action is not provided] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Set fact: mas core namespace name] ***
ok: [localhost] => changed=false 
  ansible_facts:
    mas_core_namespace: mas-dev-core

TASK [ibm.mas_devops.suite_backup_restore : Set fact: common job variables] ****
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_component:
      instance: dev
      name: core
      namespace: mas-dev-core

TASK [ibm.mas_devops.suite_backup_restore : Load mas core variables] ***********
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/suite_backup_restore/tasks/backup-vars.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: default backup job data list] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - seq: '1'
      type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: namespace backup resources] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_ns_backup_resources:
    - namespace: mas-dev-core
      resources:
      - kind: Subscription
        name: ibm-mas-operator
      - kind: OperatorGroup
        name: ibm-mas-operator-group
      - kind: Secret
        name: ibm-entitlement
      - kind: Secret
        name: dev-credentials-superuser
      - kind: MVIEdge
      - kind: ReplicaDB
      - kind: BasCfg
      - kind: IDPCfg
      - kind: JdbcCfg
      - kind: KafkaCfg
      - kind: MongoCfg
      - kind: ObjectStorageCfg
      - kind: PushNotificationCfg
      - kind: ScimCfg
      - kind: SlsCfg
      - kind: SmtpCfg
      - kind: WatsonStudioCfg
      - kind: Suite
      - kind: Workspace
      - kind: CoreIDP

TASK [ibm.mas_devops.suite_backup_restore : Before run tasks] ******************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/before_run_tasks.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Check common variables] ************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/check_common_vars.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Load common variables] *************
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_allow_multi_jobs: '{{ lookup(''env'', ''MASBR_ALLOW_MULTI_JOBS'') | default(true, true) | bool }}'
    masbr_cleanup_schedule: '{{ lookup(''env'', ''MASBR_CLEANUP_SCHEDULE'') | default(''0 1 * * *'', true) }}'
    masbr_cleanup_ttl_sec: '{{ lookup(''env'', ''MASBR_CLEANUP_TTL_SEC'') | default(''604800'', true) }}'
    masbr_confirm_cluster: '{{ lookup(''env'', ''MASBR_CONFIRM_CLUSTER'') | default(false, true) | bool }}'
    masbr_copy_timeout_sec: '{{ lookup(''env'', ''MASBR_COPY_TIMEOUT_SEC'') | default(43200, true) | int }}'
    masbr_job_timezone: '{{ lookup(''env'', ''MASBR_JOB_TIMEZONE'') | default('''', true) }}'
    masbr_local_temp_folder: '{{ lookup(''env'', ''MASBR_LOCAL_TEMP_FOLDER'') | default(''/tmp/masbr'', true) }}'
    masbr_mascli_image_pull_policy: '{{ lookup(''env'', ''MASBR_MASCLI_IMAGE_PULL_POLICY'') | default('''', true) }}'
    masbr_mascli_image_tag: '{{ lookup(''env'', ''MASBR_MASCLI_IMAGE_TAG'') | default(''latest'', true) }}'
    masbr_notification_levels:
      failure:
      - Failed
      - PartiallyFailed
      info:
      - Completed
      - Failed
      - PartiallyFailed
      verbose:
      - InProgress
      - Completed
      - Failed
      - PartiallyFailed
    masbr_slack_channel: '{{ lookup(''env'', ''MASBR_SLACK_CHANNEL'') }}'
    masbr_slack_enabled: '{{ lookup(''env'', ''MASBR_SLACK_ENABLED'') | default(false, true) | bool }}'
    masbr_slack_level: '{{ lookup(''env'', ''MASBR_SLACK_LEVEL'') | default(''info'', true) }}'
    masbr_slack_token: '{{ lookup(''env'', ''MASBR_SLACK_TOKEN'') }}'
    masbr_slack_user: '{{ lookup(''env'', ''MASBR_SLACK_USER'') | default(''MASBR'', true) }}'
    masbr_storage_cloud_bucket: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_BUCKET'') }}'
    masbr_storage_cloud_rclone_file: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_RCLONE_FILE'') }}'
    masbr_storage_cloud_rclone_name: '{{ lookup(''env'', ''MASBR_STORAGE_CLOUD_RCLONE_NAME'') }}'
    masbr_storage_local_folder: '{{ lookup(''env'', ''MASBR_STORAGE_LOCAL_FOLDER'') }}'
    masbr_storage_pvc_name: '{{ lookup(''env'', ''MASBR_STORAGE_PVC_NAME'') }}'
    masbr_storage_pvc_path: '{{ lookup(''env'', ''MASBR_STORAGE_PVC_PATH'') | default(''masbr'', true) }}'
    masbr_storage_type: '{{ lookup(''env'', ''MASBR_STORAGE_TYPE'') }}'
  ansible_included_var_files:
  - /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_vars/backup_restore.yml

TASK [ibm.mas_devops.suite_backup_restore : Set fact: internal used common variables] ***
ok: [localhost] => changed=false 
  ansible_facts:
    __masbr_dev_create_env_file: false
    masbr_pod_temp_folder: /tmp/masbr
    masbr_running_in_task_job: false
    masbr_timestamp_format: '%Y%m%d%H%M%S'

TASK [ibm.mas_devops.suite_backup_restore : Set fact: job lock file] ***********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_pod_lock_file: /tmp/masbr/running.lock

TASK [ibm.mas_devops.suite_backup_restore : Get job version from env] **********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: default values of storage location variables] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_use_cloud_storage: false
    masbr_use_local_storage: false
    masbr_use_pvc_storage: false

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_type is not provided] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_type is not supported] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_local_folder is not provided] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Set fact: use local backup storage] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_create_task_job: false
    masbr_use_local_storage: true

TASK [ibm.mas_devops.suite_backup_restore : Debug: variables for local backup storage] ***
ok: [localhost] => 
  msg:
  - Use local storage .................. True
  - Local storage folder ............... /tmp/backup
  - Run tasks in k8s Job ............... False

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_pvc_name is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_pvc_path is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: use pvc backup storage] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: variables for pvc backup storage] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_cloud_rclone_file is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_cloud_rclone_name is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_storage_cloud_bucket is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: use cloud backup storage] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: variables for cloud backup storage] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_slack_token is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_slack_channel is not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: variables for sending Slack notification] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Set fact: reset masbr_sent_notifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Confirm the currently connected cluster information] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/confirm_cluster_info.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Get cluster domain] ****************
ok: [localhost] => changed=false 
  api_found: true
  resources:
  - apiVersion: config.openshift.io/v1
    kind: DNS
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |-
          {"apiVersion":"config.openshift.io/v1","kind":"DNS","metadata":{"annotations":{},"creationTimestamp":null,"name":"cluster"},"spec":{"baseDomain":"backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud"},"status":{}}
      creationTimestamp: '2024-11-14T13:22:00Z'
      generation: 1
      managedFields:
      - apiVersion: config.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:spec:
            .: {}
            f:baseDomain: {}
        manager: kubectl-client-side-apply
        operation: Update
        time: '2024-11-14T13:22:00Z'
      name: cluster
      resourceVersion: '614'
      uid: 8eb417b4-1c71-4490-903e-dbaafc2210c6
    spec:
      baseDomain: backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [ibm.mas_devops.suite_backup_restore : Set fact: cluster domain] **********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_cluster_domain: backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [ibm.mas_devops.suite_backup_restore : Debug: cluster domain] *************
ok: [localhost] => 
  msg: Cluster domain ........................ backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud

TASK [ibm.mas_devops.suite_backup_restore : Get user input] ********************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Cancel task] ***********************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Check common backup variables] *****
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/check_backup_vars.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: backup environment variables] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_backup_data: ''
    masbr_backup_from_version: ''
    masbr_backup_schedule: ''
    masbr_backup_type: full

TASK [ibm.mas_devops.suite_backup_restore : Fail if masbr_job_component is not provided] ***
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Set fact: init masbr_job_data_list] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - seq: '1'
      type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: reset masbr_job_data_specified] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get specified backup data] *********
skipping: [localhost] => (item=)  => changed=false 
  ansible_index_var: idx
  ansible_loop_var: item
  idx: 0
  item: ''
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: override the default masbr_job_data_list] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: reset masbr_job_data_init] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_init: []

TASK [ibm.mas_devops.suite_backup_restore : Set fact: set default phase to each backup data] ***
ok: [localhost] => (item={'seq': '1', 'type': 'namespace'}) => changed=false 
  ansible_facts:
    masbr_job_data_init:
    - phase: New
      seq: '1'
      type: namespace
  ansible_loop_var: item
  item:
    seq: '1'
    type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: backup data with default phase] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: New
      seq: '1'
      type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: running task type (schedule)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: always create a new Job version for each Job of the CronJob] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: running task type (backup)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: backup job variables] ****
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_type: backup

TASK [ibm.mas_devops.suite_backup_restore : Set fact: job name include instance] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name_prefix: core-dev

TASK [ibm.mas_devops.suite_backup_restore : Set fact: job name without instance] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: backup job name] *********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name: core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Set fact: final backup job name] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_name_final: core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Create local job folder] ***********
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/create_local_job_folder.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: local job folder] ********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_local_job_folder: /tmp/masbr/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Debug: local job folder] ***********
ok: [localhost] => 
  msg: Local job folder ...................... /tmp/masbr/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Check if local job folder exists] ***
ok: [localhost] => changed=false 
  stat:
    atime: 1731677708.2481146
    attr_flags: e
    attributes:
    - extents
    block_size: 4096
    blocks: 8
    charset: binary
    ctime: 1731677708.2481146
    dev: 2080
    device_type: 0
    executable: true
    exists: true
    gid: 1000
    gr_name: david
    inode: 3947210
    isblk: false
    ischr: false
    isdir: true
    isfifo: false
    isgid: false
    islnk: false
    isreg: false
    issock: false
    isuid: false
    mimetype: inode/directory
    mode: '0755'
    mtime: 1731677708.2481146
    nlink: 2
    path: /tmp/masbr/core-dev-full-20241115133503
    pw_name: david
    readable: true
    rgrp: true
    roth: true
    rusr: true
    size: 4096
    uid: 1000
    version: '3551351316'
    wgrp: false
    woth: false
    writeable: true
    wusr: true
    xgrp: true
    xoth: true
    xusr: true

TASK [ibm.mas_devops.suite_backup_restore : Create local job folder if not exists] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get the latest Full backup job name when masbr_backup_from_version not provided] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get the Full backup job name by specified masbr_backup_from_version] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if not found any previous Full backup job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: backup from job name] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get backup from job information] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: backup from job information] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: backup from job information] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Fail if the backup from is not Completed] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if the component name of backup from job is not same as current job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: data list difference] ****
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Fail if the data list of backup from job does not cover current job] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: backup job information] *****
ok: [localhost] => 
  msg:
  - Backup job name ....................... core-dev-full-20241115133503
  - Backup type ........................... full
  - Backup from ........................... <undefined>
  - 'Backup component ...................... {''name'': ''core'', ''instance'': ''dev'', ''namespace'': ''mas-dev-core''}'
  - 'Backup data ........................... [{''seq'': ''1'', ''type'': ''namespace'', ''phase'': ''New''}]'

TASK [ibm.mas_devops.suite_backup_restore : Add lables to current Job] *********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Before backup core] ****************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/suite_backup_restore/tasks/get-suite-info.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Get Suite] *************************
ok: [localhost] => changed=false 
  api_found: true
  resources:
  - apiVersion: core.mas.ibm.com/v1
    kind: Suite
    metadata:
      annotations:
        mas.ibm.com/operationalMode: nonproduction
      creationTimestamp: '2024-11-15T10:46:35Z'
      finalizers:
      - core.mas.ibm.com/finalizer
      generation: 1
      labels:
        mas.ibm.com/instanceId: dev
      managedFields:
      - apiVersion: core.mas.ibm.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:mas.ibm.com/operationalMode: {}
            f:labels:
              .: {}
              f:mas.ibm.com/instanceId: {}
          f:spec:
            .: {}
            f:certManagerNamespace: {}
            f:domain: {}
            f:license:
              .: {}
              f:accept: {}
            f:podTemplates: {}
            f:settings:
              .: {}
              f:dataDictionary:
                .: {}
                f:catalog: {}
              f:icr:
                .: {}
                f:cp: {}
                f:cpopen: {}
              f:manualCertMgmt: {}
              f:userDataValidation:
                .: {}
                f:allowSpecialChars: {}
        manager: OpenAPI-Generator
        operation: Update
        time: '2024-11-15T10:46:35Z'
      - apiVersion: core.mas.ibm.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:finalizers:
              .: {}
              v:"core.mas.ibm.com/finalizer": {}
        manager: ansible-operator
        operation: Update
        time: '2024-11-15T10:46:48Z'
      - apiVersion: core.mas.ibm.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status: {}
        manager: ansible-operator
        operation: Update
        subresource: status
        time: '2024-11-15T11:05:02Z'
      - apiVersion: core.mas.ibm.com/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status:
            f:apis:
              .: {}
              f:internal:
                .: {}
                f:url: {}
            f:cert-manager:
              .: {}
              f:external:
                .: {}
                f:duration: {}
                f:name: {}
                f:renewBefore: {}
              f:internal:
                .: {}
                f:duration: {}
                f:name: {}
                f:renewBefore: {}
            f:conditions: {}
            f:domain: {}
            f:keys:
              .: {}
              f:jwt: {}
              f:ltpa: {}
            f:podTemplates: {}
            f:settings:
              .: {}
              f:certManager:
                .: {}
                f:certificates:
                  .: {}
                  f:privateKey:
                    .: {}
                    f:size: {}
              f:cors:
                .: {}
                f:allowedOrigins: {}
              f:customUserDataModel:
                .: {}
                f:emailTypes: {}
                f:phoneTypes: {}
              f:dataDictionary:
                .: {}
                f:catalog: {}
                f:channel: {}
                f:podTemplates: {}
                f:strategy: {}
              f:icr:
                .: {}
                f:cp: {}
                f:cpopen: {}
              f:images:
                .: {}
                f:pullPolicy: {}
                f:registry: {}
              f:locale:
                .: {}
                f:country: {}
                f:language: {}
              f:manualCertMgmt: {}
              f:rhm:
                .: {}
                f:secretName: {}
                f:secretResourceVersion: {}
              f:secrets:
                .: {}
                f:certificates:
                  .: {}
                  f:external: {}
                f:images:
                  .: {}
                  f:pullSecretName: {}
              f:sso:
                .: {}
                f:accessTokenTimeout: {}
                f:allowCustomCacheKey: {}
                f:allowDefaultSsoCookieName: {}
                f:customLoginPage: {}
                f:defaultIDP: {}
                f:disableLtpaCookie: {}
                f:idleTimeout: {}
                f:idpSessionTimeout: {}
                f:refreshTokenTimeout: {}
                f:seamlessLogin: {}
                f:ssoCookieName: {}
                f:useOnlyCustomCookieName: {}
              f:trustDefaultCAs: {}
              f:userDataObfuscation:
                .: {}
                f:obfuscateDataOnDeletion: {}
              f:userDataPrivacyAccess: {}
              f:userDataValidation:
                .: {}
                f:allowSpecialChars: {}
              f:walkme: {}
            f:versions:
              .: {}
              f:controller: {}
              f:generation: {}
              f:reconciled: {}
              f:supported: {}
        manager: OpenAPI-Generator
        operation: Update
        subresource: status
        time: '2024-11-15T11:05:06Z'
      name: dev
      namespace: mas-dev-core
      resourceVersion: '921767'
      uid: 61b9a8c6-c303-49fd-8fad-3447dd71cbd4
    spec:
      certManagerNamespace: cert-manager
      domain: dev.backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud
      license:
        accept: true
      podTemplates: []
      settings:
        dataDictionary:
          catalog: ibm-operator-catalog
        icr:
          cp: cp.icr.io/cp
          cpopen: icr.io/cpopen
        manualCertMgmt: false
        userDataValidation:
          allowSpecialChars: false
    status:
      apis:
        internal:
          url: https://internalapi.mas-dev-core.svc
      cert-manager:
        external:
          duration: 8760h0m0s
          name: mas-dev-core-public-issuer
          renewBefore: 720h0m0s
        internal:
          duration: 175200h0m0s
          name: mas-dev-core-internal-issuer
          renewBefore: 2160h0m0s
      conditions:
      - lastTransitionTime: '2024-11-15T10:46:58Z'
        message: Controller updated primary entity manager to supported version (9.0.5)
        reason: VersionUpdateCompleted
        status: 'True'
        type: ControllerHealth
      - lastTransitionTime: '2024-11-15T11:05:06Z'
        message: MAS is ready to use
        reason: Ready
        status: 'True'
        type: Ready
      - lastTransitionTime: '2024-11-15T11:00:52Z'
        message: MongoDB configuration was successfully verified
        reason: Ready
        status: 'True'
        type: SystemDatabaseReady
      - lastTransitionTime: '2024-11-15T10:54:11Z'
        message: CoreIDP truststore ready
        reason: Ready
        status: 'True'
        type: IDPReady
      - lastTransitionTime: '2024-11-15T11:05:05Z'
        message: BasCfg reconciliation is complete
        reason: Ready
        status: 'True'
        type: BASIntegrationReady
      - lastTransitionTime: '2024-11-15T10:57:06Z'
        message: MAS Licensing API endpoint check succeeded
        reason: Ready
        status: 'True'
        type: SLSIntegrationReady
      - lastTransitionTime: '2024-11-15T10:52:37Z'
        message: MAS Routes ready
        reason: Ready
        status: 'True'
        type: RoutesReady
      - lastTransitionTime: '2024-11-15T10:54:43Z'
        message: ''
        reason: ''
        status: 'False'
        type: Failure
      - ansibleResult:
          changed: 0
          completion: '2024-11-15T11:05:01.951676'
          failures: 0
          ok: 199
          skipped: 105
        lastTransitionTime: '2024-11-15T10:53:51Z'
        message: Awaiting next reconciliation
        reason: Successful
        status: 'True'
        type: Running
      - lastTransitionTime: '2024-11-15T11:05:02Z'
        message: Last reconciliation succeeded
        reason: Successful
        status: 'True'
        type: Successful
      domain: dev.backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud
      keys:
        jwt: dev-keys-jwt
        ltpa: dev-keys-ltpa
      podTemplates: []
      settings:
        certManager:
          certificates:
            privateKey:
              size: '2048'
        cors:
          allowedOrigins: []
        customUserDataModel:
          emailTypes:
          - id: work
            value: Work
          - id: home
            value: Home
          phoneTypes:
          - id: work
            value: Work
          - id: mobile
            value: Mobile
        dataDictionary:
          catalog: ibm-operator-catalog
          channel: 1.1.x
          podTemplates: []
          strategy: Automatic
        icr:
          cp: cp.icr.io/cp
          cpopen: icr.io/cpopen
        images:
          pullPolicy: IfNotPresent
          registry: cp.icr.io/cp
        locale:
          country: GB
          language: en
        manualCertMgmt: false
        rhm:
          secretName: ''
          secretResourceVersion: ''
        secrets:
          certificates:
            external:
            - dev-cert-public
          images:
            pullSecretName: ibm-entitlement
        sso:
          accessTokenTimeout: 30m
          allowCustomCacheKey: false
          allowDefaultSsoCookieName: false
          customLoginPage: https://auth.dev.backup-6f1620198115433da1cac8216c06779b-0000.eu-gb.containers.appdomain.cloud/login
          defaultIDP: local
          disableLtpaCookie: false
          idleTimeout: '1800'
          idpSessionTimeout: 12h
          refreshTokenTimeout: 12h
          seamlessLogin: false
          ssoCookieName: ltpatoken2_dev
          useOnlyCustomCookieName: true
        trustDefaultCAs: true
        userDataObfuscation:
          obfuscateDataOnDeletion: false
        userDataPrivacyAccess: NO_ACCESS
        userDataValidation:
          allowSpecialChars: false
        walkme: enabled
      versions:
        controller: 9.0.5
        generation: '1'
        reconciled: 9.0.5
        supported:
        - 8.11.1
        - 8.11.10
        - 8.11.11
        - 8.11.12
        - 8.11.13
        - 8.11.2
        - 8.11.3
        - 8.11.4
        - 8.11.5
        - 8.11.6
        - 8.11.7
        - 8.11.8
        - 8.11.9
        - 9.0.0
        - 9.0.1
        - 9.0.2
        - 9.0.3
        - 9.0.5

TASK [ibm.mas_devops.suite_backup_restore : Set fact: Suite version] ***********
ok: [localhost] => changed=false 
  ansible_facts:
    mas_core_version: 9.0.5

TASK [ibm.mas_devops.suite_backup_restore : Fail if Suite does not exists] *****
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Set fact: Suite status] ************
ok: [localhost] => changed=false 
  ansible_facts:
    mas_core_ready: true

TASK [ibm.mas_devops.suite_backup_restore : Fail if Suite is not ready] ********
ok: [localhost] => changed=false 
  msg: All assertions passed

TASK [ibm.mas_devops.suite_backup_restore : Debug: Suite information] **********
ok: [localhost] => 
  msg:
  - Suite version .......................... 9.0.5
  - Suite is ready ......................... True

TASK [ibm.mas_devops.suite_backup_restore : Set fact: already included these tasks] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_included_before_run_tasks: true

TASK [ibm.mas_devops.suite_backup_restore : Create k8s Job to run backup tasks] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update job status: New] ************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/update_job_status.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_component] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_data_list] ***
ok: [localhost] => (item={'seq': '1', 'phase': 'New'}) => changed=false 
  ansible_loop_var: item
  item:
    phase: New
    seq: '1'
  masbr_job_data_list:
  - phase: New
    seq: '1'
    type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_data_list] *****
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: New
      seq: '1'
      type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Get specified masbr_job_status.phase] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get unique phases of all job data types] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_phases:
    - New

TASK [ibm.mas_devops.suite_backup_restore : Debug: unique phases of all job data types] ***
ok: [localhost] => 
  msg: Job data phases ................... ['New']

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('New')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    _job_status_:
      phase: New

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('Completed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('Failed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('New')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_status:
      phase: New
      startTimestamp: '2024-11-15T13:36:01'

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('Completed', 'Failed', 'PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Send notification] *****************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/send_notification.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: Slack message] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Send Slack message] ****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: append to masbr_job_status.sentNotifications (Slack)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: update job variables] *******
ok: [localhost] => 
  msg:
  - 'masbr_job_component .................... {''name'': ''core'', ''instance'': ''dev'', ''namespace'': ''mas-dev-core''}'
  - 'masbr_job_data_list .................... [{''seq'': ''1'', ''type'': ''namespace'', ''phase'': ''New''}]'
  - 'masbr_job_status ....................... {''phase'': ''New'', ''startTimestamp'': ''2024-11-15T13:36:01''}'

TASK [ibm.mas_devops.suite_backup_restore : Create updated job file] ***********
changed: [localhost] => changed=true 
  checksum: ae33e940aaaebfd2649c2328921ee6104eba1551
  dest: /tmp/masbr/core-dev-full-20241115133503/backup.yml
  gid: 1000
  group: david
  md5sum: f05623c365c93c408922c65242f6951a
  mode: '0644'
  owner: david
  size: 461
  src: /home/david/.ansible/tmp/ansible-tmp-1731677761.9858556-19895-211409889665261/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: local storage job folder] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Debug: local storage job folder] ***
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/core-dev-full-20241115133503/ && cp -rf /tmp/masbr/core-dev-full-20241115133503/backup.yml /tmp/backup/backups/core-dev-full-20241115133503/ && ls -lA /tmp/backup/backups/core-dev-full-20241115133503/
  delta: '0:00:00.006155'
  end: '2024-11-15 13:36:02.615280'
  item:
    dest_folder: ''
    src_file: backup.yml
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:02.609125'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 4
    -rw-r--r-- 1 david david 461 Nov 15 13:36 backup.yml
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 4
    - -rw-r--r-- 1 david david 461 Nov 15 13:36 backup.yml

TASK [ibm.mas_devops.suite_backup_restore : Set fact: cloud storage job folder] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: ''
    src_file: backup.yml
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Append job final status to the job folder name] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Run backup tasks for each data type] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/roles/suite_backup_restore/tasks/backup-namespace.yml for localhost => (item={'seq': '1', 'type': 'namespace', 'phase': 'New'})

TASK [ibm.mas_devops.suite_backup_restore : Update namespace resource backup status: InProgress] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/update_job_status.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_component] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_data_list] ***
changed: [localhost] => (item={'seq': '1', 'phase': 'InProgress'}) => changed=true 
  ansible_loop_var: item
  item:
    phase: InProgress
    seq: '1'
  masbr_job_data_list:
  - phase: InProgress
    seq: '1'
    type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_data_list] *****
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: InProgress
      seq: '1'
      type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Get specified masbr_job_status.phase] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get unique phases of all job data types] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_phases:
    - InProgress

TASK [ibm.mas_devops.suite_backup_restore : Debug: unique phases of all job data types] ***
ok: [localhost] => 
  msg: Job data phases ................... ['InProgress']

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('New')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('InProgress')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    _job_status_:
      phase: InProgress

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('Completed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('Failed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('New')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('InProgress')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_status:
      phase: InProgress
      startTimestamp: '2024-11-15T13:36:01'

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('Completed', 'Failed', 'PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Send notification] *****************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/send_notification.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: Slack message] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Send Slack message] ****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: append to masbr_job_status.sentNotifications (Slack)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: update job variables] *******
ok: [localhost] => 
  msg:
  - 'masbr_job_component .................... {''name'': ''core'', ''instance'': ''dev'', ''namespace'': ''mas-dev-core''}'
  - 'masbr_job_data_list .................... [{''seq'': ''1'', ''type'': ''namespace'', ''phase'': ''InProgress''}]'
  - 'masbr_job_status ....................... {''phase'': ''InProgress'', ''startTimestamp'': ''2024-11-15T13:36:01''}'

TASK [ibm.mas_devops.suite_backup_restore : Create updated job file] ***********
changed: [localhost] => changed=true 
  checksum: eb696b93af2f453d4f96dcc58180695cda0b9ee6
  dest: /tmp/masbr/core-dev-full-20241115133503/backup.yml
  gid: 1000
  group: david
  md5sum: 915a33cc989513bb0ca5c0997c9e4bc1
  mode: '0644'
  owner: david
  size: 475
  src: /home/david/.ansible/tmp/ansible-tmp-1731677764.1799521-20027-171238198382308/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: local storage job folder] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Debug: local storage job folder] ***
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/core-dev-full-20241115133503/ && cp -rf /tmp/masbr/core-dev-full-20241115133503/backup.yml /tmp/backup/backups/core-dev-full-20241115133503/ && ls -lA /tmp/backup/backups/core-dev-full-20241115133503/
  delta: '0:00:00.003794'
  end: '2024-11-15 13:36:04.852074'
  item:
    dest_folder: ''
    src_file: backup.yml
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:04.848280'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 4
    -rw-r--r-- 1 david david 475 Nov 15 13:36 backup.yml
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 4
    - -rw-r--r-- 1 david david 475 Nov 15 13:36 backup.yml

TASK [ibm.mas_devops.suite_backup_restore : Set fact: cloud storage job folder] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: ''
    src_file: backup.yml
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Append job final status to the job folder name] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: namespace resource backup folder] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_ns_backup_folder: /tmp/masbr/core-dev-full-20241115133503/namespace
    masbr_ns_backup_name: core-dev-full-20241115133503-namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: namespace resource backup log] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_ns_backup_log: /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace.log

TASK [ibm.mas_devops.suite_backup_restore : Create local backup folder for saving namespace resoruces] ***
changed: [localhost] => changed=true 
  cmd: |-
    mkdir -p /tmp/masbr/core-dev-full-20241115133503/namespace && touch /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace.log
  delta: '0:00:00.003092'
  end: '2024-11-15 13:36:05.319139'
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:05.316047'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Create backup namespace resource script] ***
changed: [localhost] => changed=true 
  checksum: 851be23bbcaab22f120754858e6898ff6a1f239d
  dest: /tmp/masbr/core-dev-full-20241115133503/backup-namespace-resources.sh
  gid: 1000
  group: david
  md5sum: e254b9566f6fe2bca8c7ea25b913ddce
  mode: '0777'
  owner: david
  size: 3613
  src: /home/david/.ansible/tmp/ansible-tmp-1731677765.378949-20148-213254972188074/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.suite_backup_restore : Run backup namespace resource script] ***
changed: [localhost] => changed=true 
  cmd: |-
    /tmp/masbr/core-dev-full-20241115133503/backup-namespace-resources.sh
  delta: '0:00:11.238906'
  end: '2024-11-15 13:36:17.113460'
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:05.874554'
  stderr: |-
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
    No resources found in mas-dev-core namespace.
  stderr_lines: <omitted>
  stdout: |-
    Backing up Subscription/ibm-mas-operator in the mas-dev-core namespace...
    Saved Subscription/ibm-mas-operator to /tmp/masbr/core-dev-full-20241115133503/namespace/Subscription-ibm-mas-operator.yaml
    Backing up OperatorGroup/ibm-mas-operator-group in the mas-dev-core namespace...
    Saved OperatorGroup/ibm-mas-operator-group to /tmp/masbr/core-dev-full-20241115133503/namespace/OperatorGroup-ibm-mas-operator-group.yaml
    Backing up Secret/ibm-entitlement in the mas-dev-core namespace...
    Saved Secret/ibm-entitlement to /tmp/masbr/core-dev-full-20241115133503/namespace/Secret-ibm-entitlement.yaml
    Backing up Secret/dev-credentials-superuser in the mas-dev-core namespace...
    Saved Secret/dev-credentials-superuser to /tmp/masbr/core-dev-full-20241115133503/namespace/Secret-dev-credentials-superuser.yaml
    Backing up all MVIEdge resources in the mas-dev-core namespace...
    Backing up all ReplicaDB resources in the mas-dev-core namespace...
    Backing up all BasCfg resources in the mas-dev-core namespace...
    Backing up BasCfg/dev-bas-system in the mas-dev-core namespace...
    The credentials "dro-apikey" will be backed up for the resource dev-bas-system
    Backing up Secret/"dro-apikey" in the mas-dev-core namespace...
    Not found Secret/"dro-apikey" in the mas-dev-core namespace!
    Saved BasCfg/dev-bas-system to /tmp/masbr/core-dev-full-20241115133503/namespace/BasCfg-dev-bas-system.yaml
    Backing up all IDPCfg resources in the mas-dev-core namespace...
    Backing up all JdbcCfg resources in the mas-dev-core namespace...
    Backing up all KafkaCfg resources in the mas-dev-core namespace...
    Backing up all MongoCfg resources in the mas-dev-core namespace...
    Backing up MongoCfg/dev-mongo-system in the mas-dev-core namespace...
    The credentials "mongodb-mongoce-admin" will be backed up for the resource dev-mongo-system
    Backing up Secret/"mongodb-mongoce-admin" in the mas-dev-core namespace...
    Not found Secret/"mongodb-mongoce-admin" in the mas-dev-core namespace!
    Saved MongoCfg/dev-mongo-system to /tmp/masbr/core-dev-full-20241115133503/namespace/MongoCfg-dev-mongo-system.yaml
    Backing up all ObjectStorageCfg resources in the mas-dev-core namespace...
    Backing up all PushNotificationCfg resources in the mas-dev-core namespace...
    Backing up all ScimCfg resources in the mas-dev-core namespace...
    Backing up all SlsCfg resources in the mas-dev-core namespace...
    Backing up SlsCfg/dev-sls-system in the mas-dev-core namespace...
    The credentials "sls-registration-key" will be backed up for the resource dev-sls-system
    Backing up Secret/"sls-registration-key" in the mas-dev-core namespace...
    Not found Secret/"sls-registration-key" in the mas-dev-core namespace!
    Saved SlsCfg/dev-sls-system to /tmp/masbr/core-dev-full-20241115133503/namespace/SlsCfg-dev-sls-system.yaml
    Backing up all SmtpCfg resources in the mas-dev-core namespace...
    Backing up SmtpCfg/dev-smtp-system in the mas-dev-core namespace...
    The credentials "smtp-demo-credentials" will be backed up for the resource dev-smtp-system
    Backing up Secret/"smtp-demo-credentials" in the mas-dev-core namespace...
    Not found Secret/"smtp-demo-credentials" in the mas-dev-core namespace!
    Saved SmtpCfg/dev-smtp-system to /tmp/masbr/core-dev-full-20241115133503/namespace/SmtpCfg-dev-smtp-system.yaml
    Backing up all WatsonStudioCfg resources in the mas-dev-core namespace...
    Backing up all Suite resources in the mas-dev-core namespace...
    Backing up Suite/dev in the mas-dev-core namespace...
    Saved Suite/dev to /tmp/masbr/core-dev-full-20241115133503/namespace/Suite-dev.yaml
    Backing up all Workspace resources in the mas-dev-core namespace...
    Backing up Workspace/dev-demo in the mas-dev-core namespace...
    Saved Workspace/dev-demo to /tmp/masbr/core-dev-full-20241115133503/namespace/Workspace-dev-demo.yaml
    Backing up all CoreIDP resources in the mas-dev-core namespace...
    Backing up CoreIDP/dev-coreidp in the mas-dev-core namespace...
    Saved CoreIDP/dev-coreidp to /tmp/masbr/core-dev-full-20241115133503/namespace/CoreIDP-dev-coreidp.yaml
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: run backup namespace resource script] ***
ok: [localhost] => 
  msg:
  - Backing up Subscription/ibm-mas-operator in the mas-dev-core namespace...
  - Saved Subscription/ibm-mas-operator to /tmp/masbr/core-dev-full-20241115133503/namespace/Subscription-ibm-mas-operator.yaml
  - Backing up OperatorGroup/ibm-mas-operator-group in the mas-dev-core namespace...
  - Saved OperatorGroup/ibm-mas-operator-group to /tmp/masbr/core-dev-full-20241115133503/namespace/OperatorGroup-ibm-mas-operator-group.yaml
  - Backing up Secret/ibm-entitlement in the mas-dev-core namespace...
  - Saved Secret/ibm-entitlement to /tmp/masbr/core-dev-full-20241115133503/namespace/Secret-ibm-entitlement.yaml
  - Backing up Secret/dev-credentials-superuser in the mas-dev-core namespace...
  - Saved Secret/dev-credentials-superuser to /tmp/masbr/core-dev-full-20241115133503/namespace/Secret-dev-credentials-superuser.yaml
  - Backing up all MVIEdge resources in the mas-dev-core namespace...
  - Backing up all ReplicaDB resources in the mas-dev-core namespace...
  - Backing up all BasCfg resources in the mas-dev-core namespace...
  - Backing up BasCfg/dev-bas-system in the mas-dev-core namespace...
  - The credentials "dro-apikey" will be backed up for the resource dev-bas-system
  - Backing up Secret/"dro-apikey" in the mas-dev-core namespace...
  - Not found Secret/"dro-apikey" in the mas-dev-core namespace!
  - Saved BasCfg/dev-bas-system to /tmp/masbr/core-dev-full-20241115133503/namespace/BasCfg-dev-bas-system.yaml
  - Backing up all IDPCfg resources in the mas-dev-core namespace...
  - Backing up all JdbcCfg resources in the mas-dev-core namespace...
  - Backing up all KafkaCfg resources in the mas-dev-core namespace...
  - Backing up all MongoCfg resources in the mas-dev-core namespace...
  - Backing up MongoCfg/dev-mongo-system in the mas-dev-core namespace...
  - The credentials "mongodb-mongoce-admin" will be backed up for the resource dev-mongo-system
  - Backing up Secret/"mongodb-mongoce-admin" in the mas-dev-core namespace...
  - Not found Secret/"mongodb-mongoce-admin" in the mas-dev-core namespace!
  - Saved MongoCfg/dev-mongo-system to /tmp/masbr/core-dev-full-20241115133503/namespace/MongoCfg-dev-mongo-system.yaml
  - Backing up all ObjectStorageCfg resources in the mas-dev-core namespace...
  - Backing up all PushNotificationCfg resources in the mas-dev-core namespace...
  - Backing up all ScimCfg resources in the mas-dev-core namespace...
  - Backing up all SlsCfg resources in the mas-dev-core namespace...
  - Backing up SlsCfg/dev-sls-system in the mas-dev-core namespace...
  - The credentials "sls-registration-key" will be backed up for the resource dev-sls-system
  - Backing up Secret/"sls-registration-key" in the mas-dev-core namespace...
  - Not found Secret/"sls-registration-key" in the mas-dev-core namespace!
  - Saved SlsCfg/dev-sls-system to /tmp/masbr/core-dev-full-20241115133503/namespace/SlsCfg-dev-sls-system.yaml
  - Backing up all SmtpCfg resources in the mas-dev-core namespace...
  - Backing up SmtpCfg/dev-smtp-system in the mas-dev-core namespace...
  - The credentials "smtp-demo-credentials" will be backed up for the resource dev-smtp-system
  - Backing up Secret/"smtp-demo-credentials" in the mas-dev-core namespace...
  - Not found Secret/"smtp-demo-credentials" in the mas-dev-core namespace!
  - Saved SmtpCfg/dev-smtp-system to /tmp/masbr/core-dev-full-20241115133503/namespace/SmtpCfg-dev-smtp-system.yaml
  - Backing up all WatsonStudioCfg resources in the mas-dev-core namespace...
  - Backing up all Suite resources in the mas-dev-core namespace...
  - Backing up Suite/dev in the mas-dev-core namespace...
  - Saved Suite/dev to /tmp/masbr/core-dev-full-20241115133503/namespace/Suite-dev.yaml
  - Backing up all Workspace resources in the mas-dev-core namespace...
  - Backing up Workspace/dev-demo in the mas-dev-core namespace...
  - Saved Workspace/dev-demo to /tmp/masbr/core-dev-full-20241115133503/namespace/Workspace-dev-demo.yaml
  - Backing up all CoreIDP resources in the mas-dev-core namespace...
  - Backing up CoreIDP/dev-coreidp in the mas-dev-core namespace...
  - Saved CoreIDP/dev-coreidp to /tmp/masbr/core-dev-full-20241115133503/namespace/CoreIDP-dev-coreidp.yaml

TASK [ibm.mas_devops.suite_backup_restore : Create tar.gz archives of namespace resource backup files] ***
changed: [localhost] => changed=true 
  cmd: |-
    tar -czf /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace.tar.gz -C /tmp/masbr/core-dev-full-20241115133503/namespace . && ls -lA /tmp/masbr/core-dev-full-20241115133503/namespace
  delta: '0:00:00.004903'
  end: '2024-11-15 13:36:17.353200'
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:17.348297'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 48
    -rw-r--r-- 1 david david 6758 Nov 15 13:36 BasCfg-dev-bas-system.yaml
    -rw-r--r-- 1 david david  977 Nov 15 13:36 CoreIDP-dev-coreidp.yaml
    -rw-r--r-- 1 david david 1760 Nov 15 13:36 MongoCfg-dev-mongo-system.yaml
    -rw-r--r-- 1 david david  869 Nov 15 13:36 OperatorGroup-ibm-mas-operator-group.yaml
    -rw-r--r-- 1 david david  259 Nov 15 13:36 Secret-dev-credentials-superuser.yaml
    -rw-r--r-- 1 david david 1010 Nov 15 13:36 Secret-ibm-entitlement.yaml
    -rw-r--r-- 1 david david 2089 Nov 15 13:36 SlsCfg-dev-sls-system.yaml
    -rw-r--r-- 1 david david  803 Nov 15 13:36 SmtpCfg-dev-smtp-system.yaml
    -rw-r--r-- 1 david david  429 Nov 15 13:36 Subscription-ibm-mas-operator.yaml
    -rw-r--r-- 1 david david  859 Nov 15 13:36 Suite-dev.yaml
    -rw-r--r-- 1 david david  373 Nov 15 13:36 Workspace-dev-demo.yaml
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: list of namespace resource backup files] ***
ok: [localhost] => 
  msg:
  - total 48
  - -rw-r--r-- 1 david david 6758 Nov 15 13:36 BasCfg-dev-bas-system.yaml
  - -rw-r--r-- 1 david david  977 Nov 15 13:36 CoreIDP-dev-coreidp.yaml
  - -rw-r--r-- 1 david david 1760 Nov 15 13:36 MongoCfg-dev-mongo-system.yaml
  - -rw-r--r-- 1 david david  869 Nov 15 13:36 OperatorGroup-ibm-mas-operator-group.yaml
  - -rw-r--r-- 1 david david  259 Nov 15 13:36 Secret-dev-credentials-superuser.yaml
  - -rw-r--r-- 1 david david 1010 Nov 15 13:36 Secret-ibm-entitlement.yaml
  - -rw-r--r-- 1 david david 2089 Nov 15 13:36 SlsCfg-dev-sls-system.yaml
  - -rw-r--r-- 1 david david  803 Nov 15 13:36 SmtpCfg-dev-smtp-system.yaml
  - -rw-r--r-- 1 david david  429 Nov 15 13:36 Subscription-ibm-mas-operator.yaml
  - -rw-r--r-- 1 david david  859 Nov 15 13:36 Suite-dev.yaml
  - -rw-r--r-- 1 david david  373 Nov 15 13:36 Workspace-dev-demo.yaml

TASK [ibm.mas_devops.suite_backup_restore : Copy backup files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: local storage job folder] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Debug: local storage job folder] ***
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'core-dev-full-20241115133503-namespace.tar.gz', 'dest_folder': 'namespace'}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/core-dev-full-20241115133503/namespace && cp -rf /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace.tar.gz /tmp/backup/backups/core-dev-full-20241115133503/namespace && ls -lA /tmp/backup/backups/core-dev-full-20241115133503/namespace
  delta: '0:00:00.003977'
  end: '2024-11-15 13:36:17.740110'
  item:
    dest_folder: namespace
    src_file: core-dev-full-20241115133503-namespace.tar.gz
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:17.736133'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 12
    -rw-r--r-- 1 david david 8326 Nov 15 13:36 core-dev-full-20241115133503-namespace.tar.gz
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 12
    - -rw-r--r-- 1 david david 8326 Nov 15 13:36 core-dev-full-20241115133503-namespace.tar.gz

TASK [ibm.mas_devops.suite_backup_restore : Set fact: cloud storage job folder] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'core-dev-full-20241115133503-namespace.tar.gz', 'dest_folder': 'namespace'})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: namespace
    src_file: core-dev-full-20241115133503-namespace.tar.gz
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Update namespace resource backup status: Completed] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/update_job_status.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_component] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_data_list] ***
changed: [localhost] => (item={'seq': '1', 'phase': 'Completed'}) => changed=true 
  ansible_loop_var: item
  item:
    phase: Completed
    seq: '1'
  masbr_job_data_list:
  - phase: Completed
    seq: '1'
    type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_data_list] *****
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_list:
    - phase: Completed
      seq: '1'
      type: namespace

TASK [ibm.mas_devops.suite_backup_restore : Get specified masbr_job_status.phase] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Get unique phases of all job data types] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_data_phases:
    - Completed

TASK [ibm.mas_devops.suite_backup_restore : Debug: unique phases of all job data types] ***
ok: [localhost] => 
  msg: Job data phases ................... ['Completed']

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('New')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('Completed')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    _job_status_:
      phase: Completed

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('PartiallyFailed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status_phase ('Failed')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('New')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('InProgress')] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.phase ('Completed', 'Failed', 'PartiallyFailed')] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_job_status:
      completionTimestamp: '2024-11-15T13:36:18'
      phase: Completed
      startTimestamp: '2024-11-15T13:36:01'

TASK [ibm.mas_devops.suite_backup_restore : Send notification] *****************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/send_notification.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: Slack message] ***********
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Send Slack message] ****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: append to masbr_job_status.sentNotifications (Slack)] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Update fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: masbr_job_status.sentNotifications] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: update job variables] *******
ok: [localhost] => 
  msg:
  - 'masbr_job_component .................... {''name'': ''core'', ''instance'': ''dev'', ''namespace'': ''mas-dev-core''}'
  - 'masbr_job_data_list .................... [{''seq'': ''1'', ''type'': ''namespace'', ''phase'': ''Completed''}]'
  - 'masbr_job_status ....................... {''phase'': ''Completed'', ''startTimestamp'': ''2024-11-15T13:36:01'', ''completionTimestamp'': ''2024-11-15T13:36:18''}'

TASK [ibm.mas_devops.suite_backup_restore : Create updated job file] ***********
changed: [localhost] => changed=true 
  checksum: 3083f50b00c869c6c47c43bbf907e1be47eca57e
  dest: /tmp/masbr/core-dev-full-20241115133503/backup.yml
  gid: 1000
  group: david
  md5sum: 6d20a73d4017898952a06d8abf006317
  mode: '0644'
  owner: david
  size: 492
  src: /home/david/.ansible/tmp/ansible-tmp-1731677779.007034-21257-8167433585129/source
  state: file
  uid: 1000

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: local storage job folder] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Debug: local storage job folder] ***
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/core-dev-full-20241115133503/ && cp -rf /tmp/masbr/core-dev-full-20241115133503/backup.yml /tmp/backup/backups/core-dev-full-20241115133503/ && ls -lA /tmp/backup/backups/core-dev-full-20241115133503/
  delta: '0:00:00.004516'
  end: '2024-11-15 13:36:19.546349'
  item:
    dest_folder: ''
    src_file: backup.yml
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:19.541833'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 8
    -rw-r--r-- 1 david david  492 Nov 15 13:36 backup.yml
    drwxr-xr-x 2 david david 4096 Nov 15 13:36 namespace
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 8
    - -rw-r--r-- 1 david david  492 Nov 15 13:36 backup.yml
    - drwxr-xr-x 2 david david 4096 Nov 15 13:36 namespace

TASK [ibm.mas_devops.suite_backup_restore : Set fact: cloud storage job folder] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': 'backup.yml', 'dest_folder': ''})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: ''
    src_file: backup.yml
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Append job final status to the job folder name] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Create a tar.gz archive of namespace resource backup log] ***
changed: [localhost] => changed=true 
  cmd: |-
    tar -czf /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace-log.tar.gz -C /tmp/masbr/core-dev-full-20241115133503 core-dev-full-20241115133503-namespace.log
  delta: '0:00:00.004450'
  end: '2024-11-15 13:36:19.970245'
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:19.965795'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Copy namespace resource backup log file to specified storage location] ***
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/copy_local_files_to_storage.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : Set fact: local storage job folder] ***
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_storage_job_folder: /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Debug: local storage job folder] ***
ok: [localhost] => 
  msg: Local storage job folder .......... /tmp/backup/backups/core-dev-full-20241115133503

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to local storage job folder] ***
changed: [localhost] => (item={'src_file': '/tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace-log.tar.gz', 'dest_folder': 'log'}) => changed=true 
  ansible_loop_var: item
  cmd: mkdir -p /tmp/backup/backups/core-dev-full-20241115133503/log && cp -rf /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace-log.tar.gz /tmp/backup/backups/core-dev-full-20241115133503/log && ls -lA /tmp/backup/backups/core-dev-full-20241115133503/log
  delta: '0:00:00.003971'
  end: '2024-11-15 13:36:20.364974'
  item:
    dest_folder: log
    src_file: /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace-log.tar.gz
  msg: ''
  rc: 0
  start: '2024-11-15 13:36:20.361003'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    total 4
    -rw-r--r-- 1 david david 741 Nov 15 13:36 core-dev-full-20241115133503-namespace-log.tar.gz
  stdout_lines: <omitted>

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to local storage job folder] ***
ok: [localhost] => 
  msg:
  - - total 4
    - -rw-r--r-- 1 david david 741 Nov 15 13:36 core-dev-full-20241115133503-namespace-log.tar.gz

TASK [ibm.mas_devops.suite_backup_restore : Set fact: cloud storage job folder] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Copy local job files to cloud storage job folder] ***
skipping: [localhost] => (item={'src_file': '/tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace-log.tar.gz', 'dest_folder': 'log'})  => changed=false 
  ansible_loop_var: item
  item:
    dest_folder: log
    src_file: /tmp/masbr/core-dev-full-20241115133503/core-dev-full-20241115133503-namespace-log.tar.gz
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Debug: copy local job files to cloud storage job folder] ***
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : After run tasks] *******************
included: /home/david/.ansible/collections/ansible_collections/ibm/mas_devops/common_tasks/backup_restore/after_run_tasks.yml for localhost

TASK [ibm.mas_devops.suite_backup_restore : After backup core] *****************
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Set fact: Ansible log path] ********
ok: [localhost] => changed=false 
  ansible_facts:
    masbr_ansible_log_name: core-dev-full-20241115133503-ansible
    masbr_ansible_log_path: ''

TASK [ibm.mas_devops.suite_backup_restore : Debug: Ansbile log path] ***********
skipping: [localhost] => 

TASK [ibm.mas_devops.suite_backup_restore : Create a tar.gz archive of Ansible log file] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Copy Ansible log file from local to storage location] ***
skipping: [localhost] => changed=false 
  skip_reason: Conditional result was False

TASK [ibm.mas_devops.suite_backup_restore : Delete local job folder] ***********
changed: [localhost] => changed=true 
  path: /tmp/masbr/core-dev-full-20241115133503
  state: absent

TASK [ibm.mas_devops.suite_backup_restore : Summary] ***************************
ok: [localhost] => 
  msg:
  - Job name ........................... core-dev-full-20241115133503
  - Job status ......................... Completed
  - Job storage location ............... /tmp/backup/backups/core-dev-full-20241115133503

PLAY RECAP *********************************************************************
localhost                  : ok=308  changed=39   unreachable=0    failed=0    skipped=261  rescued=0    ignored=0   

